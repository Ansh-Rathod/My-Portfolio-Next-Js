// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/data/memes.ts
export const memes = [
  {
    title: "I don't build websites. we are not the same.",
    id: "1637721196337700866",
    tags: ["gus", "website", "web", "breaking bad", "opinion"],
    likes: 250,
    link: "https://twitter.com/anshrathodfr/status/1637721196337700866",
    created_on: "Mar 20, 2023",
    path: "/memes/we-are-not-the-same.jpeg",
    type: "image",
  },
  {
    title: "I am sorry, but you have to understand I can't go any much lower.",
    id: "1628256585381302273",
    tags: ["pawn stars", "chumlee", "friend", "gold", "website"],
    likes: 11,
    link: "https://twitter.com/anshrathodfr/status/1628256585381302273",
    created_on: "Feb 22, 2023",
    path: "/memes/all-i-can-do-is-50-gold-coins.jpeg",
    type: "image",
  },
  {
    title: "Ig we all have that classmate.",
    id: "1628618171795099651",
    tags: [
      "classmate",
      "linkedin",
      "apps",
      "web3",
      "full stack",
      "todo list",
      "weather app",
    ],
    likes: 34,
    link: "https://twitter.com/anshrathodfr/status/1628618171795099651",
    created_on: "Feb 23, 2023",
    path: "/memes/full-stack-dev-after-building-whether-app.jpeg",
    type: "image",
  },
  {
    title: "Me as a flutter developer finding js frameworks to build web apps.",
    id: "1629008037582106624",
    tags: ["flutter", "web", "weed", "red", "reactjs", "angular", "vuejs"],
    likes: 22,
    link: "https://twitter.com/anshrathodfr/status/1629008037582106624",
    created_on: "Feb 24, 2023",
    path: "/memes/flutter-dev-on-drugs.jpeg",
    type: "image",
  },
  {
    title: "Some founders says @supabase has some superpowers for saving time.",
    id: "1629374189143740419",
    tags: ["supabase", "founders", "superpower"],
    likes: 29,
    link: "https://twitter.com/anshrathodfr/status/1629374189143740419",
    created_on: "Feb 25, 2023",
    path: "/memes/supabse-meme.jpeg",
    type: "image",
  },
  {
    title: "Yes, please developers how?",
    id: "1629727538967724033",
    tags: ["nextjs", "reactjs", "web"],
    likes: 50,
    link: "https://twitter.com/anshrathodfr/status/1629727538967724033",
    created_on: "Feb 26, 2023",
    path: "/memes/why-nextjs-is-framework.jpeg",
    type: "image",
  },
  {
    title: "is it only me or every one double checks if it's copied or not?",
    id: "1630091161628024832",
    tags: ["spounch", "shortcut"],
    likes: 15,
    link: "https://twitter.com/anshrathodfr/status/1630091161628024832",
    created_on: "Feb 27, 2023",
    path: "/memes/6-ctrl-c.jpeg",
    type: "image",
  },
  {
    title: "well, I started to watch some tutorials about ML some days ago.",
    id: "1630457593654042624",
    tags: ["chatGPT", "python", "google", "hello world", "ai/ml"],
    likes: 15,
    link: "https://twitter.com/anshrathodfr/status/1630457593654042624",
    created_on: "Feb 28, 2023",
    path: "/memes/hello-world-in-python-beating-chatgpt.jpeg",
    type: "image",
  },
  {
    title: "Sometimes, It's a roller coaster ride after you hit `flutter run`",
    id: "1630816958852546562",
    tags: ["flutter", "dart", "android"],
    likes: 13,
    link: "https://twitter.com/anshrathodfr/status/1630816958852546562",
    created_on: "Mar 1, 2023",
    path: "/memes/flutter-dev-compiling-app.jpeg",
    type: "image",
  },
  {
    title: "well, in real-world vscode ftw.",
    id: "1631179089875816448",
    tags: ["vscode", "college", "web", "tabnine", "exams", "github"],
    likes: 20,
    link: "https://twitter.com/anshrathodfr/status/1631179089875816448",
    created_on: " Mar 2, 2023",
    path: "/memes/me-writing-code-on-paper-in-exams.jpeg",
    type: "image",
  },
  {
    title:
      "It happens in my every project. and I end up refactoring them after some months.",
    id: "1631544766188908545",
    tags: ["code", "project", "refactor", "clean code", "drawing", "horse"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1631544766188908545",
    created_on: "Mar 3, 2023",
    path: "/memes/follow-best-proctices.jpeg",
    type: "image",
  },
  {
    title: "Do you argue over designs?",
    id: "1631904633391050752",
    tags: ["designers", "argue", "developers", "frontend"],
    likes: 27,
    link: "https://twitter.com/anshrathodfr/status/1631904633391050752",
    created_on: "Mar 4, 2023",
    path: "/memes/developers-arguing-with-designers.jpeg",
    type: "image",
  },
  {
    title: "This is how you can save 10 mins in your work hour while working.",
    id: "1632264256010764288",
    tags: ["twitter", "new tab"],
    likes: 12,
    link: "https://twitter.com/anshrathodfr/status/1632264256010764288",
    created_on: "Mar 5 2023",
    path: "/memes/you-will-not-open-twitter-after-opening-new-tab.jpeg",
    type: "image",
  },
  {
    title:
      "We, developers, are not dumb!  we are just expecting a different error message.",
    id: "1632627901643276292",
    tags: ["error", "developer", "dumb", "expecting"],
    likes: 9,
    link: "https://twitter.com/anshrathodfr/status/1632627901643276292",
    created_on: "Mar 6, 2023",
    path: "/memes/me-seeing-error-for-the-5th-time.jpeg",
    type: "image",
  },
  {
    title: "Personally, I think having a good Github as a dev is a superpower.",
    id: "1632994309363335174",
    tags: ["github", "developer", "superpower", "story"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1632994309363335174",
    created_on: "Mar 7, 2023",
    path: "/memes/one-hell-of-developer.jpeg",
    type: "image",
  },
  {
    title: "mature meme",
    id: "1633353683772604417",
    tags: ["mature", "app", "startup", "founders", "story"],
    likes: 19,
    link: "https://twitter.com/anshrathodfr/status/1633353683772604417",
    created_on: "Mar 8, 2023",
    path: "/memes/mature-meme.jpeg",
    type: "image",
  },
  {
    title: "14 years kids huh",
    id: "1633715821125017600",
    tags: ["14-year", "kids", "developer", "code", "twitter", "story"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1633715821125017600",
    created_on: "Mar 9, 2023",
    path: "/memes/14-year-old-kids-can-code-better-than-you.jpeg",
    type: "image",
  },
  {
    title: "people who review code won't forgive you.",
    id: "1634441340976091136",
    tags: ["code", "horse", "variables", "javascript"],
    likes: 8,
    link: "https://twitter.com/anshrathodfr/status/1634441340976091136",
    created_on: "Mar 11, 2023",
    path: "/memes/how-do-you-name-your-variables.jpeg",
    type: "image",
  },
  {
    title: "Yay! my code is running!",
    id: "1634800969929093120",
    tags: ["python", "code", "compiler"],
    likes: 3,
    link: "https://twitter.com/anshrathodfr/status/1634800969929093120",
    created_on: "Mar 12, 2023",
    path: "/memes/running-cpp-program-in-python-compiler.gif",
    type: "image",
  },
  {
    title: "Developers, this is called OCD - obsessive coding disorder",
    id: "1635184517093752833",
    tags: ["discorder", "code", "constistency", "animal", "app", "apps"],
    likes: 37,
    link: "https://twitter.com/anshrathodfr/status/1635184517093752833",
    created_on: "Mar 13, 2023",
    path: "/memes/it-is-disorder.jpeg",
    type: "image",
  },
  {
    title: "Frontend developers while working for someone else",
    id: "1635548880682078209",
    tags: ["frontend", "developers", "animal", "routine"],
    likes: 21,
    link: "https://twitter.com/anshrathodfr/status/1635548880682078209",
    created_on: "Mar 14, 2023",
    path: "/memes/i-wake-up-and-suffer.jpeg",
    type: "image",
  },
  {
    title: "Ever happened to you?",
    id: "1635909519157886977",
    tags: ["breaking bad", "backend", "pr", "github", "server"],
    likes: 3,
    link: "https://twitter.com/anshrathodfr/status/1635909519157886977",
    created_on: "Mar 15, 2023",
    path: "/memes/backend-server-crashed.gif",
    type: "image",
  },
  {
    title: "Flutter developers would love to hear more.",
    id: "1636271664844484610",
    tags: ["startup", "founders", "investers", "flutter", "getx"],
    likes: 96,
    link: "https://twitter.com/anshrathodfr/status/1636271664844484610",
    created_on: "Mar 16, 2023",
    path: "/memes/flutter-wont-scale-as-your-app-gets-complex.jpeg",
    type: "image",
  },
  {
    title: "The dog was a developer.",
    id: "1636634026852204545",
    tags: ["dog", "developer", "ai/ml", "chatGPT", "story"],
    likes: 21,
    link: "https://twitter.com/anshrathodfr/status/1636634026852204545",
    created_on: "Mar 17, 2023",
    path: "/memes/ai-can-build-website-from-sketch.jpeg",
    type: "image",
  },
  {
    title: "And still, the backend will be crashed in the 10th loop.",
    id: "1636996429519499268",
    tags: ["backend", "server", "spammer", "developer", "bateman", "sigma"],
    likes: 13,
    link: "https://twitter.com/anshrathodfr/status/1636996429519499268",
    created_on: "Mar 18, 2023",
    path: "/memes/spammer-tester.gif",
    type: "image",
  },
  {
    title: "well, that's impossible.",
    id: "1637360564253999106",
    tags: ["ui", "designers", "backend", "bug", "sigma", "homelander"],
    likes: 11,
    link: "https://twitter.com/anshrathodfr/status/1637360564253999106",
    created_on: "Mar 19, 2023",
    path: "/memes/ui-designer-solved-backend-bug.mp4",
    type: "video",
  },
  {
    title: "At least I can refer someone. who also might say no.",
    id: "1638085630398742528",
    tags: ["client", "breaking bad", "developer"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1638085630398742528",
    created_on: "Mar 21, 2023",
    path: "/memes/client-with-low-budget.mp4",
    type: "video",
  },
  {
    title: "I'll try not to tweet or create opinionated memes.",
    id: "1638446222246543360",
    tags: ["twitter", "controversial", "opinion"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1638446222246543360",
    created_on: "Mar 22, 2023",
    path: "/memes/controversial-tweet-geting-more-reach.jpeg",
    type: "image",
  },
  {
    title: "Aspiring* web dev willy wonka didn't like the fact.",
    id: "1638808347842596865",
    tags: ["aspiring", "web", "dev", "willy", "wonka", "developer"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1638808347842596865",
    created_on: "Mar 23, 2023",
    path: "/memes/aspiring-web-developer-willy-wonka.jpeg",
    type: "image",
  },
  {
    title:
      "Now it takes 5 sec to write code using chatGPT which I usually took 5 hours to write.",
    id: "1640257904866390017",
    tags: ["black guy", "really", "chatGPT", "ai/ml", "developer", "code"],
    likes: 13,
    link: "https://twitter.com/anshrathodfr/status/1640257904866390017",
    created_on: "Mar 27, 2023",
    path: "/memes/your-code-will-be-your-legacy.jpeg",
    type: "image",
  },
  {
    title: "Developers, chatGPT won't make you feel dumb at least.",
    id: "1640622315120599046",
    tags: ["developer", "chatGPT", "ai/ml", "code"],
    likes: 7,
    link: "https://twitter.com/anshrathodfr/status/1640622315120599046",
    created_on: "Mar 28, 2023",
    path: "/memes/ask-chatgpt.jpeg",
    type: "image",
  },
  {
    title:
      "with the help of GitHub copilot, chatGPT, and other AI tools we are gonna review/test/debug the AI-written code mostly than write the whole code on our own.",
    id: "1640982933874909186",
    tags: [
      "github",
      "chatGPT",
      "ai/ml",
      "developer",
      "code",
      "debug",
      "test",
      "review",
    ],
    likes: 4,
    link: "https://twitter.com/anshrathodfr/status/1640982933874909186",
    created_on: "Mar 29, 2023",
    path: "/memes/you-are-broke.jpeg",
    type: "image",
  },
  {
    title: "this one is from the latest experience.",
    id: "1647132705480404993",
    tags: ["chatGPT", "ai/ml", "developer", "code", "experience", "thor"],
    likes: 7,
    link: "https://twitter.com/anshrathodfr/status/1647132705480404993",
    created_on: "Apr 15, 2023",
    path: "/memes/chatgpts-response-after-regenrating-it-for-fifth-time.jpeg",
    type: "image",
  },
  {
    title: "once in a while a day in the life of Flutter dev.",
    id: "1648572874574245891",
    tags: ["flutter", "getx", "experience"],
    likes: 22,
    link: "https://twitter.com/anshrathodfr/status/1648572874574245891",
    created_on: "Apr 19, 2023",
    path: "/memes/why-not-getx.jpeg",
    type: "image",
  },
  {
    title:
      "Yesterday, in the LinkedIn group I show someone's post lol, I enjoyed the comment section.",
    id: "1648917561398943745",
    tags: ["linkedin", "breaking bad", "comment", "opinion"],
    likes: 6,
    link: "https://twitter.com/anshrathodfr/status/1648917561398943745",
    created_on: "Apr 20, 2023",
    path: "/memes/shared-opinion-on-linkedin.mp4",
    type: "video",
  },
  {
    title:
      "Sorry but then it throws runtime-type errors. we are not used to it until we use a cast.",
    id: "1649317606937985024",
    tags: ["flutter", "type", "error", "javascript", "cast"],
    likes: 12,
    link: "https://twitter.com/anshrathodfr/status/1649317606937985024",
    created_on: "Apr 21, 2023",
    path: "/memes/flutter-developers-trying-out-javascript-after-years.jpeg",
    type: "image",
  },
  {
    title:
      "Dart & typescript developers can understand what went wrong. try to see it carefully.",
    id: "1649732294607794176",
    tags: ["dart", "flutter", "typescript", "cast"],
    likes: 16,
    link: "https://twitter.com/anshrathodfr/status/1649732294607794176",
    created_on: "Apr 22, 2023",
    path: "/memes/when-you-start-using-cast.jpeg",
    type: "image",
  },
  {
    title: "I selected and commented the code. bug is solved.",
    id: "1650044144234971137",
    tags: ["bug", "comment", "code"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1650044144234971137",
    created_on: "Apr 23, 2023",
    path: "/memes/how-did-you-solve-the-bug.jpg",
    type: "image",
  },
  {
    title: "This will be me to my kids:",
    id: "1650413182081544194",
    tags: ["ai/ml", "chatGPT", "developer", "code", "stackoverflow"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1650413182081544194",
    created_on: "Apr 24, 2023",
    path: "/memes/back-in-the-day.jpeg",
    type: "image",
  },
  {
    title: "I'm serial killer.",
    id: "1650769169422471168",
    tags: ["sigma", "developer", "debug", "code"],
    likes: 23,
    link: "https://twitter.com/anshrathodfr/status/1650769169422471168",
    created_on: "Apr 25, 2023",
    path: "/memes/debuging-code-sigma-meme.jpeg",
    type: "image",
  },
  {
    title:
      "Gone but not forgotten, our heavenly god may not open heaven's door for your soul.",
    id: "1651138607145529344",
    tags: ["developer", "freelancer", "story", "experience"],
    likes: 14,
    link: "https://twitter.com/anshrathodfr/status/1651138607145529344",
    created_on: "Apr 26, 2023",
    path: "/memes/100-dollor-gig.jpeg",
    type: "image",
  },
  {
    title: "Who is confused here? can not find any javascript developer.",
    id: "1651565037889150976",
    tags: ["javascript", "developer", "code", "experience"],
    likes: 27,
    link: "https://twitter.com/anshrathodfr/status/1651565037889150976",
    created_on: "Apr 27, 2023",
    path: "/memes/weired-javascript.mp4",
    type: "video",
  },
  {
    title: "Sigma tech bro @TheJackForge once said.....",
    id: "1651854321015832577",
    tags: ["comment", "code", "sigma"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1651854321015832577",
    created_on: "Apr 28, 2023",
    path: "/memes/writing-comments-is-bad-practice.jpeg",
    type: "image",
  },
  {
    title: "you use GitHub copilot, right?",
    id: "1652206146701123585",
    tags: ["github", "copilot", "ai/ml", "code"],
    likes: 16,
    link: "https://twitter.com/anshrathodfr/status/1652206146701123585",
    created_on: "Apr 29, 2023",
    path: "/memes/github-copilot-meme.mp4",
    type: "video",
  },
  {
    title: "Developers have you ever felt this?",
    id: "1652941480997076992",
    tags: ["developer", "experience", "story", "hype", "tech"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1652941480997076992",
    created_on: "May 1, 2023",
    path: "/memes/i-am-tired-boss.jpeg",
    type: "image",
  },
  {
    title: "Bro, not cool. at least call openAI API in the app.",
    id: "1653666508780761088",
    tags: ["openAi", "ai/ml", "producthunt", "launch", "tech"],
    likes: 15,
    link: "https://twitter.com/anshrathodfr/status/1653666508780761088?s=20",
    created_on: "May 3, 2023",
    path: "/memes/not-cool-bro-product-launch.jpeg",
    type: "image",
  },
  {
    title: "Believe it or not, we are tech geniuses. ask your cousins.",
    id: "1654034729769861122",
    tags: ["taylor", "inspect", "html", "hack", "genius"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1654034729769861122?s=20",
    created_on: "May 4, 2023",
    path: "/memes/kanye-west-taylor-swift-meme.jpeg",
    type: "image",
  },
  {
    title: "Maybe he meant 'eating while debugging'.",
    id: "1654391038318981120",
    tags: ["fun fact", "fat guy", "error", "code", "hack"],
    likes: 6,
    link: "https://twitter.com/anshrathodfr/status/1654391038318981120?s=20",
    created_on: "May 5, 2023",
    path: "/memes/confident-fat-guy-advise.jpeg",
    type: "image",
  },
  {
    title: "Some nerd developers trying to be cool.",
    id: "1655487764048248832",
    tags: ["fun fact", "fat guy", "error", "code", "hack"],
    likes: 6,
    link: "https://twitter.com/anshrathodfr/status/1655487764048248832?s=20",
    created_on: "May 8, 2023",
    path: "/memes/me-trying-too-type-faster.mp4",
    type: "video",
  },
  {
    title: "Did my best to use this template .",
    id: "1658461994922418178",
    tags: ["ai/ml", "todo", "app", "dank"],
    likes: 35,
    link: "https://twitter.com/anshrathodfr/status/1658461994922418178?s=20",
    created_on: "May 16, 2023",
    path: "/memes/ai-in-todo-app.jpeg",
    type: "image",
  },
  {
    title: "Huh! content creators these days.",
    id: "1660940642975981568",
    tags: ["content creators", "story", "ai/ml"],
    likes: 80,
    link: "https://twitter.com/anshrathodfr/status/1660940642975981568?s=20",
    created_on: "May 23, 2023",
    path: "/memes/10-ai-tool-that-you-dont-know-about.jpg",
    type: "image",
  },
  {
    title: "Flutter developers sorry!🙂",
    id: "1665662788017049602",
    tags: ["flutter", "sarcasm", "native", "framework", "language"],
    likes: 270,
    link: "https://twitter.com/anshrathodfr/status/1665662788017049602?s=20",
    created_on: "Jun 5, 2023",
    path: "/memes/native-framwork-and-languages-flutter.jpeg",
    type: "image",
  },
];


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/data/pd.ts
import PocketBase from "pocketbase";

const pb = new PocketBase(process.env.POCKETBASE_API!);

export default pb;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/data/projects.ts
export const projects: any = [
  {
    name: "Cineast",
    madeWith: "Flutter, Node.js, PostgreSQL",
    date: "22 Feb 2022",

    type: "horizontal",

    long_description:
      "Social media platform for movie enthusiasts. Share thoughts, reviews, and ratings about movies/tv-shows with your social network. <br/><br/>Scroll through reviews and thoughts about movies from the people you follow on your personalized home feed. Explore top trending movies & tv shows and get details about them. Find them by a specific genre or from actor/actresses or crew members and filter by any desired language.<br/><br/>Browse popular, highly rated, and most anticipated films, including trailers, member ratings, artwork, cast + crew details, studios, genres, and popular reviews.<br/><br/>Follow Other people on the platform & get reviews about what they are watching.",
    description:
      "Social media platform for movie geeks. share thoughts of movie to your circle.",
    url: "https://play.google.com/store/apps/details?id=com.cineast.android",
    images: ["Cineast-1.PNG", "Cineast-2.PNG", "Cineast-3.PNG"],
    image: "Cineast-1.PNG",
  },
  {
    name: "Musive",
    madeWith: "Flutter, Node.js, PostgreSQL, and Heroku",
    type: "horizontal",
    date: "18 Jan 2022",
    long_description:
      "Full-stack music player app is written in flutter and dart using node.js music API. Fully Functional music player with UI like Spotify app. Added 1000+ royalty-free music and information about artists. Application users can make their own playlist or collect liked songs.",
    description: "Fully working music streaming app with spotify UI design.",
    url: "https://github.com/Ansh-Rathod/Flutter-musive-app",
    images: ["Musive-1.PNG", "Musive-2.PNG", "Musive-3.PNG"],
    image: "Musive-3.PNG",
  },
  {
    name: "Photoarc",
    madeWith: "Flutter, Node.js  PostgreSQL and Heroku",
    type: "horizontal",
    date: "24 nov 2021",
    long_description:
      "(Full-stack) Fully functional social media app (Instagram clone) written in flutter and dart with backend node.js and Postgres SQL.",
    description:
      "(Full-stack) Fully functional social media app (Instagram clone).",
    url: "https://github.com/Ansh-Rathod/Flutter-Photoarc-app",
    images: [
      "Photoarc-1.PNG",
      "Photoarc-2.PNG",
      "Photoarc-3.PNG",
      "Photoarc-4.PNG",
    ],
    image: "Photoarc-1.PNG",
  },

  // {
  // 	name: 'Tiktok video scroller',
  // 	madeWith: 'Flutter',
  // 	date: '5 september 2021',
  // 	description:
  // 		"Real short video app with firebase and pixels API. Where user can create a short video with pixels' stock videos.",
  // 	url: 'https://github.com/Ansh-Rathod/Flutter-Tiktok-Videos',
  // 	image: 'projects/Web capture_4-12-2021_213416_github.com.jpeg',
  // },

  {
    name: "MovieDb",
    madeWith: "Flutter",
    type: "horizontal",
    date: "13 July 2021",
    long_description:
      "Find The Latest, trending, upcoming movies/tv-shows with MovieDB app. The app contains all information about movies/tv-shows and find similar movies/shows of your intrest. Browse all genres, video trailers, backdrops, logos, and posters for any movie.\n App made using flutter as frontend and Nodejs as backend.",
    description:
      "Find The Latest trending and upcoming movies and tv shows with MovieDB app.",
    url: "https://github.com/Ansh-Rathod/Flutter-Bloc-MovieDB-App",
    images: ["Moviedb-1.PNG", "Moviedb-2.PNG", "Moviedb-3.PNG"],
    image: "Moviedb-2.PNG",
  },

  {
    name: "Quizer",
    madeWith: "Flutter",
    type: "horizontal",
    date: "24 june 2021",

    description:
      "Quiz application with open trivia API. Play quiz online and test your trivia knowledge.",
    long_description: "Quiz application with open trivia API.",
    url: "https://github.com/Ansh-Rathod/Flutter-bloc-Animalia",
    images: ["Quizer-1.PNG", "Quizer-2.PNG", "Quizer-3.PNG"],
    image: "Quizer-1.PNG",
  },
  {
    name: "Animalia",
    type: "horizontal",
    madeWith: "Flutter",
    date: "16 june 2021",
    description:
      "Discover cute, wild, and weird animals using the Animalia app.",
    long_description:
      "Discover cute, wild, and weird animals using the Animalia app.",
    url: "https://github.com/Ansh-Rathod/Flutter-bloc-Animalia",
    images: ["Animalia-1.PNG", "Animalia-2.PNG", "Animalia-3.PNG"],
    image: "Animalia-3.PNG",
  },

  {
    name: "Sponacular",
    madeWith: "Flutter",
    date: "25 May 2021",
    type: "horizontal",

    long_description:
      "A Recipe app with spoonacular API.App includes 5,0000+ recipes. cost breakdown per servings.",
    description:
      "A Recipe app with spoonacular API.App includes 5,0000+ recipes. cost breakdown per servings.",
    url: "https://github.com/Ansh-Rathod/Flutter-Bloc-Recipe-app",
    images: ["Spoonacular-1.PNG", "Spoonacular-2.PNG", "Spoonacular-3.PNG"],
    image: "Spoonacular-1.PNG",
  },
  {
    name: "Marvel",
    madeWith: "Flutter",
    type: "horizontal",
    date: "12 mar 2021",

    description:
      "Simple Superheros information app with animations and local database.",
    long_description:
      "Simple Superheros information app with animations and local database.",
    url: "https://github.com/Ansh-Rathod/Flutter-Bloc-Marvel-App",
    images: ["Marvel-1.PNG", "Marvel-2.PNG", "Marvel-3.PNG"],
    image: "Marvel-1.PNG",
  },
];

export const usefulProjects: any = [
  {
    name: "persisto",
    madeWith: "Flutter, sqlite, nextjs",
    date: "5 may 2025",
    type: "vertical",
    long_description:
      "<div>build a life you're proud of, one routine at a time. whether you're planning your day, staying consistent, or reflecting on what matters, persisto provides the tools you need to stay focused, mindful, and in control of your progress.</div>",
    description: "small wins, every day!",
    url: "https://persis.to",
    images: [
      "persisto-1.png",
      "persisto-2.png",
      "persisto-3.png",
      "persisto-4.png",
      "persisto-5.png",
      "persisto-6.png",
      "persisto-7.png",
      "persisto-8.png",
    ],
    image: "persisto.png",
  },
  {
    name: "Pimosa",
    madeWith: "Flutter, sqlite, nextjs, FFmpeg, ImageMagick",
    date: "27 July 2024",
    type: "vertical",
    long_description:
      "<div>Pimosa: Simple Video, Photo & Music Editing Tools in One App<br/>Convert, edit, and enhance video, photo, and music files easily. Batch processing for faster work. Simple tools for everyone.<br/><br/>Tools are organized into categories by file type:<br/><br/>Video Tools:<br/>• Compress<br/>• Merge & Combine<br/>• Resize & Rotate<br/>• Speed Control<br/>• Flip & Mirror<br/>• Convert Formats<br/>• Extract Audio<br/>• Trim & Cut<br/><br/>Image Tools:<br/>• Convert Formats<br/>• Compress<br/>• Resize<br/>• Crop<br/><br/>Audio Tools:<br/>• Extract from Video<br/>• Convert Formats<br/>• Edit Metadata<br/>• Create Waveform Videos<br/><br/>Video Playground:<br/>• Crop Videos<br/>• Combine Clips<br/><br/>All your essential media editing tools—in one place!</div>",
    description: "Simple Video, Photo & Music Editing Tools in one app. ",
    url: "https://pimosa.app",
    images: [
      "pimosa-1.png",
      "pimosa-2.png",
      "pimosa-3.png",
      "pimosa-4.png",
      "pimosa-5.png",
      "pimosa-6.png",
      "pimosa-7.png",
      "pimosa-8.png",
    ],
    image: "pimosa-logo.png",
  },
  {
    name: "Keystro",
    madeWith: "Flutter",
    date: "23 April 2024",
    type: "vertical",
    long_description:
      "Show which key you pressing to your audience, Highlight your cursor, and hear realistic keyboard sounds! Available for Windows and MacOS.<br/> <br/> Fully Customizable Floating Keystroke Widget.Personalize keycap colors, Explore diffrent styles and themes. Enjoy Flexible widget placement: Any pixel of your screen; Your choice! <br/> <br/> Highlight the cursor. Our cursor highlighter is highly customizable. Pick your shape, size, and colors. You'll effortlessly create a breathtaking design that will amaze your audience.<br/><br/>Hear realistic keyboard sounds! Don't have mechanical keyboards but miss those juicy sounds? Thock is the perfect feature we brought for you.",
    description: "Enhance Your Screen Recording Experience!",
    url: "https://keystro.app",
    images: ["keystro-1.png", "keystro-2.png", "keystro-3.png"],
    image: "keystro-logo.png",
  },
];

export const newProjects: any = [
  {
    name: "Craftor",
    madeWith: "Flutter",
    date: "8 July 2023 - April 2024",
    type: "vertical",
    description:
      "Attempt of building a graphic design tool better than canva from scratch as solo developer.",
    long_description:
      "This app was attempt of building a grapich design tool better than canva from scratch. I went very deep into the concepts of flutter and maths to build the features of this app. usually i build apps solo but this time i got friend who helped me with some parts of figuring out maths.<br/><br/> i nearly completed the app like 70% of the feautres but i spent 8 months on this project and tired as hell to finish it. I abandoned the porject in april 2024 because the project was quite ambitious also required so much work to be done to launch in the very competive market among big design tools, then i started building the small app 'keystro' with friend Damy. <br/> <br/> Craftor is first abandon project and it will allways be the best app i ever built, I built this app in public you can check out the journey of building & demo videos on this official twitter account i made for Craftor app [hit the visit button below].",
    url: "https://x.com/craftor_app",
    images: ["Craftor-1.jpeg", "Craftor-2.jpeg", "Craftor-3.jpeg"],
    image: "Craftor-1.jpeg",
  },
  {
    name: "Schedurio",
    madeWith: "Flutter, X/Twitter API,supabase/PostgreSQL",
    date: "8 April 2023",
    type: "vertical",
    description: "Open source Tweet schedular desktop app.",
    long_description:
      "Fully functional Tweet schedular desktop app with Supabase and PostgreSQL. Built while supabase launch week hackathon. and got 1st runner up prize.",
    url: "https://github.com/Ansh-Rathod/Flutter-Schedurio-app",
    images: [
      "Schedurio-1.png",
      "Schedurio-2.png",
      "Schedurio-3.png",
      "Schedurio-4.png",
    ],
    image: "Schedurio-1.png",
  },
  {
    name: "Musive Webapp",
    madeWith: "Nextjs, Node.js, PostgreSQL",
    date: "27 Oct 2022",
    type: "vertical",
    long_description:
      "Musive is a full-stack music player app. It is written in Nextjs and Node.js with PostgreSQL as database. The app has a beautiful UI and is fully functional. Users can create their own playlists and collect liked songs. The app is fully responsive and works on all devices.",
    description:
      "Full Spotify clone webapp with Nextjs and Node.js with PostgreSQL as database.",
    url: "https://github.com/Ansh-Rathod/Nextjs-musive-app",
    images: [
      "Musive-web-1.png",
      "Musive-web-2.png",
      "Musive-web-3.png",
      "Musive-web-4.png",
    ],
    image: "Musive-web-1.png",
  },
];

export const allHisProjects: any = [
  ...newProjects,
  ...projects,
  ...usefulProjects,
];


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/About.tsx
import Link from "next/link";
import { useEffect, useState } from "react";

function calculateAge(year: number, month: number, day: number) {
  const today = new Date();
  const birthDate = new Date(year, month - 1, day);
  let age = today.getFullYear() - birthDate.getFullYear();
  const m = today.getMonth() - birthDate.getMonth();
  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
    age--;
  }
  return age;
}

const About = () => {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);
  return (
    <div
      id="about"
      className="bg-white py-[100px] w-screen max-w-full "
    >
      {" "}
      <div className="small-container mb-20">
        <h1 className="text-h1 mb-5 ">Basic Info:</h1>
        <p className="text-gray-500 text-body">
          <span className="text-black font-bold">Name:</span> Ansh Rathod
          <br />
          <span className="text-black font-bold">
            Other names given by family:
          </span>{" "}
          appii
          <br />
          <span className="text-black font-bold">Born on:</span> 2 may 2003
          <br />
          <span className="text-black font-bold">Age:</span>{" "}
          {isClient ? (
            <span suppressHydrationWarning>{calculateAge(2003, 5, 2)}</span>
          ) : (
            "21"
          )}
          <br />
          <span className="text-black font-bold">Location:</span> 127.0.0.1
          <br />
          <span className="text-black font-bold">Weight:</span> ~77 kg
          <br />
          <span className="text-black font-bold">Height:</span> 178 cm
          (5&apos;10&quot;)
          <br />
          <span className="text-black font-bold">Goal:</span> to build digital
          products that will help people.
          <br />
          <span className="text-black font-bold">Fav phrase:</span> nerd today,
          boss tomorrow!
          <br />
          <span className="text-black font-bold">Writes code on:</span> 13 inch
          Macbook air (2020) 16GB RAM, 256 SSD, M1 Chip.(no monitors)
          <br />
          <span className="text-black font-bold">
            Receives notifications on:
          </span>{" "}
          iPhone 16 pro (2025)
          <br />
          <span className="text-black font-bold">
            Subscriptions he pays:
          </span>{" "}
          Spotify Premium, chatgpt, grok, twitter(x), digital ocean droplet,
          vercel
          <br />
          <span className="text-black font-bold">Fav apps he uses:</span> Hevy,
          strava, screen studio, warp
          <br />
          <span className="text-black font-bold">Fav exercise:</span> bench
          press
          <br />
        </p>
      </div>
      <div className=" flex flex-col justify-center small-container  
        <div className=" ">
          <h1 className="text-h1">HIS Story</h1>
          <p className="text-gray-500 text-description">
            He wrote this section BTW
          </p>
        </div>

        <div className="mt-10  py-2  text-[18px]   
          <p>
            Hello! My name is <b>Ansh Rathod</b>, I&apos;m a self-taught
            full-stack developer who wrote the first line of code in the 2020
            Corona lockdown. I think I&apos;m a fast learner & implementor so I
            have tried many trendy frameworks, and languages that come and gone
            since I started.
          </p>
          <br />
          <p>
            I started for the passion and was building & completing apps like
            madmen till 2023, most of my 25+ apps are open source on my Github
            which are just <b className="text-black">hard-to-build</b> but{" "}
            <i>fun </i>
            projects (but not directly useful).
          </p>
          <br />
          {/* <p>
            Then realized that life is more than writing code and mindlessly
            gaining skills I should start earning with these skills too.
          </p> */}
          <br />
          <p>
            I always wanted to build something of my own so I started observing
            indie makers on X/Twitter [still observing] and I have learned so
            much about what kind of product would buy and actually be useful for
            a person. [well I have made all apps that are good for resume only
            till now🙈 you can check the list somewhere on this site].
          </p>
          <br />

          <p>
            As i design mine own apps and spend so much time building and
            observing i decided to build the my own product, In June 2024 I
            started building a desktop app{" "}
            <Link href="https://pimosa.app">
              <span className="text-blue-500">https://pimosa.app</span>
            </Link>{" "}
            where user will have a number of editing tools for video, photo, and
            music files in one desktop app.
          </p>
          <br />
          <p>
            I tweeted about the paid beta version of it and turned out it is
            very simple & useful for some people I ended up making $300+ in the
            first few hours of my tweet. realized &quot;Huh I made something
            good&quot;.
          </p>
          <br />
          <p>This is how i started monetizing my apps.</p>
        </div>
      </div>
    </div>
  );
};

export default About;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/AllProjects.tsx
import ProjectComponent from "@/components/Project";
import { projects } from "data/projects";

function AllProjects() {
  return (
    <div>
      <div className="backdrop-blur-[100px] bg-white/60 ">
        <div className="">
          <div className="max-w-[1000px] m-auto   px-6 ">
            <div className="py-10 max-w-[600px] mx-auto">
              <h1 className="pb-1 text-3xl lowercase text-black ">
                OPEN SOURCE APPS HE BUILT BEFORE 2022
              </h1>

              <p className="text-slate-500 text-[18px] mt-4">
                He built some open-source fully functional apps in order to
                learn and improve the building skills.
              </p>
              <br />
              <p className="text-slate-500 text-[14px] mt-4">
                click on the card to view some images and information about the
                app.
              </p>
            </div>
            <div className="grid grid-cols-2 gap-4 
              {projects.map((project: any, i: number) => (
                <ProjectComponent key={project.name} project={project} i={i} />
              ))}
            </div>
          </div>
        </div>
      </div>
      {/* <div className="my-10 text-[17px] max-w-[600px]  px-6  py-2  
        <p>Message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            These useless apps are avaialble on github go use/fork them. but i
            no longer maintain them.
          </p>
        </div>
      </div> */}
    </div>
  );
}

export default AllProjects;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Contact.tsx
import Icon from "@/components/Icon";
import Image from "next/image";
function Contact() {
  return (
    <div id="contact">
      <div className="bg-white pt-[10px] pb-[60px]   border-slate-200 m-auto max-w-[600px] ">
        <div className="px-6">
          <h1 className="font-bold mb-1.5 text-3xl lowercase ">Contact Him:</h1>
          <p className="text-slate-500 text-[18px]  mt-2">
            Leave a message on any of his social media, He&apos;ll reach out to
            you as soon as Possible.
          </p>
        </div>
        <div className="px-6  pt-12 flex flex-row ">
          <Icon
            i={1}
            url="https://github.in/Ansh-Rathod"
            name="Github"
            classes="fa-brands fa-github"
          />

          <Icon
            i={2}
            url="https://twitter.com/anshrathodfr"
            classes="fa-brands fa-twitter"
            name="Twitter"
          />

          <Icon
            i={5}
            url="https://discord.com/users/768376622243119114"
            name="discord"
            classes="fa-brands fa-discord"
          />
          <Icon
            i={6}
            url="mailto:anshrathod29@gmail.com"
            classes="fa-solid fa-envelope"
            name="Email"
          />
          <Icon
            i={7}
            url="https://www.instagram.com/anshrathodfr"
            name="Instagram"
            classes="fa-brands fa-instagram"
          />
        </div>
      </div>

      <div className="my-10 text-[17px] max-w-[600px]  px-6  py-2  
        <p>Message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            i usually share my thoughts and daily updates on X (Twitter). that’s
            the best place to reach me!
          </p>

          <br />

          <p>and one last thing:</p>
          <div className="rounded-lg mt-2">
            <Image
              src="/pins/wall15.jpg"
              alt="image"
              width={0}
              height={0}
              sizes="100vw"
              style={{ width: "100%", height: "auto" }}
              className="object-cover rounded-lg"
            />
          </div>
        </div>
      </div>

      <div className="max-w-[600px] mx-auto mb-10 text-center">
        <br />
        <p>Thank you! for visiting.</p>
      </div>

      <div className="py-6 border-t-[0.6px] 
        <p>
          © 2025 Ansh Rathod. All rights reserved. last updated: Apr 25, 2025
        </p>
      </div>
    </div>
  );
}

export default Contact;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Icon.tsx
import React from "react";
import { motion } from "framer-motion";
import Link from "next/link";
export default function Icon(props: any) {
  const { classes, url, i } = props;
  return (
    <motion.div
      initial={{ scale: 0, y: 10 * 0.5 * (i || 1) }}
      animate={{ scale: 1, y: 0 }}
      whileHover={{ scale: 1.2 }}
      viewport={{ once: true, amount: 0.5 }}
      transition={{ staggerChildren: 0.5, delay: i * 0.2 }}
      className="scale-100"
    >
      <a
        target="_blank"
        rel="noreferrer"
        href={url}
        className=" rounded-full p-2 mr-4 border-[0.6px] transition-all 
        ease-in-out border-slate-400 group
          hover:bg-blue-100 hover:border-blue-300"
      >
        <motion.i
          className={
            classes + ` group-hover:text-blue-700 group-hover:scale-110`
          }
        ></motion.i>
      </a>
    </motion.div>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/ListItem.tsx
const ListItem = (props: any) => {
  const { name, i } = props;
  return (
    <div className="my-1 flex flex-row justify-between items-center w-[130px] ">
      <p className=" tracking-tighter lowercase h-[24px] text-[18px] text-slate-500   
        {name}
      </p>
      <div className="text-blue-500 h-[24px] flex items-center">
        {/* {star && <i className="fa-solid fa-star text-[10px] leading-0" />} */}
      </div>
    </div>
  );
};

export default ListItem;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Model.tsx
import Icon from "@/components/Icon";
import { motion } from "framer-motion";
import Image from "next/image";
import { useRouter } from "next/router";
import Slider from "./slider";

function Model({ project, isOpen }: { project: any; isOpen: boolean }) {
  const router = useRouter();
  return (
    <div>
      {isOpen && (
        <motion.div
          className="fixed inset-0 bg-gray-500 bg-opacity-60 
            backdrop-blur-sm z-10"
        >
          <div
            className="w-screen h-screen max-w-full 
          flex justify-center items-start pt-4  
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0.9, y: 100 }}
              animate={{ scale: 1, opacity: 1, y: 0 }}
              transition={{ duration: 0.1 }}
              className={`items-center
                    rounded-lg flex flex-col bg-white 
                     w-[700px] max-w-[700px] shadow-xl 
                      
                     `}
            >
              <div
                className="py-2.5 px-4 w-full  border-b-[0.5px] border-gray-300 font-poppins
               font-bold text-xl flex flex-row 
               justify-between items-center "
              >
                <div
                  className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700"
                  onClick={() => router.push("/", "/", { shallow: true })}
                >
                  <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
                </div>
                <p>{project.name}</p>
                <div
                  className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700 invisible"
                >
                  <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
                </div>
              </div>

              <div
                className="h-screen max-h-full
               w-full overflow-y-scroll "
              >
                <div className="flex justify-center">
                  <Slider images={project.images} />
                </div>

                <div
                  className="mb-12 flex flex-row justify-center text-center items-end 
                w-full px-10  
                >
                  <div>
                    <b className="pl-1.5 font-poppins">Share on</b>
                    <div className="pt-5 flex flex-row">
                      <Icon
                        classes="fa-brands fa-linkedin"
                        url={`https://www.linkedin.com/sharing/share-offsite/?url=${project.url}`}
                      />

                      <Icon
                        classes="fa-brands fa-twitter"
                        url={`http://twitter.com/share?text=Check out this amazing app built by @anshrathodfr on github. view all projects on https://ansh.life&url=${project.url}&hashtags=flutter,opensource,github`}
                      />
                      <Icon classes="fa-regular fa-copy" />
                    </div>
                  </div>
                </div>

                <div className="mt-6 flex flex-row justify-start w-full px-12  
                  <div>
                    <b className="font-poppins">Description</b>
                    <div
                      className="mt-1.5"
                      dangerouslySetInnerHTML={{
                        __html: project.long_description,
                      }}
                    />
                  </div>
                </div>

                <div className="my-6 flex flex-row justify-start w-full px-12  
                  <div>
                    <b className="font-poppins">Tech stack</b>
                    <p className="mt-1.5 ">{project.madeWith}</p>
                  </div>
                </div>
                <div className="my-6 flex flex-row justify-start w-full px-12  
                  <div>
                    <b className="font-poppins">Created on</b>
                    <p className="mt-1.5 ">{project.date}</p>
                  </div>
                  {project.url.includes("github") && (
                    <div className="mx-6">
                      <b className="font-poppins">
                        {project.name != "Cineast"
                          ? "Earned Stars"
                          : "Downloads"}
                      </b>
                      <p className="mt-1">
                        <Image
                          src={
                            project.url.includes("github")
                              ? `https://img.shields.io/github/stars/${project.url.replace(
                                  "https://github.com/",
                                  ""
                                )}?style=social`
                              : "https://img.shields.io/static/v1?label=Downloads&message=1k&color=%3CCOLOR%3E"
                          }
                          alt="stars"
                          height={26}
                          width={100}
                          className="object-contain"
                          unoptimized
                        />
                      </p>
                    </div>
                  )}
                </div>
                <div className="mt-2 flex flex-row justify-center">
                  <a href={project.url} target="_blank" rel="noreferrer">
                    <div
                      className="pr-4 pl-3 py-2 lowercase rounded-lg 
                  flex flex-row justify-center items-center text-center cursor-pointer bg-blue-500 text-white 
                   transition-all ease-in-out shadow-md shadow-blue-400 "
                    >
                      <div>
                        <i className="fa-solid fa-globe px-2" />
                        <p className="text-[12px]">Visit</p>
                      </div>
                    </div>
                  </a>
                </div>
                <div className="mb-[200px]"></div>
              </div>
            </motion.div>
          </div>
        </motion.div>
      )}
    </div>
  );
}

export default Model;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/MusiveCard.tsx
import React from "react";
import Image from "next/image";
import Link from "next/link";
import { motion } from "framer-motion";

function MusiveCard() {
  return (
    <div className="select-none">
      <div
        className="w-[1000px] c-  
         
  bg-gradient-to-br to-[#2bb540] via-[#228046] from-[#228347]  pt-4 pb-6 px-6 
      >
        <div
          className="flex flex-row-reverse max-w-[900px] mx-auto mt-4 justify-center
         items-center px-6  
        >
          <div>
            <motion.div
              initial={{ y: 20, opacity: 0 }}
              viewport={{ once: true, amount: 1 }}
              whileInView={{
                y: 0,
                opacity: 1,
                transition: { duration: 0.3 },
              }}
              transition={{ staggerChildren: 0.5 }}
              className="flex justify-center items-center"
            >
              <div
                className="w-[380px] h-[300px] relative
               
                c- c-"
              >
                <Image
                  src="/musive-featured.png"
                  fill
                  className="object-contain object-left"
                  alt="intro"
                />
              </div>
            </motion.div>
          </div>
          <motion.div
            initial={{ y: 20, opacity: 0 }}
            viewport={{ once: true, amount: 1 }}
            whileInView={{
              y: 0,
              opacity: 1,
              transition: { duration: 0.3 },
            }}
            transition={{ staggerChildren: 0.5 }}
            className=" 
            "
          >
            <h1
              className="text-2xl tracking-wider 
            text-gray-100 my-4 
            >
              MUSIVE
            </h1>

            <div className="max-w-[400px]">
              <p
                className="  text-white opacity-90 mb-8 text-[16px]
               leading-[25px] tracking-wide 
              >
                Explore & download free stock music and use it anywhere you like
                with spotify web player experience.
              </p>
            </div>
            <div className="flex flex-row items-center mb-4 ">
              <div className="mr-4 bg-[#29a111] w-fit rounded-full p-2.5 text-center flex justify-center items-center text-white">
                <i className="fa-solid fa-window-restore text-[16px]"></i>
              </div>
              <p className="tracking-wide  opacity-80 font-medium text-gray-100 max-w-[350px] text-[15px]">
                Web App: built with Next.js, Tailwind CSS, Algolia.
              </p>
            </div>
            <div className="flex flex-row items-center">
              <div className="mr-4 bg-[#279811] w-fit rounded-full p-2.5 text-center flex justify-center items-center text-white">
                <i className="fa-brands fa-app-store-ios text-[16px]"></i>
              </div>
              <p className="tracking-wide opacity-80 font-medium text-gray-100 max-w-[350px] text-[15px]">
                Android and Ios app: built with Flutter.
              </p>
            </div>
            {/* <p className="mt-4 racking-wide opacity-80 font-medium text-white max-w-[350px] text-[16px]">
              All music on the platform is non-copyright and free to use
              anywhere you like.
            </p> */}

            {/* <h1 className="text-white mt-8 mb-4 opacity-80 tracking-wider 

            <div className="flex w-full 
              <Link href="https://musive.vercel.app/" target={"_blank"}>
                <button
                  className="border px-4 text-white mt-10 rounded-md font-semibold tracking-wider
             hover:bg-white  hover:text-black py-2
               bg-[#26623a] text-proxima text-sm"
                >
                  VISIT WEB APP
                </button>
              </Link>
            </div>
          </motion.div>
        </div>
        <div className="mt-14"></div>
      </div>
    </div>
  );
}

export default MusiveCard;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/NavBar.tsx
import Link from "next/link";

function NavBar() {
  return (
    <div
      className=" flex flex-row items-center justify-between 
            
          
        "
    >
      <Link href={`/`} scroll={true}>
        <a
          className=" cursor-pointer 
       hover:text-blue-700 mx-3  my-1 font-bold text-xl  hover:border-b-blue-700 hover:border-b 
        >
          Ansh&nbsp;Rathod
        </a>
      </Link>

      <div className="py-4 
        <ul className="flex flex-row justify-center px-14  ">
          <NavbarItem name="home" href="/" />
          <NavbarItem name="Memes" href="/memes" />
          <NavbarItem name="connect" href="#connect" />
        </ul>
      </div>
    </div>
  );
}

const NavbarItem = (props: any) => {
  return (
    <Link href={`${props.href}`} scroll={true}>
      <li
        className="lowercase cursor-pointer 
       hover:text-blue-700 mx-3  my-1 text-gray-500 hover:border-b-blue-700 hover:border-b"
      >
        {props.name}
      </li>
    </Link>
  );
};

export default NavBar;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/NavbarItem.tsx
import Link from "next/link";

const NavbarItem = (props: any) => {
  return (
    <Link href={`#${props.name.toLowerCase()}`} scroll={true}>
      <li
        className="lowercase cursor-pointer 
       hover:text-blue-700 mx-3  my-1 text-gray-500 hover:border-b-blue-700 hover:border-b"
      >
        {props.name}
      </li>
    </Link>
  );
};

export default NavbarItem;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Project.tsx
import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";

function ProjectComponent(props: any) {
  const { project, i } = props;

  return (
    <Link
      scroll={false}
      href={`/?slug=${project.name.toLowerCase()}`}
      as={`/projects/${project.name.toLowerCase()}`}
    >
      <div
        className={`select-none cursor-pointer items-center 
       tracking-tighter lowercase    hover:border-blue-600 bg-gray-100 
       p-2 rounded-lg ${
         project.type == "horizontal" ? "flex flex-row" : "flex flex-col"
       }`}
      >
        <div className="w-[100px] ">
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            className="object-contain"
            width={100}
            height={200}
          />
        </div>

        <div className="px-2 py-6 w-full">
          <div className="flex flex-row items-center justify-between pb-1">
            <h1 className="text-[18px] lowercase text-black">
              {project.name}
            </h1>
          </div>

          <p className=" text-gray-500 ">{project.description} </p>
          <div className="px-0.5 pt-2.5 flex flex-row items-center justify-between">
            <motion.p
              whileHover={{}}
              className="lowercase text-[12px] 
           text-gray-500 border-b-[1px] border-gray-500 hover:text-black hover:border-black"
            >
              Read More
            </motion.p>
            <p className="text-gray-500  lowercase text-[12px]">
              {project.date}
            </p>
          </div>
        </div>
      </div>
    </Link>
  );
}

export default ProjectComponent;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Skills.tsx
import ListItem from "./ListItem";
function Skills() {
  return (
    <div
      id="skills"
      className="py-[50px] w-screen max-w-full  "
    >
      <div className="small-container mb-20 py-2">
        <h1 className="lowercase text-h1 ">What tech skills does he have?</h1>
        <p className="tracking-tighter lowercase   mt-4 text-[18px] text-slate-500   
          He knows these listed things but mostly uses Flutter, postgres, and
          Nextjs here and there for his apps. uses AI for writing code and
          figures out the code very quickly.
        </p>
        <br />
        <p className="tracking-tighter lowercase  text-[18px] text-slate-500   
          Sometimes he plays with the LLMS, Sometimes try to build a game with
          godot.
        </p>
      </div>
      <div className="flex flex-row 
        <div className="w-[150px] mx-4 
          <h1 className="lowercase text-h1 
        </div>

        <div
          className="text-[18px] grid grid-cols-4 
            
        >
          <div className="mr-14 mb-5">
            <h1 className=" lowercase font-bold tracking-wide mb-3  text-[18px] text-slate-900   
              Languages
            </h1>
            <ListItem name="dart" i={1} />
            <ListItem name="javascript" i={2} />
            <ListItem name="Typescript" i={3} />
            <ListItem name="python" i={4} />
            <ListItem name="html" i={5} />
            <ListItem name="css" i={6} />
          </div>
          <div className="mr-14  
            <h1 className="tracking-tighter  font-bold  mb-3 lowercase text-[18px] text-slate-900   
              Frameworks
            </h1>
            <ListItem name="flutter" i={1} />
            <ListItem name="nextjs" i={1} />
            <ListItem name="Nodejs" i={1} />
            <ListItem name="Bunjs" i={1} />
            <ListItem name="Tailwind CSS" i={1} />
            <ListItem name="react" i={1} />
            <ListItem name="python flask" i={1} />
          </div>
          <div className="mr-14 mb-5">
            <h1 className="tracking-tighter lowercase font-bold  mb-3 text-[18px] text-slate-900   
              Databases
            </h1>
            <ListItem name="PostgreSql" i={1} />
            <ListItem name="firebase" i={1} />
            <ListItem name="supabase" i={1} />
            <ListItem name="Redis" i={1} />
            <ListItem name="mongodb" i={1} />
            <ListItem name="Sqlite" i={1} />
          </div>
          <div className="mr-14  
            <h1 className="tracking-tighter  font-bold  mb-3 lowercase text-[18px] text-slate-900   
              Tools
            </h1>
            <ListItem name="docker" i={1} />
            <ListItem name="git & github" i={1} />
            <ListItem name="digital ocean" i={1} />
          </div>
        </div>
      </div>
      <div className="small-container">
        <div className="mt-10 text-[17px] max-w-[600px]   py-2  
          <img
            src="https://github-readme-stats.vercel.app/api?username=Ansh-Rathod"
            alt="GitHub Stats"
            className="w-full h-auto rounded-lg"
          />
        </div>

        <div className=" text-[17px] max-w-[600px]   py-2  
          <img
            src="https://github-readme-streak-stats.herokuapp.com/?user=Ansh-Rathod"
            alt="GitHub Streak"
            className="w-full h-auto rounded-lg"
          />
        </div>

        <h2 className=" text-[20px] mt-10">time spent in the code editor:</h2>
        <p className=" mb-4"> (From 2 jan, 2024 to today)</p>

        <div className=" text-[17px] max-w-[600px]   py-2  
          <img
            src="https://img.shields.io/endpoint?style=social&url=https%3A%2F%2Fapi.codetime.dev%2Fshield%3Fid%3D23597%26project%3D%26in%3D0"
            alt="CodeTime Shield"
            className="w-[70%] h-auto rounded-lg"
          />
        </div>
      </div>
    </div>
  );
}

export default Skills;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/calender.tsx
import {
  addDays,
  addMonths,
  eachDayOfInterval,
  endOfMonth,
  format,
  getDay,
  parseISO,
  startOfMonth,
  subDays,
  subMonths,
} from "date-fns";
import { useEffect, useState } from "react";

const CustomActivityCalendar: React.FC = () => {
  const [currentMonth, setCurrentMonth] = useState(new Date());
  const [activities, setActivities] = useState<Record<string, any>[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Calculate fetch range
  const monthStart = startOfMonth(currentMonth);
  const monthEnd = endOfMonth(currentMonth);
  const firstDayOfMonth = (getDay(monthStart) + 6) % 7; // Mon=0, ..., Sun=6
  const daysInMonth = eachDayOfInterval({ start: monthStart, end: monthEnd });
  const prevMonthDaysCount = firstDayOfMonth;
  const prevMonthStart = prevMonthDaysCount
    ? subDays(monthStart, prevMonthDaysCount)
    : monthStart;
  const totalCells = 42; // 6 weeks × 7 days
  const currentAndPrevDays = prevMonthDaysCount + daysInMonth.length;
  const nextMonthDaysCount = totalCells - currentAndPrevDays;
  const nextMonthEnd = addDays(monthEnd, nextMonthDaysCount);

  // Fetch activities for the visible range
  useEffect(() => {
    const fetchActivities = async () => {
      try {
        setLoading(true);
        const start = format(prevMonthStart, "yyyy-MM-dd");
        const end = format(nextMonthEnd, "yyyy-MM-dd");
        const response = await fetch(`/api/strava?start=${start}&end=${end}`);
        if (!response.ok) {
          throw new Error("Failed to fetch activities");
        }
        const data = await response.json();
        setActivities(data);
        setLoading(false);
      } catch (err) {
        setError("Error fetching activities");
        setLoading(false);
      }
    };

    fetchActivities();
  }, [currentMonth]); // Refetch when currentMonth changes

  // Filter activities for the current month
  const monthActivities = activities.filter((activity) => {
    const activityDate = parseISO(activity["start_date_local"]);
    return activityDate >= monthStart && activityDate <= monthEnd;
  });

  // Group activities by date (YYYY-MM-DD)
  const activitiesByDate = activities.reduce((acc, activity) => {
    const date = format(parseISO(activity["start_date_local"]), "yyyy-MM-dd");
    if (!acc[date]) acc[date] = [];
    acc[date].push(activity);
    return acc;
  }, {} as Record<string, Record<string, any>[]>);

  // Calculate monthly stats
  const totalActivities = monthActivities.length;
  const totalDistance = monthActivities
    .filter((a) => a["type"] === "Ride")
    .reduce((sum, a) => sum + a["distance"] / 1000, 0);
  const totalTimeSeconds = monthActivities.reduce(
    (sum, a) => sum + a["moving_time"],
    0
  );
  const totalHours = Math.floor(totalTimeSeconds / 3600);
  const totalMinutes = Math.floor((totalTimeSeconds % 3600) / 60);
  const rideCount = monthActivities.filter(
    (a) => a["type"] === "Ride" || a["type"] === "Workout"
  ).length;
  const workoutCount = monthActivities.filter(
    (a) => a["type"] === "WeightTraining"
  ).length;

  // Format time as "Xh Ym"
  const formatTime = (hours: number, minutes: number) => {
    if (hours === 0 && minutes === 0) return "0m";
    return `${hours > 0 ? `${hours}h ` : ""}${minutes}m`;
  };

  // Generate calendar days
  const prevMonthDays = prevMonthDaysCount
    ? eachDayOfInterval({
        start: prevMonthStart,
        end: subDays(monthStart, 1),
      })
    : [];
  const nextMonthDays = nextMonthDaysCount
    ? eachDayOfInterval({
        start: addDays(monthEnd, 1),
        end: nextMonthEnd,
      })
    : [];
  const allDays = [...prevMonthDays, ...daysInMonth, ...nextMonthDays];

  // Navigation handlers
  const prevMonth = () => setCurrentMonth(subMonths(currentMonth, 1));
  const nextMonth = () => setCurrentMonth(addMonths(currentMonth, 1));

  return (
    <div className="px-4 max-w-[600px] mx-auto mt-10">
      <div className="mb-10">
        <h1 className="lowercase text-h1 mb-4">
          his Fitness Quests
        </h1>
        <p className="text-[18px] text-slate-500   
          he tracks his fitness quests using hevy/strava app, and here are the
          some stats that keeps him consistent and moving.
        </p>
      </div>
      <div className="p-6 
        <div className="flex justify-between items-center mb-4">
          <button
            onClick={prevMonth}
            className="p-2 text-gray-600 hover:text-gray-800"
            aria-label="Previous month"
          >
            ←
          </button>
          <h1 className="text-h3">
            {format(currentMonth, "MMMM yyyy")}
          </h1>
          <button
            onClick={nextMonth}
            className="p-2 text-gray-600 hover:text-gray-800"
            aria-label="Next month"
          >
            →
          </button>
        </div>
        {loading && <div className="text-center text-gray-500">Loading...</div>}
        {error && activities.length === 0 && (
          <div className="text-center text-red-500">{error}</div>
        )}
        {!loading && (
          <div className="grid grid-cols-7 gap-1 text-center">
            {/* Weekday headers */}
            {["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"].map((day) => (
              <div key={day} className="font-semibold text-gray-600 mt-6 mb-4">
                {day}
              </div>
            ))}
            {/* Calendar days */}
            {allDays.map((day) => {
              const dateStr = format(day, "yyyy-MM-dd");
              const dayActivities = activitiesByDate[dateStr] || [];
              const hasRide = dayActivities.some(
                (a: any) => a["type"] === "Ride" || a["type"] === "Workout"
              );
              const hasWorkout = dayActivities.some(
                (a: any) => a["type"] === "WeightTraining"
              );
              const isCurrentMonth = day >= monthStart && day <= monthEnd;

              return (
                <div
                  key={dateStr}
                  className={`relative h-18 border rounded-lg p-2 ${
                    isCurrentMonth ? "" : "opacity-40"
                  } ${
                    dayActivities.length > 0
                      ? "border-white bg-[#0B82FE] text-white font-bold"
                      : "border-red-400 border bg-red-100/50"
                  } hover:bg-[#0B82FE]/30 group`}
                >
                  <span className="text-sm">{format(day, "d")}</span>
                  {/* Icons */}
                  <div
                    className={`${
                      hasWorkout ? "bg-green-200" : "bg-orange-300"
                    } bg-white rounded-lg flex justify-center space-x-2 mt-1 text-[20px]`}
                  >
                    {hasRide && <span aria-label="Ride activity">🚴</span>}
                    {hasWorkout && (
                      <span aria-label="Workout activity">🏋️</span>
                    )}
                  </div>
                  {/* Tooltip */}
                  {dayActivities.length > 0 && (
                    <div className="absolute z-10 hidden text-start group-hover:block bg-white border border-gray-300 text-black rounded shadow-lg p-2 w-64 -left-20 top-20">
                      <h3 className="font-semibold text-sm mb-1">{dateStr}</h3>
                      <ul className="text-xs space-y-1">
                        {dayActivities.map((activity: any) => (
                          <li key={activity["id"]} className="pb-2 text-start">
                            <strong>{activity["name"]}</strong> (
                            {activity["type"]})
                            {activity["type"] === "Ride" && (
                              <span>
                                <br />
                                Distance:{" "}
                                {(activity["distance"] / 1000).toFixed(2)} km
                              </span>
                            )}
                            <br />
                            Time: {Math.floor(activity["moving_time"] / 60)} min
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        )}
        {!loading && (
          <div className="mt-6 p-4 bg-white rounded-lg shadow">
            <h2 className="text-lg font-semibold text-gray-800 mb-4">
              {format(currentMonth, "MMMM yyyy")} Stats
            </h2>
            <div className="grid grid-cols-2 gap-4 
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  Total Activities:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {totalActivities}
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  Total Distance (Rides):
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {totalDistance.toFixed(2)} km
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  Total Time:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {formatTime(totalHours, totalMinutes)}
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  went for Cycling/running:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {rideCount}
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  days Went to Gym:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {workoutCount}
                </span>
              </div>
            </div>
          </div>
        )}
        <div className="mt-4 text-description text-gray-600 flex items-center space-x-4">
          <div>
            <span className="mr-2">🚴</span>Cycling/running
          </div>
          <div>
            <span className="mr-2">🏋️</span>Gym Workout
          </div>
        </div>
      </div>
      <br />- powered by Hevy and Strava api.
    </div>
  );
};

export default CustomActivityCalendar;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/chess.tsx
"use client";
import axios from "axios";
import * as changeCase from "change-case";
import Link from "next/link";
import { useEffect, useState } from "react";
import RatingChart from "./rechart";
function ChessStats() {
  const [userData, setUserData] = useState({
    id: "anshrathod999",
    username: "Anshrathod999",
    perfs: {
      bullet: {
        games: 5744,
        rating: 1565,
      },
      blitz: {
        games: 1413,
        rating: 1247,
      },
    },
    createdAt: 1624618465996,
    seenAt: 1734094094168,
    playTime: {
      total: 1246367,
    },
    url: "https://lichess.org/@/Anshrathod999",
    count: {
      all: 7389,
      rated: 7291,
      draw: 241,
      loss: 3565,
      win: 3583,
    },
  });

  const [recentGames, setRecentGames] = useState([]);
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
    fetchUserData();
    fetchRecentGames();
  }, []);

  // Fetch data from Lichess API
  const fetchUserData = async () => {
    try {
      const response = await axios.get(
        `https://lichess.org/api/user/Anshrathod999`
      );
      setUserData(response.data);
    } catch (err) {}
  };
  // Fetch recent games from Lichess API
  const fetchRecentGames = async () => {
    try {
      const response = await axios.get(
        `https://lichess.org/api/games/user/Anshrathod999?max=20&perfType=bullet&moves=false&clocks=false&sort=dateDesc`,
        {
          headers: {
            Accept: "application/x-ndjson",
          },
          responseType: "text",
        }
      );
      // Split by newlines and parse each line
      const lines = response.data.trim().split("\n");
      const games = lines.map((line: any) => JSON.parse(line));

      // Example: extract usernames and ratings
      const allgames = games.map((game: any) => ({
        id: game.id,
        perf: game.perf,
        speed: game.speed,
        createdAt: game.createdAt,
        winner: game.winner,
        status: changeCase.noCase(game.status),

        white: {
          name: game.players.white.user?.name || "Anonymous",
          rating: game.players.white.rating,
          ratingDiff: game.players.white.ratingDiff,
        },
        black: {
          name: game.players.black.user?.name || "Anonymous",
          rating: game.players.black.rating,
          ratingDiff: game.players.black.ratingDiff,
        },
      }));
      setRecentGames(allgames);
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <div className="mx-auto max-w-[600px] mt-20">
      <div className=" px-6 ">
        <h1 className="lowercase text-h1 mb-4">HIS Chess stats ♟️♔♕♖♘</h1>
        <p className=" text-slate-500 text-[18px]   
          he started playing chess same year he started writing code in 2020.
          doesnt plays daily maybe 3-4 matches onces a week. he suck at chess
          tbh. he has wining probability of 50% in chess against same ranked
          oponent but still plays.
        </p>
      </div>
      <div className="px-6 ">
        <div className="text-[18px] text-slate-500   
          <br />

          <p className="font-bold">
            mostly plays Bullet - very fast-paced 1-minute games that require
            intense focus and quick decision making.
          </p>
          <br />
          <p>
            <span className="text-black font-bold">bullet rating 📈 </span> :{" "}
            <span className="font-bold text-green-500">
              {userData.perfs.bullet.rating} (in {userData.perfs.bullet.games}{" "}
              games)
            </span>
          </p>
          {/*<p>
            <span className="text-black font-bold">Blitz rating 📈</span>:{" "}
            {userData.perfs.blitz.rating}
            (in {userData.perfs.blitz.games} games)
          </p>
          <br />
          
          */}

          <p>
            <span className="text-black font-bold">last game played on</span>:{" "}
            {isClient ? (
              <span suppressHydrationWarning>
                {formatTimestamp(userData.seenAt)} ({timeAgo(userData.seenAt)})
              </span>
            ) : (
              "Loading..."
            )}
          </p>
          <p className="mt-4">
            <span className="text-black font-bold">total play time</span>:{" "}
            {(userData.playTime.total / 3600).toFixed(2)} hours
          </p>
        </div>

        <RatingChart games={recentGames} username={userData.username} />
        <p className="mt-4">
          <span className="text-black font-bold">total games played</span>:{" "}
          {userData.count.all}
        </p>
        <p className="mt-4">
          <span className="text-black font-bold">wins</span>:{" "}
          {userData.count.win} (
          {((userData.count.win / userData.count.all) * 100).toFixed(2)}%)
        </p>
        <p>
          <span className="text-black font-bold">losses</span>:{" "}
          {userData.count.loss} (
          {((userData.count.loss / userData.count.all) * 100).toFixed(2)}
          %)
        </p>
        <p>
          <span className="text-black font-bold">draws</span>:{" "}
          {userData.count.draw} (
          {((userData.count.draw / userData.count.all) * 100).toFixed(2)}
          %)
        </p>

        <Link href={userData.url} target="_blank" rel="noreferrer">
          <p className="text-blue-500 my-4 cursor-pointer hover:underline">
            {userData.username} - on lichess
          </p>
        </Link>
      </div>
      <div className="mt-10 text-[17px] max-w-[600px]  px-6  py-2  
        <p>message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            I measure my focus by playing chess. The number of blunders I make
            shows exactly how focused I am that day.
          </p>
        </div>
      </div>
    </div>
  );
}

export default ChessStats;
export function timeAgo(timestamp: number): string {
  const now = new Date();
  const date = new Date(timestamp);
  const secondsAgo = Math.floor((now.getTime() - date.getTime()) / 1000);

  if (secondsAgo < 60) {
    return `${secondsAgo} second(s) ago`;
  } else if (secondsAgo < 3600) {
    const minutes = Math.floor(secondsAgo / 60);
    return `${minutes} minute(s) ago`;
  } else if (secondsAgo < 86400) {
    const hours = Math.floor(secondsAgo / 3600);
    return `${hours} hour(s) ago`;
  } else if (secondsAgo < 2592000) {
    const days = Math.floor(secondsAgo / 86400);
    return `${days} day(s) ago`;
  } else if (secondsAgo < 31536000) {
    const months = Math.floor(secondsAgo / 2592000);
    return `${months} month(s) ago`;
  } else {
    const years = Math.floor(secondsAgo / 31536000);
    return `${years} year(s) ago`;
  }
}

export function formatTimestamp(timestamp: number): string {
  const date = new Date(timestamp);

  // Format the date as "Sun Dec 15 6:59 PM"
  const options: Intl.DateTimeFormatOptions = {
    weekday: "short",
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    hour12: true,
  };

  return new Intl.DateTimeFormat("en-US", options).format(date);
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/horizontal-scroll.tsx
// import { IconArrowNarrowLeft, IconArrowNarrowRight } from "@tabler/icons-react";
import React, { createContext, ReactNode, useEffect, useState } from "react";
import { cn } from "./utils";

export const CarouselContext = createContext<{
  onCardClose: (index: number) => void;
  currentIndex: number;
}>({
  onCardClose: () => {},
  currentIndex: 0,
});

const HorizontalScroll = ({
  children,
  initialScroll = 0,
}: {
  children: ReactNode;
  initialScroll?: number;
}) => {
  const carouselRef = React.useRef<HTMLDivElement>(null);
  const [canScrollLeft, setCanScrollLeft] = React.useState(false);
  const [canScrollRight, setCanScrollRight] = React.useState(true);
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    if (carouselRef.current) {
      carouselRef.current.scrollLeft = initialScroll;
      checkScrollability();
    }
  }, [initialScroll]);

  const checkScrollability = () => {
    if (carouselRef.current) {
      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current;
      setCanScrollLeft(scrollLeft > 0);
      setCanScrollRight(scrollLeft < scrollWidth - clientWidth);
    }
  };

  const scrollLeft = () => {
    if (carouselRef.current) {
      carouselRef.current.scrollBy({ left: -300, behavior: "smooth" });
    }
  };

  const scrollRight = () => {
    if (carouselRef.current) {
      carouselRef.current.scrollBy({ left: 300, behavior: "smooth" });
    }
  };

  const handleCardClose = (index: number) => {
    if (carouselRef.current) {
      const cardWidth = isMobile() ? 230 : 384; // (md:w-96)
      const gap = isMobile() ? 4 : 8;
      const scrollPosition = (cardWidth + gap) * (index + 1);
      carouselRef.current.scrollTo({
        left: scrollPosition,
        behavior: "smooth",
      });
      setCurrentIndex(index);
    }
  };

  const isMobile = () => {
    return window && window.innerWidth < 768;
  };

  return (
    <CarouselContext.Provider
      value={{ onCardClose: handleCardClose, currentIndex }}
    >
      <div className="relative w-full">
        {/* <div className="flex justify-end gap-2  max-w-5xl mx-auto my-10 px-4">
          <button
            className="relative z-40 h-10 w-10 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50"
            onClick={scrollLeft}
            disabled={!canScrollLeft}
          >
            <IconArrowNarrowLeft className="h-6 w-6 text-gray-500" />
          </button>
          <button
            className="relative z-40 h-10 w-10 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50"
            onClick={scrollRight}
            disabled={!canScrollRight}
          >
            <IconArrowNarrowRight className="h-6 w-6 text-gray-500" />
          </button>
        </div> */}

        <div
          className="flex w-full overflow-x-scroll overscroll-x-auto   scroll-smooth [scrollbar-width:none]"
          ref={carouselRef}
          onScroll={checkScrollability}
        >
          {/* <div
            className={cn(
              "absolute right-0  z-[1000] h-auto  w-[5%] overflow-hidden bg-gradient-to-l"
            )}
          ></div> */}

          <div
            className={cn(
              "flex flex-row justify-start ",
              " mx-auto" // remove max-w-4xl if you want the carousel to span the full width of its container
            )}
          >
            <div
              className="w-[calc((100vw-64rem)/2)]"
              itemID="left-spacer"
              aria-hidden="true"
            ></div>
            {children}
            <div
              className="w-[calc((100vw-64rem)/2)]"
              itemID="right-spacer"
              aria-hidden="true"
            ></div>
          </div>
        </div>
      </div>
    </CarouselContext.Provider>
  );
};

export default HorizontalScroll;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/image-gallery.tsx
import { Masonry } from "react-plock";

const MyGallery = () => {
  let numbers: string[] = [
    "/pins/wall41.jpg",
    "/pins/wall21.jpg",
    "/pins/wall11.jpg",
    "/pins/wall40.jpg",
    "/pins/wall24.jpg",
    "/pins/wall2.jpg",
    "/pins/wall12.jpg",
    "/pins/wall52.jpg",
    "/pins/wall10.jpg",
    "/pins/wall9.jpg",
    "/pins/wall16.jpg",
    "/pins/wall25.jpg",
    "/pins/wall42.jpg",
    "/pins/wall57.jpg",
    "/pins/wall54.jpg",
    "/pins/wall6.jpg",
    "/pins/wall34.jpg",
    "/pins/wall43.jpg",
    "/pins/wall38.jpg",
    "/pins/wall45.jpg",
    "/pins/wall1.jpg",
    "/pins/wall32.jpg",
    "/pins/wall37.jpg",
    "/pins/wall56.jpg",
    "/pins/wall4.jpg",
    "/pins/wall33.jpg",
    "/pins/wall50.jpg",
    "/pins/wall49.jpg",
    "/pins/wall17.jpg",
    "/pins/wall20.jpg",
    "/pins/wall30.jpg",
    "/pins/wall23.jpg",
    "/pins/wall48.jpg",
    "/pins/wall14.jpg",
    "/pins/wall28.jpg",
    "/pins/wall44.jpg",
    "/pins/wall8.jpg",
    "/pins/wall29.jpg",
    "/pins/wall7.jpg",
    "/pins/wall35.jpg",
    "/pins/wall36.jpg",
    "/pins/wall46.jpg",
    "/pins/wall19.jpg",
    "/pins/wall53.jpg",
    "/pins/wall3.jpg",
    "/pins/wall13.jpg",
    "/pins/wall22.jpg",
    "/pins/wall31.jpg",
    "/pins/wall69.jpg",
    "/pins/wall15.jpg",
    "/pins/wall51.jpg",
    "/pins/wall5.jpg",
  ];

  return (
    <div>
      <div className=" flex flex-col justify-center max-w-[600px] mx-auto  
        <div className=" px-6 my-20">
          <h1 className="lowercase text-h1 ">
            Random Pins
          </h1>
          <p className="text-gray-500 mt-2">
            The random images he saved last year in boredom also some while
            building this website. Most images are from the movies, tvshows and
            sport. this nerd watches sport: MMA lol from begining of 2024.
          </p>
        </div>
      </div>
      <div className="mt-10"></div>
      <div className="px-2 max-w-[1000px] mx-auto">
        <Masonry
          items={numbers}
          config={{
            columns: [2, 3, 3],
            gap: [6, 6, 6],
            media: [640, 768, 1024],
          }}
          render={(item, idx) => (
            // eslint-disable-next-line @next/next/no-img-element
            <img
              key={idx}
              src={item}
              style={{ width: "100%", height: "auto" }}
              alt=""
              className="rounded-lg"
            />
          )}
        />
      </div>
    </div>
  );
};

export default MyGallery;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/intro.tsx
import { motion } from "framer-motion";
import Icon from "../components/Icon";
import NavbarItem from "../components/NavbarItem";

const textAnimate = {
  offscreen: { y: 50, opacity: 0 },
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring", bounce: 0.4, duration: 1 },
  },
};

const Intro = () => (
  <div>
    <div id="home" className="box-border  bg-no-repeat ">
      <div className=" mx-auto  flex">
        <div
          className=" flex flex-col 
            
          
          px-6 
        "
        >
          <div>
            <motion.div
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ staggerChildren: 0.5 }}
              className="  mt-32"
            >
              <motion.div
                // variants={textAnimate}
                className="text-[18px]  
              >
                <p className="mt-1">
                  Hello 👋, This page is about someone named
                </p>
              </motion.div>
              <h1 className="my-2 font-bold text-5xl leading-snug     
                ANSH RATHOD
              </h1>
              <p className="text-[18px] text-slate-500   
                Who is a full-stack developer, Builds apps for mobile, desktop
                and web platforms. He stays quite active on X/Twitter shares
                journey of building apps and other random things, plays chess ♟️
                somedays, does cycling 🚴, gym, watches movies, tvshows.
              </p>
            </motion.div>
            <motion.div
              initial={{ y: 10, opacity: 0 }}
              whileInView={{ y: 0, opacity: 1, transition: { delay: 0.4 } }}
              viewport={{ once: false, amount: 0.6 }}
              className="  py-12 flex flex-row  text-center "
            >
              <Icon
                i={1}
                url="https://github.in/Ansh-Rathod"
                name="Github"
                classes="fa-brands fa-github"
              />

              <Icon
                i={2}
                url="https://twitter.com/anshrathodfr"
                classes="fa-brands fa-twitter"
                name="Twitter"
              />

              <Icon
                i={5}
                url="https://discord.com/users/768376622243119114"
                name="discord"
                classes="fa-brands fa-discord"
              />
              <Icon
                i={6}
                url="mailto:anshrathod29@gmail.com"
                classes="fa-solid fa-envelope"
                name="Email"
              />
              <Icon
                i={7}
                url="https://www.instagram.com/anshrathodfr"
                name="Instagram"
                classes="fa-brands fa-instagram"
              />
            </motion.div>
          </div>
        </div>
      </div>
    </div>
  </div>
);

export default Intro;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes/LandingPage.tsx
import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";
import Icon from "../Icon";

const textAnimate = {
  offscreen: { y: 50, opacity: 0 },
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring" as const, bounce: 0.4, duration: 1 },
  },
};

const Intro = () => (
  <div>
    <div
      id="home"
      className="box-border  bg-no-repeat 
      bg-cover  bg-center border-b "
    >
      <div className=" backdrop-blur-3xl bg-white/70  ">
        <div className=" m-auto  flex">
          <div
            className="w-[55%] flex flex-col justify-between h-screen max-h-[808px]
            
          
        "
          >
            <div className="py-4 ">
              <ul className="flex flex-row items-end  px-14  ">
                <Link href={`/`} scroll={true}>
                  <li
                    className=" cursor-pointer 
       hover:text-blue-700 mx-3  my-1 font-bold text-xl  hover:border-b-blue-700 hover:border-b"
                  >
                    memeloper fr who?
                  </li>
                </Link>
              </ul>
            </div>
            <motion.div
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ staggerChildren: 0.5 }}
              className="px-16  
            >
              <motion.p
                variants={textAnimate}
                className="text-gray-500 text-xl leading-10 
              >
                Hold on,
              </motion.p>
              <h1 className=" font-bold text-5xl  leading-snug     
                MEMELOPER WhAT??
              </h1>

              <p className="text-[22px] max-w-[600px] text-slate-800   
                Don&rsquo;t know? You should find out. Check the Hilarious
                Journey of a Programmer through Memes.
              </p>
            </motion.div>
            <motion.div
              initial={{ y: 10, opacity: 0 }}
              whileInView={{ y: 0, opacity: 1, transition: { delay: 0.4 } }}
              viewport={{ once: false, amount: 0.6 }}
              className="px-14  py-12 flex flex-row 
            >
              <Icon
                i={1}
                url="https://github.in/Ansh-Rathod"
                name="Github"
                classes="fa-brands fa-github"
              />

              <Icon
                i={2}
                url="https://twitter.com/anshrathodfr"
                classes="fa-brands fa-twitter"
                name="Twitter"
              />
              <Icon
                i={3}
                url="https://www.linkedin.com/in/ansh-rathod-478a81210/"
                classes="fa-brands fa-linkedin"
                name="Linkedin"
              />
              <Icon
                i={4}
                url="https://discordapp.com/users/768376622243119114"
                classes="fa-brands fa-discord"
              />
              <Icon
                i={5}
                url="mailto:anshrathod29@gmail.com"
                classes="fa-solid fa-envelope"
                name="Email"
              />
              <Icon
                i={6}
                url="https://www.instagram.com/anshrathodfr"
                name="Instagram"
                classes="fa-brands fa-instagram"
              />
            </motion.div>
          </div>
          <div className="w-[60%] h-screen max-h-[808px]  
            <div className=" w-full h-full relative">
              <Image
                src="/memes-intro.png"
                fill
                className="object-contain object-left"
                alt="intro"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
);

export default Intro;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes/meme.tsx
import { motion } from "framer-motion";
import Image from "next/image";
const textUpAnimate = {
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring", bounce: 0.4, duration: 0.6 },
  },
};
function Meme({ i, meme, onTag }: any) {
  return (
    <motion.div
      // variants={textUpAnimate}
      // initial={{ y: 50 * (i * 0.7), opacity: 0 }}
      // whileInView={{ y: 0, transition: { duration: 0.3, delay: i * 0.4 } }}
      // viewport={{ once: true, amount: 0.7 }}
      className={` items-center
       tracking-tighter lowercase rounded-2xl flex flex-col border-[1px] border-gray-200 shadow
       `}
    >
      <div className="bg-white w-full  rounded-tl-2xl rounded-tr-2xl py-6 items-center flex justify-center">
        <div className=" select-none  w-[400px] relative h-[400px] flex justify-end 
          {meme.type !== "image" ? (
            <video autoPlay muted controlsList="play" controls loop>
              <source src={meme.path} type="video/mp4" />
            </video>
          ) : (
            <Image
              src={meme.path}
              alt="image"
              fill
              className="object-contain unselectable"
            />
          )}
        </div>
      </div>

      <div className="bg-slate-50 bg-opacity-30   rounded-bl-2xl rounded-br-2xl w-full   px-4 pb-4 pt-2 flex flex-col items-start justify-start">
        <h1 className="tracking-tighter lowercase mt-2 text-body font-semibold">
          {meme.title}
        </h1>
        <div className="flex flex-wrap mt-3">
          {meme.tags.map((tag: string, i: number) => (
            <div
              key={tag}
              onClick={() => onTag(tag)}
              className="select-none cursor-pointer hover:shadow text-gray-500 mr-3 mb-2 px-2 py-1 text-sm bg-white border border-gray-300 rounded-md"
            >
              {tag}
            </div>
          ))}
        </div>
        <div className="flex  flex-row items-center justify-between w-full mt-3">
          <h1 className="text-gray-400 text-description text-[12px]">
            {meme.created_on}
          </h1>
          <a href={meme.link} target="_blank" rel="noreferrer">
            <div className="bg-blue-500 lowercase text-xs cursor-pointer first-line:hover:shadow-lg py-1.5  px-3 text-white rounded-xl">
              View on
              <i className="pl-2 fa-brands fa-twitter" />
            </div>
          </a>
        </div>
      </div>
    </motion.div>
  );
}

export default Meme;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes/memes.tsx
import { memes } from "data/memes";
import { motion } from "framer-motion";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Meme from "./meme";

const textUpAnimate = {
  offscreen: { y: 20, opacity: 0 },
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring" as const, bounce: 0.4, duration: 1 },
  },
};
function MemesComponent() {
  const [search, setSearch] = useState<string>("");
  const [selectedTag, setselectedTag] = useState<string>("popular");
  const [searchedTags, setSearchedTags] = useState<string[]>([]);
  const [selectedMemes, setSelectedMemes] = useState<any[]>(memes);

  const tags = ["popular", "latest", ...memes.map((meme) => meme.tags).flat()];

  // function search in array
  function searchInArray(keyword: any) {
    setSearch(keyword);
    let filtered = tags.filter((item: any) =>
      item.toLowerCase().includes(keyword)
    );
    filtered = filtered.filter((item: string, index: number) => {
      return filtered.indexOf(item) === index;
    }, []);

    setSearchedTags(filtered);
  }
  useEffect(() => {
    if (search == "") {
      setSearchedTags([]);
    }
  }, [search]);

  useEffect(() => {
    if (selectedTag == "latest") {
      const sel = memes.sort((a, b) => {
        return (
          new Date(b.created_on).getTime() - new Date(a.created_on).getTime()
        );
      });
      setSelectedMemes(sel);
    } else if (selectedTag == "popular") {
      const sel = memes.sort((a, b) => {
        return b.likes - a.likes;
      });
      setSelectedMemes(sel);
    } else {
      if (selectedTag == "latest") {
        setSelectedMemes(memes);
      } else {
        const sel = memes
          .filter((meme) => meme.tags.includes(selectedTag))
          .sort((a, b) => {
            return (
              new Date(b.created_on).getTime() -
              new Date(a.created_on).getTime()
            );
          });
        setSelectedMemes(sel);
      }
    }
  }, [selectedTag]);
  const router = useRouter();
  return (
    <div className="bg-no-repeat border-b bg-fill bg-[url('/bgs1s.png')] bg-cover bg-fixed bg-center">
      <div className="backdrop-blur-3xll bg-white/70 pb-24 ">
        <div className=" ">
          <div className="pt-20 px-4 pb-10">
            <motion.h1
              variants={textUpAnimate}
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ delay: 3 }}
              className="pb-1 text-3xl lowercase text-black text-center"
            >
              Memes i made
            </motion.h1>

            <motion.p
              variants={textUpAnimate}
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ delay: 3 }}
              className="text-slate-600 text-[18px] text-center"
            >
              Enjoy the {memes.length} memes I made over the last few months.
            </motion.p>
          </div>
          <div id="memes"></div>
          <div className="max-w-[1100px] m-auto p-2 bg-white   top-0 z-50  ">
            <div className=" bg-white w-full flex flex-col items-center  rounded-lg border border-gray-400 py-2 ">
              <div className="flex flex-row px-4 items-center w-full">
                <i className="fa-solid fa-magnifying-glass"></i>
                <input
                  value={search}
                  type="search"
                  onChange={(e) => searchInArray(e.target.value)}
                  className="border-none outline-none px-4 w-full"
                  placeholder="Search by tags.."
                />
              </div>
              <div className="w-full">
                {searchedTags.length > 0 ? (
                  <div className="flex  px-4 flex-wrap mt-3 border-t pt-3">
                    {searchedTags.map((tag: string, i: number) => (
                      <div
                        onClick={() => {
                          setSearch("");
                          setselectedTag(tag);
                        }}
                        key={tag + i}
                        className="cursor-pointer select-none text-gray-500 mr-3 mb-2 px-2 py-1 text-sm bg-white border border-gray-300 rounded-md"
                      >
                        {tag}
                      </div>
                    ))}
                  </div>
                ) : (
                  <div></div>
                )}
              </div>
            </div>
          </div>
          <div className="max-w-[1000px] m-auto p-2 pt-6  ">
            <div
              onClick={() => setselectedTag("latest")}
              className="flex flex-row items-center justify-center cursor-pointer lowercase text-sm select-none w-fit text-gray-500 mr-3 mb-6 px-2 py-1  bg-white border border-gray-300 rounded-md"
            >
              {search != "latest" && (
                <i className="fa-solid fa-xmark px-2 "></i>
              )}
              {selectedTag}
            </div>

            <p className="px-2 text-xs lowercase pb-10 text-slate-500">
              <strong>Note</strong>: here all memes are created by me and
              opinions are totally mine. If you find any meme offensive, please
              tap the <span className="underline">view on twitter</span> button
              and share your thoughts.
            </p>
            <div className="grid grid-cols-2 gap-4 
              {selectedMemes.map((meme: any, i: number) => (
                <Meme
                  key={meme.title}
                  meme={meme}
                  i={i}
                  onTag={(tag: string) => {
                    setSearch("");
                    router.push("#memes");
                    setselectedTag(tag);
                  }}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default MemesComponent;
function getValuesWithDuplicates(arr: string[]) {
  const countMap = new Map();
  const duplicateValues: string[] = [];

  // Count occurrences of each element
  arr.forEach((element) => {
    countMap.set(element, (countMap.get(element) || 0) + 1);
  });

  // Check for duplicate values and add them to the result array
  countMap.forEach((count, element) => {
    if (count > 1) {
      duplicateValues.push(element);
    }
  });

  return duplicateValues;
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes.tsx
import { memes } from "data/memes";
import Image from "next/image";
import HorizontalScroll from "./horizontal-scroll";
function MemesIntro() {
  return (
    <div>
      <div className="py-20 px-6 max-w-[600px] mx-auto">
        <h1 className="pb-1 text-3xl lowercase text-black ">
          TECH RELATED MEMEs HE MADE
        </h1>

        <p className="text-slate-500 text-[18px] mt-4">
          He created {memes.length} memes back in 2023 and shared them on
          twitter, he thinks memes are the best way to explain things on
          internet about the situation.
        </p>
      </div>
      <HorizontalScroll>
        {memes
          .sort((a, b) => b.likes - a.likes)
          .map((meme: any) => (
            <div
              key={meme.id}
              className=" cursor-pointer select-none 
            >
              <div
                className={` items-center
       tracking-tighter lowercase rounded-2xl flex flex-col border-[1px] border-gray-200 shadow
       `}
              >
                <div className="bg-white w-full  rounded-tl-2xl rounded-tr-2xl px-2 items-center flex justify-center">
                  <div className=" select-none  w-[400px] relative h-[400px] flex justify-end 
                    {meme.type !== "image" ? (
                      <video autoPlay muted controlsList="play" controls loop>
                        <source src={meme.path} type="video/mp4" />
                      </video>
                    ) : (
                      <Image
                        src={meme.path}
                        alt="image"
                        fill
                        className="object-contain unselectable"
                      />
                    )}
                  </div>
                </div>

                <div className="bg-slate-50 bg-opacity-30   rounded-bl-2xl rounded-br-2xl w-full   px-4 pb-4 pt-2 flex flex-col items-start justify-start">
                  <h1 className="tracking-tighter lowercase mt-2 text-body font-semibold">
                    {meme.title}
                  </h1>

                  <div className="flex  flex-row items-center justify-between w-full mt-3">
                    <h1 className="text-gray-400 text-description text-[12px]">
                      {meme.created_on}
                    </h1>
                    <a href={meme.link} target="_blank" rel="noreferrer">
                      <div className="bg-blue-500 lowercase text-xs cursor-pointer first-line:hover:shadow-lg py-1.5  px-3 text-white rounded-xl">
                        View on
                        <i className="pl-2 fa-brands fa-twitter" />
                      </div>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))}
      </HorizontalScroll>
      <div className="mb-10 mt-2 text-[17px] max-w-[600px]  px-6  py-2  
        <p>Message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            back in 2023 when i had humour,[now these memes are outdated maybe]
            <br />
            <br />I believe Sometimes, a meme teaches more than a lecture. When
            it’s relatable, it hits differen. one meme can say what a
            thousand-word essay tries to
          </p>
        </div>
      </div>
      <div className="pb-20"></div>
    </div>
  );
}

export default MemesIntro;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/rechart.tsx
"use client";

import { ArrowBigDownDash, ArrowBigUp } from "lucide-react";
import {
  Line,
  LineChart,
  ResponsiveContainer,
  Tooltip,
  XAxis,
  YAxis,
} from "recharts";

interface Game {
  id: string;
  createdAt: number;
  perf: string;
  winner: string;
  status: string;
  white: {
    name: string;
    rating: number;
    ratingDiff: number;
  };
  black: {
    name: string;
    rating: number;
    ratingDiff: number;
  };
}

interface Props {
  games: Game[];
  username: string;
}

export default function RatingChart({ games, username }: Props) {
  const reversedGames = [...games].reverse();

  const data = reversedGames.map((game, index) => {
    const isWhite = game.white.name.toLowerCase() === username.toLowerCase();
    const yourRating = isWhite ? game.white.rating : game.black.rating;
    const opponentRating = isWhite ? game.black.rating : game.white.rating;

    const result =
      (game.winner === "white" && isWhite) ||
      (game.winner === "black" && !isWhite)
        ? "Win"
        : game.winner === null
        ? "Draw"
        : "Loss";

    const method = game.status ?? "unknown";
    return {
      game: `Game ${index + 1}`,
      yourRating: yourRating,
      opponentRating,
      method,
      result,
      yourRatingDiff: isWhite ? game.white.ratingDiff : game.black.ratingDiff,
      opponentRatingDiff: isWhite
        ? game.black.ratingDiff
        : game.white.ratingDiff,
    };
  });
  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload?.length) {
      const { yourRating, method, result, yourRatingDiff } = payload[0].payload;

      return (
        <div className="bg-white border p-2 rounded shadow text-sm">
          <p className="font-semibold">Game {label + 1}</p>
          <p>
            rating: {yourRating}
            <span
              className={
                yourRatingDiff >= 0 ? "text-green-600" : "text-red-500"
              }
            >
              {" "}
              ({yourRatingDiff >= 0 ? "+" : ""}
              {yourRatingDiff})
            </span>
            {yourRatingDiff >= 0 ? (
              <ArrowBigUp className="inline-block h-4 w-4 ml-1 text-green-600" />
            ) : (
              <ArrowBigDownDash className="inline-block h-4 w-4 ml-1 text-red-500" />
            )}
          </p>
          <p
            className={yourRatingDiff >= 0 ? "text-green-600" : "text-red-500"}
          >
            new rating: {yourRating + yourRatingDiff}
          </p>

          <p>method: {method}</p>

          <p
            className={`font-medium ${
              result === "Win"
                ? "text-green-600"
                : result === "Loss"
                ? "text-red-500"
                : "text-yellow-500"
            }`}
          >
            result: {result}
          </p>
        </div>
      );
    }
    return null;
  };

  return (
    <div className="w-full bg-gray-100 pr-8 pb-8 rounded-xl">
      <h2 className="text-lg font-semibold my-4 pt-4 pb-8 text-black mx-4">
        last 20 games rating chart:
      </h2>
      <ResponsiveContainer width="100%" height={300}>
        <LineChart
          data={data}
          margin={{ top: 10, right: 20, bottom: 10, left: 0 }}
        >
          {/* <CartesianGrid strokeDasharray="3 3" /> */}
          <XAxis dataKey="                " tick={{ fontSize: 10 }} />
          <YAxis
            domain={["auto", "auto"]}
            fontSize={10}
            tick={{ fontSize: 10 }}
          />
          <Tooltip content={<CustomTooltip />} />
          <Line
            type="monotone"
            dataKey="yourRating"
            name="Your Rating"
            stroke="#0B82FE"
            strokeWidth={3}
            dot={({ cx, cy, payload }: any) => {
              let fill = "#4f46e5";
              if (payload.result === "Win") fill = "#16a34a"; // green
              else if (payload.result === "Loss") fill = "#dc2626"; // red
              else if (payload.result === "Draw") fill = "#facc15"; // yellow

              return (
                <circle
                  cx={cx}
                  cy={cy}
                  r={4}
                  fill={fill}
                  stroke="#fff"
                  strokeWidth={2}
                />
              );
            }}
          />
          {/* <Line
            type="monotone"
            dataKey="opponentRating"
            name="Opponent Rating"
            stroke="#9ca3af"
            strokeDasharray="5 5"
          /> */}
        </LineChart>
      </ResponsiveContainer>
    </div>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/slider.tsx
import { useState } from "react";

import Image from "next/image";

interface SliderProps {
  images: Array<String>;
}

const Slider = (props: SliderProps) => {
  const [i, setIndex] = useState(0);
  const { images } = props;
  return (
    <div className=" flex flex-row items-center ">
      <div
        className={`p-3 cursor-pointer hover:bg-gray-100 rounded-full 
        ${i == 0 && `invisible`}`}
        onClick={() => setIndex(i - 1)}
      >
        <i className="fa-sharp fa-solid fa-chevron-left"></i>
      </div>
      <div className="h-[500px] w-[500px]  
        <Image
          src={`/imgs/` + images[i]}
          alt="image"
          className="object-contain"
          fill
          height={0}
          width={0}
          sizes="100vw"
          placeholder="blur"
          blurDataURL="/Cineast-1.PNG"
        />
      </div>

      <div
        className={`p-3 cursor-pointer hover:bg-gray-100 rounded-full 
        ${i + 1 == images.length && `invisible`}`}
        onClick={() => setIndex(i + 1)}
      >
        <i className="fa-sharp fa-solid fa-chevron-right"></i>
      </div>
    </div>
  );
};

export default Slider;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/useful-products.tsx
import { newProjects, usefulProjects } from "data/projects";

import Image from "next/image";
import Link from "next/link";
function UsefulProducts() {
  return (
    <div id="projects" className="bg-no-repeat  bg-cover">
      <div className="backdrop-blur-[100px] bg-white/60 pb-24 ">
        <div className=" ">
          <div className="max-w-[1000px] m-auto   px-6 ">
            <div className="py-20  max-w-[600px] mx-auto">
              <h1 className="pb-1 text-3xl lowercase text-black ">
                useful Products he built
              </h1>

              <p className=" mt-4 text-[18px] text-slate-500   
                The actual useful products he built, which{" "}
                <span className="bg-slate-100"> generates revenue</span> for him
                are listed below.
              </p>
              <br />
              <p className="text-[16px] text-slate-500">
                click on the card to view some images and information about the
                app.
              </p>
            </div>
            <div className="grid grid-cols-2 gap-4 
              {usefulProjects.map((project: any, i: number) => (
                <ProjectComponent key={project.name} project={project} i={i} />
              ))}
            </div>
            <div className="mt-10 text-[17px] max-w-[600px]   py-2  
              <p>Message from him:</p>
              <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
                <p>
                  I design all my apps with one rule: keep it super simple and
                  deliver the best possible user experience; something anyone
                  can use.
                </p>
                <br />
                <p>New product dropping soon.</p>
              </div>
            </div>
          </div>
          <div className="py-20 max-w-[600px] mx-auto px-6">
            <h1 className="pb-1 text-3xl lowercase text-black ">
              few Good ones after 2022
            </h1>

            <p className="mt-4 text-[18px] text-slate-500   
              After 2022 as he got more exprience, he started to get picky with
              what apps to build. he won 1st runner up prices in supabase launch
              week hackathon with Tweet schedular desktop app(schedurio) in may
              2023.
            </p>
            <p className="mt-4 text-[18px] text-slate-500   
              after in july 2023 he started building graphic design
              tool(craftor) and was spending months on building it then he
              burned out while building it.
            </p>
          </div>
          <div className="max-w-[1000px] mx-auto px-6">
            <div className="grid grid-cols-3 gap-4 
              {newProjects.map((project: any, i: number) => (
                <ProjectComponent2 key={project.name} project={project} i={i} />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default UsefulProducts;

function ProjectComponent2(props: any) {
  const { project, i } = props;

  return (
    <Link
      scroll={false}
      href={`/?slug=${project.name.toLowerCase()}`}
      as={`/projects/${project.name.toLowerCase()}`}
    >
      <div
        className={`select-none cursor-pointer items-center 
       tracking-tighter lowercase  flex flex-col  hover:border-blue-600 bg-gray-100 
       p-2 rounded-lg `}
      >
        <div className="w-full h-[200px] 
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            fill
            className="object-contain unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div>
        {/* <div className="w-[100px] h-[100px]  relative rounded-lg mx-2">
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            className="object-contain"
            fill
            className="unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div> */}

        <div className="px-2 py-6 w-full">
          <div className="flex flex-row items-center justify-between pb-1">
            <h1 className="text-[18px] lowercase text-black">
              {project.name}
            </h1>
          </div>

          <p className=" text-gray-500 ">{project.description} </p>
          <div className="px-0.5 pt-2.5 flex flex-row items-center justify-between">
            <p
              className="lowercase text-[12px] 
           text-gray-500 border-b-[1px] border-gray-500 hover:text-black hover:border-black"
            >
              Read More
            </p>
            <p className="text-gray-500  lowercase text-[12px]">
              {project.date}
            </p>
          </div>
        </div>
      </div>
    </Link>
  );
}

function ProjectComponent(props: any) {
  const { project, i } = props;

  return (
    <Link
      scroll={false}
      href={`/?slug=${project.name.toLowerCase()}`}
      as={`/projects/${project.name.toLowerCase()}`}
    >
      <div
        className={`select-none cursor-pointer items-center 
       tracking-tighter lowercase  flex flex-row  hover:border-blue-600 bg-gray-100 
        rounded-lg px-2`}
      >
        {/* <div className="w-full h-[200px] 
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            className="object-contain"
            fill
            className="unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div> */}
        <div className="w-[100px] h-[100px]  relative rounded-lg mx-2">
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            fill
            className="object-contain unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div>

        <div className="px-2 py-6 w-full">
          <div className="flex flex-row items-center justify-between pb-1">
            <h1 className="text-[18px] lowercase text-black">
              {project.name}
            </h1>
          </div>

          <p className=" text-gray-500 ">{project.description} </p>
          <div className="px-0.5 pt-2.5 flex flex-row items-center justify-between">
            <p
              className="lowercase text-[12px] 
           text-gray-500 border-b-[1px] border-gray-500 hover:text-black hover:border-black"
            >
              Read More
            </p>
            <p className="text-gray-500  lowercase text-[12px]">
              {project.date}
            </p>
          </div>
        </div>
      </div>
    </Link>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/utils.ts
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/views.tsx
function Views({ posts }: { posts: any }) {
  return (
    <div className="max-w-[1000px] m-auto grid grid-cols-2 gap-4">
      {posts
        .sort()
        .slice(1, 5)
        .map((post: any) => (
          <div
            key={post.frontmatter.title}
            className="p-6 border-[1px] border-gray-200 shadow rounded-lg"
          >
            <h1 className="font-normal text-[20px] ">
              {post.frontmatter.title}
            </h1>
            <p dangerouslySetInnerHTML={{ __html: post.content }}></p>
            <small className="text-gray-500 text-sm mt-2">
              {post.frontmatter.posted_at}
            </small>
          </div>
        ))}
    </div>
  );
}

export default Views;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/why-i built-this.tsx
function WhyIBuiltThisWebsite() {
  return (
    <div>
      <div className=" flex flex-col justify-center max-w-[600px] mx-auto  
        <div className=" px-6  ">
          <h1 className="lowercase text-h1 ">
            Why He built this webstie?
          </h1>
          <p className="text-gray-500 mt-2 mb-6">
            he states &quot;as a fan of elon musk&apos;s work&quot; the video
            below gives him bigger perspective of life.
          </p>
        </div>
        <div className="px-6  ">
          <video controlsList="play" controls loop className="rounded-lg mt-4">
            <source
              src={"videos/elon-musk-about-problem-solving.mp4"}
              type="video/mp4"
            />
          </video>
        </div>

        <div className="mt-10 text-[17px] max-w-[600px]  px-6  py-2  
          <p>
            &quot;We have to be excited about the future, We have to do things
            that make us want to live, Life can&apos;t just be about solving
            problems.&quot;
          </p>
          <br />
          <p>-Elon Musk</p>
          <br />
          <p>He wrote little message:</p>
          <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
            <p>
              I built this website for fun, some people said &quot;why work hard
              on building this kinda useless website?&quot; the elon musk video
              above answers this ig.
            </p>
            <br />
            <p>
              people build portfolio websites showcasing skills and projects to
              get a job or get client i dont care about that i have added more
              of personality in this site, for reminder to my future self about
              the things i love at this time and not to lost it.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default WhyIBuiltThisWebsite;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/_app.tsx
import type { AppProps } from "next/app";
import Head from "next/head";
import Script from "next/script";
import localFont from 'next/font/local';
import "../styles/globals.css";

// Configure SpaceMono as the only font
const spaceMono = localFont({
  src: '../public/fonts/SpaceMono-Regular.ttf',
  variable: '--font-space-mono',
  display: 'swap',
});

function MyApp({ Component, pageProps }: AppProps) {
  return (
    <div className={`${spaceMono.variable}`}>
      <Head>
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
          integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />

      </Head>
      <Script
        defer
        src="https://cloud.umami.is/script.js"
        data-website-id="c0b35b73-97bb-431d-b0da-dcb3c4582bca"
      ></Script>

      <Component {...pageProps} />
    </div>
  );
}

export default MyApp;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/api/hello.ts
// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next'

type Data = {
  name: string
}

export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  res.status(200).json({ name: 'John Doe' })
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/api/strava.ts
import pb from "data/pd";
import { NextApiRequest, NextApiResponse } from "next";

async function getFreshAccessToken(refresh_token: string) {
  const response = await fetch("https://www.strava.com/api/v3/oauth/token", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      client_id: process.env.STRAVA_CLIENT_ID,
      client_secret: process.env.STRAVA_CLIENT_SECRET,
      grant_type: "refresh_token",
      refresh_token,
    }),
  });

  if (!response.ok) {
    throw new Error(`Failed to refresh token: ${response.statusText}`);
  }

  return await response.json();
}

async function getTimeSlot() {
  const hour = new Date().getHours();
  if (hour >= 5 && hour < 12) return "morning";
  if (hour >= 12 && hour < 18) return "evening";
  return "night";
}

async function hasRequestedToday(time_slot: string) {
  const today = new Date().toISOString().split("T")[0]; // YYYY-MM-DD
  try {
    const record = await pb
      .collection("request_times")
      .getFirstListItem(`time_slot="${time_slot}" && request_date>="${today}"`);
    return !!record;
  } catch (e) {
    return false; // No request found for today
  }
}

async function saveRequestTime(time_slot: string) {
  await pb.collection("request_times").create({
    time_slot,
    request_date: new Date().toISOString(),
  });
}

async function saveActivities(activites: any[]) {
  for (const activity of activites) {
    try {
      // Check if activity already exists to avoid duplicates
      const exists = await pb
        .collection("activites")
        .getFirstListItem(`activity_id="${activity.id}"`, {
          requestKey: null,
        })
        .catch(() => null);

      if (!exists) {
        await pb.collection("activites").create({
          activity_id: activity.id,
          name: activity.name,
          distance: activity.distance,
          moving_time: activity.moving_time,
          elapsed_time: activity.elapsed_time,
          type: activity.type,
          start_date: activity.start_date,
          start_date_local: activity.start_date_local,
          timezone: activity.timezone,
          total_elevation_gain: activity.total_elevation_gain,
          average_speed: activity.average_speed,
          max_speed: activity.max_speed,
          elev_high: activity.elev_high,
          elev_low: activity.elev_low,
        });
      }
    } catch (error) {}
  }
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  try {
    await pb.admins.authWithPassword(
      process.env.DBUSERNAME!,
      process.env.DBPASSWORD!
    );

    const time_slot = await getTimeSlot();
    const { start, end } = req.query;
    // Check if we've already made a request for this time slot today
    if (await hasRequestedToday(time_slot)) {
      // Fetch activites from PocketBase
      const filter =
        start && end ? `start_date>="${start}" && start_date<="${end}"` : "";
      const activites = await pb.collection("activites").getList(1, 50, {
        filter,
        sort: "-start_date",
      });
      return res.status(200).json(activites.items);
    }

    // Get token from PocketBase
    const record = await pb.collection("tokens").getFirstListItem("");
    let access_token = record.access_token;

    // Check if token is expired
    if (Date.now() / 1000 > record.expires_at) {
      const newToken = await getFreshAccessToken(record.refresh_token);

      // Update token in PocketBase
      await pb.collection("tokens").update(record.id, {
        access_token: newToken.access_token,
        refresh_token: newToken.refresh_token,
        expires_at: newToken.expires_at,
      });

      access_token = newToken.access_token;
    }
    // Fetch activites from Strava
    const activitiesRes = await fetch(
      "https://www.strava.com/api/v3/athlete/activities",
      {
        headers: { Authorization: `Bearer ${access_token}` },
      }
    );

    if (!activitiesRes.ok) {
      throw new Error(`Strava API error: ${activitiesRes.statusText}`);
    }

    const activites = await activitiesRes.json();

    // Save activites to PocketBase
    await saveActivities(activites);

    // Record the request time
    await saveRequestTime(time_slot);

    // Fetch saved activites from PocketBase with date range filter
    const filter =
      start && end ? `start_date>="${start}" && start_date<="${end}"` : "";
    const savedActivities = await pb.collection("activites").getList(1, 50, {
      filter,
      sort: "-start_date",
    });

    res.status(200).json(savedActivities.items);
  } catch (error) {
    console.error("Error in handler:", error);
    res.status(500).json({ error: "Internal server error" });
  }
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/index.tsx
import type { NextPage } from "next";

import About from "@/components/About";
import AllProjects from "@/components/AllProjects";
import ActivityCalendar from "@/components/calender";
import ChessStats from "@/components/chess";
import Contact from "@/components/Contact";
import Intro from "@/components/intro";
import MemesIntro from "@/components/memes";
import Skills from "@/components/Skills";
import UsefulProducts from "@/components/useful-products";
import Head from "next/head";
import { useRouter } from "next/router";
import Model from "../components/Model";
import { allHisProjects } from "../data/projects";

const Home: NextPage = () => {
  const router = useRouter();

  return (
    <div className="font-apple tracking-tighter lowercase">
      <Head>
        <meta property="og:title" content="Ansh Rathod" />
        <meta property="og:site_name" content="Ansh Rathod" />
        <meta property="og:url" content="https://ansh.life" />

        <meta
          property="og:description"
          content="A full-stack developer, Building Seamless mobile & web applications."
        />

        <meta
          property="og:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />

        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@anshrathodfr" />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta name="twitter:title" content="Ansh Rathod" />
        <meta
          name="twitter:description"
          content="A full-stack developer, Building Seamless mobile & web applications."
        />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />
        <title>Ansh Rathod</title>
      </Head>

      <div className="tracking-tighter">
        <Intro />

        <About />
        {/* <div className=" border-t-[0.6px] border-t-slate-200"></div> */}
        {/* <div
          className=" pt-14 max-w-[1200px] mx-auto flex flex-col
         items-center px-2"
        >
          <GithubCard data={data} />
        </div> */}
        {/* <div className="border-t-[1px] border-t-slate-300 "></div> */}
        {/* <Views posts={posts} /> */}
        {/* <div
          className="py-14 max-w-[1200px] mx-auto flex flex-col
         items-center px-4"
        >
          <MusiveCard />
        </div> */}
        {/* <div className="border-t-[1px] border-t-slate-300 mt-14"></div> */}
        <UsefulProducts />
        <AllProjects />
        <Skills />
        <ActivityCalendar />

        <ChessStats />
        <MemesIntro />
        {/* <WhyIBuiltThisWebsite /> */}
        <Contact />

        {/* <MyGallery /> */}
        <Model
          isOpen={!!router.query.slug}
          project={allHisProjects.find(
            (project: any) => project.name.toLowerCase() == router.query.slug
          )}
        />
      </div>
    </div>
  );
};

export default Home;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/memes.tsx
import Contact from "@/components/Contact";
import NavBar from "@/components/NavBar";
import MemesComponent from "@/components/memes/memes";
import Head from "next/head";

function Memes() {
  return (
    <div>
      <Head>
        <meta property="og:title" content="memeloper fr who?" />
        <meta property="og:site_name" content="memeloper.fr" />
        <meta property="og:url" content="https://ansh.life" />

        <meta
          property="og:description"
          content="From Code to Comic: Check the Hilarious Journey of a Programmer through Memes."
        />

        <meta
          property="og:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />

        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@anshrathodfr" />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta name="twitter:title" content="memeloper fr who?" />
        <meta
          name="twitter:description"
          content="From Code to Comic: Check the Hilarious Journey of a Programmer through Memes."
        />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/memes_intro_image_meta.png"
        />
        <title>memeloper fr who?</title>
      </Head>
      <div>
        {/* <LandingPage /> */}
        <NavBar />

        <MemesComponent />
        <Contact />
      </div>
    </div>
  );
}

export default Memes;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/projects/[slug].tsx
import Icon from "@/components/Icon";
import Slider from "@/components/slider";
import { allHisProjects } from "data/projects";
import { GetServerSidePropsContext } from "next";

import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";

function Project({ project }: { project: any }) {
  const router = useRouter();

  return (
    <div>
      <Head>
        <title>{project.name + " built by Ansh Rathod"}</title>
        <meta
          property="og:title"
          content={project.name + " built by Ansh Rathod"}
        />
        <meta
          property="og:site_name"
          content={project.name + " built by Ansh Rathod"}
        />
        <meta property="og:description" content={project.description} />
        <meta
          property="og:url"
          content={`https://ansh.life/projects/${project.name.toLowerCase()}`}
        />
        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta
          name="twitter:site"
          content={`https://ansh.life/projects/${project.name.toLowerCase()}`}
        />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta
          name="twitter:title"
          content={project.name + " built by Ansh Rathod"}
        />
        <meta name="twitter:description" content={project.description} />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />
      </Head>

      <div className="overflow-y-hidden h-screen">
        <div
          className="py-2.5 px-4 w-screen  border-b-[0.5px] border-gray-300 font-poppins
               font-bold text-xl  "
        >
          <div
            className=" w-[700px] max-w-[700px] mx-auto
                      
               justify-between items-center "
          >
            <div
              className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700"
              onClick={() => router.push("/", "/", { shallow: true })}
            >
              <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
            </div>
            <p>{project.name}</p>
            <div
              className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700 invisible"
            >
              <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
            </div>
          </div>
        </div>
        <div
          className={`items-center
                    font-proxima  flex flex-col bg-white 
                     w-[700px] max-w-[700px] mx-auto
                      
                     `}
        >
          <div
            className="h-screen max-h-full
               w-full overflow-y-scroll "
          >
            <div className="flex justify-center">
              <Slider images={project.images} />
            </div>

            <div
              className="mb-12 flex flex-row justify-center text-center items-end 
                w-full px-10  
            >
              <div>
                <b className="pl-1.5 font-poppins">Share on</b>
                <div className="pt-5 flex flex-row">
                  <Icon
                    classes="fa-brands fa-linkedin"
                    url={`https://www.linkedin.com/sharing/share-offsite/?url=${project.url}`}
                  />

                  <Icon
                    classes="fa-brands fa-twitter"
                    url={`http://twitter.com/share?text=Check out this amazing app built by @AnshhRathod on github. view all projects on https://ansh.life&url=${project.url}&hashtags=flutter,opensource,github`}
                  />
                  <Icon classes="fa-regular fa-copy" />
                </div>
              </div>
            </div>

            <div className="mt-6 flex flex-row justify-start w-full px-12  
              <div>
                <b className="font-poppins">Description</b>
                <div
                  className="mt-1.5"
                  dangerouslySetInnerHTML={{
                    __html: project.long_description,
                  }}
                />
              </div>
            </div>

            <div className="my-6 flex flex-row justify-start w-full px-12  
              <div>
                <b className="font-poppins">Tech stack</b>
                <p className="mt-1.5 ">{project.madeWith}</p>
              </div>
            </div>
            <div className="my-6 flex flex-row justify-start w-full px-12  
              <div>
                <b className="font-poppins">Created on</b>
                <p className="mt-1.5 ">{project.date}</p>
              </div>
              <div className="mx-6">
                <b className="font-poppins">
                  {project.name != "Cineast" ? "Earned Stars" : "Downloads"}
                </b>
                <p className="mt-1">
                  <Image
                    src={
                      project.name != "Cineast"
                        ? `https://img.shields.io/github/stars/${project.url.replace(
                            "https://github.com/",
                            ""
                          )}?style=social`
                        : "https://img.shields.io/static/v1?label=Downloads&message=1k&color=%3CCOLOR%3E"
                    }
                    alt="stars"
                    height={26}
                    width={100}
                    className="object-contain"
                    unoptimized
                  />
                </p>
              </div>
            </div>
            <div className="mt-2 flex flex-row justify-center">
              <a href={project.url} target="_blank" rel="noreferrer">
                <div
                  className="pr-4 pl-3 py-2 lowercase font-proxima rounded-lg 
                  flex flex-row justify-center items-center text-center cursor-pointer bg-blue-500 text-white 
                   transition-all ease-in-out shadow-md shadow-blue-400 "
                >
                  {project.name != "Cineast" ? (
                    <>
                      <i className="fa-brands fa-github px-2" />
                      <p className="text-[12px]">view source code</p>
                    </>
                  ) : (
                    <>
                      <i className="fa-brands fa-google-play px-2" />
                      <p className="text-[12px]">Download now</p>
                    </>
                  )}
                </div>
              </a>
            </div>
            <div className="mb-[200px]"></div>
          </div>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps(params: GetServerSidePropsContext) {
  try {
    const data = allHisProjects.find(
      (project: any) => project.name.toLowerCase() == params.query.slug
    );
    if (!data) {
      return {
        notFound: true,
      };
    }
    return {
      props: {
        project: data,
      },
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
}

export default Project;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/switching-to-react-native/index.tsx
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

export default function Component() {
  return (
    <div>
      <Head>
        <title>We&apos;re forking React native. This is why.</title>
        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@anshrathodfr" />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta
          name="twitter:title"
          content="I'm switching to react native. This is why"
        />
        <meta
          property="og:title"
          content="I'm switching to react native. This is why"
        />
        <meta
          property="og:site_name"
          content="I'm switching to react native. This is why"
        />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/clickbait2.png"
        />
        <meta
          property="og:image"
          itemProp="image"
          content="https://ansh.life/clickbait2.png"
        />
      </Head>
      <div className="min-h-screen bg-zinc-900 text-zinc-100 p-4 md:p-8">
        <div className="h-60"></div>
        <article className="max-w-3xl mx-auto space-y-8">
          <h1 className="text-4xl md:text-5xl font-bold leading-tight tracking-tight">
            After 4 years of building in flutter I&apos;m switching to react
            native. This is why.
          </h1>

          <div className="flex items-center gap-3">
            <div className="rounded-full w-10 h-10">
              <Image
                src={"/z_QA0GlL_400x400.jpg"}
                width={100}
                className="rounded-full"
                height={100}
                alt="Ansh Rathod"
              />
            </div>
            <div className="flex items-center gap-2 text-lg text-zinc-300">
              <span>Ansh Rathod</span>
              <span>•</span>
              <time dateTime="2024-10-27">October 30, 2024</time>
            </div>
          </div>

          <div className="space-y-6 text-lg leading-relaxed text-zinc-200">
            <p>
              Over the years, There are many debates or Beginners questioning on
              whether React Native is best or flutter? I am here to answer none
              of your questions. it was clickbait to get you here, Go touch
              grass you computer nerd, cut down the internet for a day and eat
              ice creem it&apos;s better than posting memes on twitter thats
              what my mom said. and about the switching framework i just use
              flutter why would i spend more time learning new framework, jsx
              syntex are bad and has horrible dev exprience with typescript type
              errors eww, if google kills flutter one day i dont care! we all
              will laugh and will make more memes to share on twitter and we all
              can go back to writing html css. in the end, having fun is all
              that matters.
            </p>

            <h2 className="text-3xl font-bold mt-12 mb-6">
              React Native&apos;s is the best (maybe)
            </h2>

            <p>
              if you wanna build a app choose react native, if you wanna have
              fun cho0se flutter, if you wanna make money lets share memes on
              twitter, i chose twitter that why im writing and yeah i built
              desktop app using flutter(i dont care about tech stack you
              shouldnt too) called{" "}
              <Link href={"https://pimosa.app"} className="text-blue-500">
                <span className="text-blue-400 cursor-pointer">
                  Pimosa it&apos;s all in one media tool kit buy now it is
                  useful tool
                </span>
              </Link>{" "}
              if flutter dies i dont care I&apos;m learning game dev, building
              UI is boring now after doing it for the 4 years.
            </p>
            <p>
              My belief is that make money by giving value to users and have
              fun, generally i like building so i dont care about the tech
              stack, i just want to build something that will be useful to
              users. dont get attached to these frameworks its just zeros and
              onezies, 2030 nope i wont be using it, or will i? maybe not maybe
            </p>

            <p>
              Rick Astley - Never Gonna Give You Up (Video) by Rick Astley link
              input here.
            </p>
          </div>
        </article>
        <div className="h-60"></div>
      </div>
    </div>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/styles/globals.css
@import "tailwindcss";

/* SpaceMono font applied globally */
body {
  font-family: var(--font-space-mono), "Space Mono", monospace;
}

/* Consistent Typography System */
.text-h1 {
  @apply text-2xl font-bold leading-tight;
}

.text-h2 {
  @apply text-xl font-bold leading-tight;
}

.text-h3 {
  @apply text-lg font-bold leading-tight;
}

.text-body {
  @apply text-base leading-relaxed;
}

.text-description {
  @apply text-sm leading-relaxed;
}

.text-caption {
  @apply text-xs leading-relaxed;
}

/* Consistent Padding System */
.container-padding {
  @apply px-6 max-w-2xl mx-auto;
}

/* Standard small-width container (consistent horizontal padding) */
.small-container {
  @apply max-w-[600px] mx-auto px-6;
}

.section-spacing {
  @apply py-16;
}

.content-spacing {
  @apply space-y-4;
}

/* Remove old font class overrides */
.font-poppins,
.font-proxima,
.font-apple {
  font-family: var(--font-space-mono), "Space Mono", monospace;
}

*.unselectable {
  pointer-events: none;
}

.musive {
  @apply from-[#6ac88e] to-[#45b875] shadow-[#45b875e1];
}

.photoarc {
  @apply to-[#4b6cb7] from-[#5b86e5] shadow-[#5b87e5d2];
}
.moviedb {
  @apply from-[#4dabc3] to-[#358293] shadow-[#4dabc3df];
}
.quizer {
  @apply from-[#9d68a6] to-[#923a8b] shadow-[#923a8bde];
}
.animalia {
  @apply from-[#63c648] to-[#3aa148] shadow-[#63c648d7];
}
.sponacular {
  @apply to-[#4e549b] from-[#6f6f87] shadow-[#6f6f87db];
}
.marvel {
  @apply from-[#ec6f66] to-[#FC354C] shadow-[#ec6f66db];
}

.cineast {
  @apply to-[#da3a55] from-[#ed7658] shadow-[#da3a55e3];
}

@layer utilities {
  @variants responsive {
    /* Chrome, Safari and Opera */
    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }

    .no-scrollbar {
      -ms-overflow-style: none; /* IE and Edge */
      scrollbar-width: none; /* Firefox */
    }
  }
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/.next/types/routes.d.ts
// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = never
type PageRoutes = "/" | "/_app" | "/memes" | "/projects/[slug]" | "/switching-to-react-native"
type LayoutRoutes = never
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/_app": {}
  "/memes": {}
  "/projects/[slug]": { "slug": string; }
  "/switching-to-react-native": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/.next/types/validator.ts
// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types



type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}

type ApiRouteConfig = {
  default: (req: any, res: any) => Promise<Response | void> | Response | void
  config?: {
    api?: {
      bodyParser?: boolean | { sizeLimit?: string }
      responseLimit?: string | number | boolean
      externalResolver?: boolean
    }
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    maxDuration?: number
  }
}






// Validate ../../pages/_app.tsx
{
  const handler = {} as typeof import("../../pages/_app.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/index.tsx
{
  const handler = {} as typeof import("../../pages/index.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/memes.tsx
{
  const handler = {} as typeof import("../../pages/memes.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/projects/[slug].tsx
{
  const handler = {} as typeof import("../../pages/projects/[slug].js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/switching-to-react-native/index.tsx
{
  const handler = {} as typeof import("../../pages/switching-to-react-native/index.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/api/hello.ts
{
  const handler = {} as typeof import("../../pages/api/hello.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/strava.ts
{
  const handler = {} as typeof import("../../pages/api/strava.js")
  handler satisfies ApiRouteConfig
}




// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/About.tsx
import Link from "next/link";
import { useEffect, useState } from "react";

function calculateAge(year: number, month: number, day: number) {
  const today = new Date();
  const birthDate = new Date(year, month - 1, day);
  let age = today.getFullYear() - birthDate.getFullYear();
  const m = today.getMonth() - birthDate.getMonth();
  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
    age--;
  }
  return age;
}

const About = () => {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);
  return (
    <div
      id="about"
      className="bg-white py-[100px] w-screen max-w-full "
    >
      {" "}
      <div className="small-container mb-20">
        <h1 className="text-h1 mb-5 ">Basic Info:</h1>
        <p className="text-gray-500 text-body">
          <span className="text-black font-bold">Name:</span> Ansh Rathod
          <br />
          <span className="text-black font-bold">
            Other names given by family:
          </span>{" "}
          appii
          <br />
          <span className="text-black font-bold">Born on:</span> 2 may 2003
          <br />
          <span className="text-black font-bold">Age:</span>{" "}
          {isClient ? (
            <span suppressHydrationWarning>{calculateAge(2003, 5, 2)}</span>
          ) : (
            "21"
          )}
          <br />
          <span className="text-black font-bold">Location:</span> 127.0.0.1
          <br />
          <span className="text-black font-bold">Weight:</span> ~77 kg
          <br />
          <span className="text-black font-bold">Height:</span> 178 cm
          (5&apos;10&quot;)
          <br />
          <span className="text-black font-bold">Goal:</span> to build digital
          products that will help people.
          <br />
          <span className="text-black font-bold">Fav phrase:</span> nerd today,
          boss tomorrow!
          <br />
          <span className="text-black font-bold">Writes code on:</span> 13 inch
          Macbook air (2020) 16GB RAM, 256 SSD, M1 Chip.(no monitors)
          <br />
          <span className="text-black font-bold">
            Receives notifications on:
          </span>{" "}
          iPhone 16 pro (2025)
          <br />
          <span className="text-black font-bold">
            Subscriptions he pays:
          </span>{" "}
          Spotify Premium, chatgpt, grok, twitter(x), digital ocean droplet,
          vercel
          <br />
          <span className="text-black font-bold">Fav apps he uses:</span> Hevy,
          strava, screen studio, warp
          <br />
          <span className="text-black font-bold">Fav exercise:</span> bench
          press
          <br />
        </p>
      </div>
      <div className=" flex flex-col justify-center small-container  
        <div className=" ">
          <h1 className="text-h1">HIS Story</h1>
          <p className="text-gray-500 text-description">
            He wrote this section BTW
          </p>
        </div>

        <div className="mt-10  py-2  text-[18px]   
          <p>
            Hello! My name is <b>Ansh Rathod</b>, I&apos;m a self-taught
            full-stack developer who wrote the first line of code in the 2020
            Corona lockdown. I think I&apos;m a fast learner & implementor so I
            have tried many trendy frameworks, and languages that come and gone
            since I started.
          </p>
          <br />
          <p>
            I started for the passion and was building & completing apps like
            madmen till 2023, most of my 25+ apps are open source on my Github
            which are just <b className="text-black">hard-to-build</b> but{" "}
            <i>fun </i>
            projects (but not directly useful).
          </p>
          <br />
          {/* <p>
            Then realized that life is more than writing code and mindlessly
            gaining skills I should start earning with these skills too.
          </p> */}
          <br />
          <p>
            I always wanted to build something of my own so I started observing
            indie makers on X/Twitter [still observing] and I have learned so
            much about what kind of product would buy and actually be useful for
            a person. [well I have made all apps that are good for resume only
            till now🙈 you can check the list somewhere on this site].
          </p>
          <br />

          <p>
            As i design mine own apps and spend so much time building and
            observing i decided to build the my own product, In June 2024 I
            started building a desktop app{" "}
            <Link href="https://pimosa.app">
              <span className="text-blue-500">https://pimosa.app</span>
            </Link>{" "}
            where user will have a number of editing tools for video, photo, and
            music files in one desktop app.
          </p>
          <br />
          <p>
            I tweeted about the paid beta version of it and turned out it is
            very simple & useful for some people I ended up making $300+ in the
            first few hours of my tweet. realized &quot;Huh I made something
            good&quot;.
          </p>
          <br />
          <p>This is how i started monetizing my apps.</p>
        </div>
      </div>
    </div>
  );
};

export default About;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/AllProjects.tsx
import ProjectComponent from "@/components/Project";
import { projects } from "data/projects";

function AllProjects() {
  return (
    <div>
      <div className="backdrop-blur-[100px] bg-white/60 ">
        <div className="">
          <div className="max-w-[1000px] m-auto   px-6 ">
            <div className="py-10 max-w-[600px] mx-auto">
              <h1 className="pb-1 text-3xl lowercase text-black ">
                OPEN SOURCE APPS HE BUILT BEFORE 2022
              </h1>

              <p className="text-slate-500 text-[18px] mt-4">
                He built some open-source fully functional apps in order to
                learn and improve the building skills.
              </p>
              <br />
              <p className="text-slate-500 text-[14px] mt-4">
                click on the card to view some images and information about the
                app.
              </p>
            </div>
            <div className="grid grid-cols-2 gap-4 
              {projects.map((project: any, i: number) => (
                <ProjectComponent key={project.name} project={project} i={i} />
              ))}
            </div>
          </div>
        </div>
      </div>
      {/* <div className="my-10 text-[17px] max-w-[600px]  px-6  py-2  
        <p>Message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            These useless apps are avaialble on github go use/fork them. but i
            no longer maintain them.
          </p>
        </div>
      </div> */}
    </div>
  );
}

export default AllProjects;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Contact.tsx
import Icon from "@/components/Icon";
import Image from "next/image";
function Contact() {
  return (
    <div id="contact">
      <div className="bg-white pt-[10px] pb-[60px]   border-slate-200 m-auto max-w-[600px] ">
        <div className="px-6">
          <h1 className="font-bold mb-1.5 text-3xl lowercase ">Contact Him:</h1>
          <p className="text-slate-500 text-[18px]  mt-2">
            Leave a message on any of his social media, He&apos;ll reach out to
            you as soon as Possible.
          </p>
        </div>
        <div className="px-6  pt-12 flex flex-row ">
          <Icon
            i={1}
            url="https://github.in/Ansh-Rathod"
            name="Github"
            classes="fa-brands fa-github"
          />

          <Icon
            i={2}
            url="https://twitter.com/anshrathodfr"
            classes="fa-brands fa-twitter"
            name="Twitter"
          />

          <Icon
            i={5}
            url="https://discord.com/users/768376622243119114"
            name="discord"
            classes="fa-brands fa-discord"
          />
          <Icon
            i={6}
            url="mailto:anshrathod29@gmail.com"
            classes="fa-solid fa-envelope"
            name="Email"
          />
          <Icon
            i={7}
            url="https://www.instagram.com/anshrathodfr"
            name="Instagram"
            classes="fa-brands fa-instagram"
          />
        </div>
      </div>

      <div className="my-10 text-[17px] max-w-[600px]  px-6  py-2  
        <p>Message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            i usually share my thoughts and daily updates on X (Twitter). that’s
            the best place to reach me!
          </p>

          <br />

          <p>and one last thing:</p>
          <div className="rounded-lg mt-2">
            <Image
              src="/pins/wall15.jpg"
              alt="image"
              width={0}
              height={0}
              sizes="100vw"
              style={{ width: "100%", height: "auto" }}
              className="object-cover rounded-lg"
            />
          </div>
        </div>
      </div>

      <div className="max-w-[600px] mx-auto mb-10 text-center">
        <br />
        <p>Thank you! for visiting.</p>
      </div>

      <div className="py-6 border-t-[0.6px] 
        <p>
          © 2025 Ansh Rathod. All rights reserved. last updated: Apr 25, 2025
        </p>
      </div>
    </div>
  );
}

export default Contact;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Icon.tsx
import React from "react";
import { motion } from "framer-motion";
import Link from "next/link";
export default function Icon(props: any) {
  const { classes, url, i } = props;
  return (
    <motion.div
      initial={{ scale: 0, y: 10 * 0.5 * (i || 1) }}
      animate={{ scale: 1, y: 0 }}
      whileHover={{ scale: 1.2 }}
      viewport={{ once: true, amount: 0.5 }}
      transition={{ staggerChildren: 0.5, delay: i * 0.2 }}
      className="scale-100"
    >
      <a
        target="_blank"
        rel="noreferrer"
        href={url}
        className=" rounded-full p-2 mr-4 border-[0.6px] transition-all 
        ease-in-out border-slate-400 group
          hover:bg-blue-100 hover:border-blue-300"
      >
        <motion.i
          className={
            classes + ` group-hover:text-blue-700 group-hover:scale-110`
          }
        ></motion.i>
      </a>
    </motion.div>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/ListItem.tsx
const ListItem = (props: any) => {
  const { name, i } = props;
  return (
    <div className="my-1 flex flex-row justify-between items-center w-[130px] ">
      <p className=" tracking-tighter lowercase h-[24px] text-[18px] text-slate-500   
        {name}
      </p>
      <div className="text-blue-500 h-[24px] flex items-center">
        {/* {star && <i className="fa-solid fa-star text-[10px] leading-0" />} */}
      </div>
    </div>
  );
};

export default ListItem;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Model.tsx
import Icon from "@/components/Icon";
import { motion } from "framer-motion";
import Image from "next/image";
import { useRouter } from "next/router";
import Slider from "./slider";

function Model({ project, isOpen }: { project: any; isOpen: boolean }) {
  const router = useRouter();
  return (
    <div>
      {isOpen && (
        <motion.div
          className="fixed inset-0 bg-gray-500 bg-opacity-60 
            backdrop-blur-sm z-10"
        >
          <div
            className="w-screen h-screen max-w-full 
          flex justify-center items-start pt-4  
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0.9, y: 100 }}
              animate={{ scale: 1, opacity: 1, y: 0 }}
              transition={{ duration: 0.1 }}
              className={`items-center
                    rounded-lg flex flex-col bg-white 
                     w-[700px] max-w-[700px] shadow-xl 
                      
                     `}
            >
              <div
                className="py-2.5 px-4 w-full  border-b-[0.5px] border-gray-300 font-poppins
               font-bold text-xl flex flex-row 
               justify-between items-center "
              >
                <div
                  className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700"
                  onClick={() => router.push("/", "/", { shallow: true })}
                >
                  <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
                </div>
                <p>{project.name}</p>
                <div
                  className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700 invisible"
                >
                  <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
                </div>
              </div>

              <div
                className="h-screen max-h-full
               w-full overflow-y-scroll "
              >
                <div className="flex justify-center">
                  <Slider images={project.images} />
                </div>

                <div
                  className="mb-12 flex flex-row justify-center text-center items-end 
                w-full px-10  
                >
                  <div>
                    <b className="pl-1.5 font-poppins">Share on</b>
                    <div className="pt-5 flex flex-row">
                      <Icon
                        classes="fa-brands fa-linkedin"
                        url={`https://www.linkedin.com/sharing/share-offsite/?url=${project.url}`}
                      />

                      <Icon
                        classes="fa-brands fa-twitter"
                        url={`http://twitter.com/share?text=Check out this amazing app built by @anshrathodfr on github. view all projects on https://ansh.life&url=${project.url}&hashtags=flutter,opensource,github`}
                      />
                      <Icon classes="fa-regular fa-copy" />
                    </div>
                  </div>
                </div>

                <div className="mt-6 flex flex-row justify-start w-full px-12  
                  <div>
                    <b className="font-poppins">Description</b>
                    <div
                      className="mt-1.5"
                      dangerouslySetInnerHTML={{
                        __html: project.long_description,
                      }}
                    />
                  </div>
                </div>

                <div className="my-6 flex flex-row justify-start w-full px-12  
                  <div>
                    <b className="font-poppins">Tech stack</b>
                    <p className="mt-1.5 ">{project.madeWith}</p>
                  </div>
                </div>
                <div className="my-6 flex flex-row justify-start w-full px-12  
                  <div>
                    <b className="font-poppins">Created on</b>
                    <p className="mt-1.5 ">{project.date}</p>
                  </div>
                  {project.url.includes("github") && (
                    <div className="mx-6">
                      <b className="font-poppins">
                        {project.name != "Cineast"
                          ? "Earned Stars"
                          : "Downloads"}
                      </b>
                      <p className="mt-1">
                        <Image
                          src={
                            project.url.includes("github")
                              ? `https://img.shields.io/github/stars/${project.url.replace(
                                  "https://github.com/",
                                  ""
                                )}?style=social`
                              : "https://img.shields.io/static/v1?label=Downloads&message=1k&color=%3CCOLOR%3E"
                          }
                          alt="stars"
                          height={26}
                          width={100}
                          className="object-contain"
                          unoptimized
                        />
                      </p>
                    </div>
                  )}
                </div>
                <div className="mt-2 flex flex-row justify-center">
                  <a href={project.url} target="_blank" rel="noreferrer">
                    <div
                      className="pr-4 pl-3 py-2 lowercase rounded-lg 
                  flex flex-row justify-center items-center text-center cursor-pointer bg-blue-500 text-white 
                   transition-all ease-in-out shadow-md shadow-blue-400 "
                    >
                      <div>
                        <i className="fa-solid fa-globe px-2" />
                        <p className="text-[12px]">Visit</p>
                      </div>
                    </div>
                  </a>
                </div>
                <div className="mb-[200px]"></div>
              </div>
            </motion.div>
          </div>
        </motion.div>
      )}
    </div>
  );
}

export default Model;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/MusiveCard.tsx
import React from "react";
import Image from "next/image";
import Link from "next/link";
import { motion } from "framer-motion";

function MusiveCard() {
  return (
    <div className="select-none">
      <div
        className="w-[1000px] c-  
         
  bg-gradient-to-br to-[#2bb540] via-[#228046] from-[#228347]  pt-4 pb-6 px-6 
      >
        <div
          className="flex flex-row-reverse max-w-[900px] mx-auto mt-4 justify-center
         items-center px-6  
        >
          <div>
            <motion.div
              initial={{ y: 20, opacity: 0 }}
              viewport={{ once: true, amount: 1 }}
              whileInView={{
                y: 0,
                opacity: 1,
                transition: { duration: 0.3 },
              }}
              transition={{ staggerChildren: 0.5 }}
              className="flex justify-center items-center"
            >
              <div
                className="w-[380px] h-[300px] relative
               
                c- c-"
              >
                <Image
                  src="/musive-featured.png"
                  fill
                  className="object-contain object-left"
                  alt="intro"
                />
              </div>
            </motion.div>
          </div>
          <motion.div
            initial={{ y: 20, opacity: 0 }}
            viewport={{ once: true, amount: 1 }}
            whileInView={{
              y: 0,
              opacity: 1,
              transition: { duration: 0.3 },
            }}
            transition={{ staggerChildren: 0.5 }}
            className=" 
            "
          >
            <h1
              className="text-2xl tracking-wider 
            text-gray-100 my-4 
            >
              MUSIVE
            </h1>

            <div className="max-w-[400px]">
              <p
                className="  text-white opacity-90 mb-8 text-[16px]
               leading-[25px] tracking-wide 
              >
                Explore & download free stock music and use it anywhere you like
                with spotify web player experience.
              </p>
            </div>
            <div className="flex flex-row items-center mb-4 ">
              <div className="mr-4 bg-[#29a111] w-fit rounded-full p-2.5 text-center flex justify-center items-center text-white">
                <i className="fa-solid fa-window-restore text-[16px]"></i>
              </div>
              <p className="tracking-wide  opacity-80 font-medium text-gray-100 max-w-[350px] text-[15px]">
                Web App: built with Next.js, Tailwind CSS, Algolia.
              </p>
            </div>
            <div className="flex flex-row items-center">
              <div className="mr-4 bg-[#279811] w-fit rounded-full p-2.5 text-center flex justify-center items-center text-white">
                <i className="fa-brands fa-app-store-ios text-[16px]"></i>
              </div>
              <p className="tracking-wide opacity-80 font-medium text-gray-100 max-w-[350px] text-[15px]">
                Android and Ios app: built with Flutter.
              </p>
            </div>
            {/* <p className="mt-4 racking-wide opacity-80 font-medium text-white max-w-[350px] text-[16px]">
              All music on the platform is non-copyright and free to use
              anywhere you like.
            </p> */}

            {/* <h1 className="text-white mt-8 mb-4 opacity-80 tracking-wider 

            <div className="flex w-full 
              <Link href="https://musive.vercel.app/" target={"_blank"}>
                <button
                  className="border px-4 text-white mt-10 rounded-md font-semibold tracking-wider
             hover:bg-white  hover:text-black py-2
               bg-[#26623a] text-proxima text-sm"
                >
                  VISIT WEB APP
                </button>
              </Link>
            </div>
          </motion.div>
        </div>
        <div className="mt-14"></div>
      </div>
    </div>
  );
}

export default MusiveCard;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/NavBar.tsx
import Link from "next/link";

function NavBar() {
  return (
    <div
      className=" flex flex-row items-center justify-between 
            
          
        "
    >
      <Link href={`/`} scroll={true}>
        <a
          className=" cursor-pointer 
       hover:text-blue-700 mx-3  my-1 font-bold text-xl  hover:border-b-blue-700 hover:border-b 
        >
          Ansh&nbsp;Rathod
        </a>
      </Link>

      <div className="py-4 
        <ul className="flex flex-row justify-center px-14  ">
          <NavbarItem name="home" href="/" />
          <NavbarItem name="Memes" href="/memes" />
          <NavbarItem name="connect" href="#connect" />
        </ul>
      </div>
    </div>
  );
}

const NavbarItem = (props: any) => {
  return (
    <Link href={`${props.href}`} scroll={true}>
      <li
        className="lowercase cursor-pointer 
       hover:text-blue-700 mx-3  my-1 text-gray-500 hover:border-b-blue-700 hover:border-b"
      >
        {props.name}
      </li>
    </Link>
  );
};

export default NavBar;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/NavbarItem.tsx
import Link from "next/link";

const NavbarItem = (props: any) => {
  return (
    <Link href={`#${props.name.toLowerCase()}`} scroll={true}>
      <li
        className="lowercase cursor-pointer 
       hover:text-blue-700 mx-3  my-1 text-gray-500 hover:border-b-blue-700 hover:border-b"
      >
        {props.name}
      </li>
    </Link>
  );
};

export default NavbarItem;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Project.tsx
import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";

function ProjectComponent(props: any) {
  const { project, i } = props;

  return (
    <Link
      scroll={false}
      href={`/?slug=${project.name.toLowerCase()}`}
      as={`/projects/${project.name.toLowerCase()}`}
    >
      <div
        className={`select-none cursor-pointer items-center 
       tracking-tighter lowercase    hover:border-blue-600 bg-gray-100 
       p-2 rounded-lg ${
         project.type == "horizontal" ? "flex flex-row" : "flex flex-col"
       }`}
      >
        <div className="w-[100px] ">
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            className="object-contain"
            width={100}
            height={200}
          />
        </div>

        <div className="px-2 py-6 w-full">
          <div className="flex flex-row items-center justify-between pb-1">
            <h1 className="text-[18px] lowercase text-black">
              {project.name}
            </h1>
          </div>

          <p className=" text-gray-500 ">{project.description} </p>
          <div className="px-0.5 pt-2.5 flex flex-row items-center justify-between">
            <motion.p
              whileHover={{}}
              className="lowercase text-[12px] 
           text-gray-500 border-b-[1px] border-gray-500 hover:text-black hover:border-black"
            >
              Read More
            </motion.p>
            <p className="text-gray-500  lowercase text-[12px]">
              {project.date}
            </p>
          </div>
        </div>
      </div>
    </Link>
  );
}

export default ProjectComponent;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/Skills.tsx
import ListItem from "./ListItem";
function Skills() {
  return (
    <div
      id="skills"
      className="py-[50px] w-screen max-w-full  "
    >
      <div className="small-container mb-20 py-2">
        <h1 className="lowercase text-h1 ">What tech skills does he have?</h1>
        <p className="tracking-tighter lowercase   mt-4 text-[18px] text-slate-500   
          He knows these listed things but mostly uses Flutter, postgres, and
          Nextjs here and there for his apps. uses AI for writing code and
          figures out the code very quickly.
        </p>
        <br />
        <p className="tracking-tighter lowercase  text-[18px] text-slate-500   
          Sometimes he plays with the LLMS, Sometimes try to build a game with
          godot.
        </p>
      </div>
      <div className="flex flex-row 
        <div className="w-[150px] mx-4 
          <h1 className="lowercase text-h1 
        </div>

        <div
          className="text-[18px] grid grid-cols-4 
            
        >
          <div className="mr-14 mb-5">
            <h1 className=" lowercase font-bold tracking-wide mb-3  text-[18px] text-slate-900   
              Languages
            </h1>
            <ListItem name="dart" i={1} />
            <ListItem name="javascript" i={2} />
            <ListItem name="Typescript" i={3} />
            <ListItem name="python" i={4} />
            <ListItem name="html" i={5} />
            <ListItem name="css" i={6} />
          </div>
          <div className="mr-14  
            <h1 className="tracking-tighter  font-bold  mb-3 lowercase text-[18px] text-slate-900   
              Frameworks
            </h1>
            <ListItem name="flutter" i={1} />
            <ListItem name="nextjs" i={1} />
            <ListItem name="Nodejs" i={1} />
            <ListItem name="Bunjs" i={1} />
            <ListItem name="Tailwind CSS" i={1} />
            <ListItem name="react" i={1} />
            <ListItem name="python flask" i={1} />
          </div>
          <div className="mr-14 mb-5">
            <h1 className="tracking-tighter lowercase font-bold  mb-3 text-[18px] text-slate-900   
              Databases
            </h1>
            <ListItem name="PostgreSql" i={1} />
            <ListItem name="firebase" i={1} />
            <ListItem name="supabase" i={1} />
            <ListItem name="Redis" i={1} />
            <ListItem name="mongodb" i={1} />
            <ListItem name="Sqlite" i={1} />
          </div>
          <div className="mr-14  
            <h1 className="tracking-tighter  font-bold  mb-3 lowercase text-[18px] text-slate-900   
              Tools
            </h1>
            <ListItem name="docker" i={1} />
            <ListItem name="git & github" i={1} />
            <ListItem name="digital ocean" i={1} />
          </div>
        </div>
      </div>
      <div className="small-container">
        <div className="mt-10 text-[17px] max-w-[600px]   py-2  
          <img
            src="https://github-readme-stats.vercel.app/api?username=Ansh-Rathod"
            alt="GitHub Stats"
            className="w-full h-auto rounded-lg"
          />
        </div>

        <div className=" text-[17px] max-w-[600px]   py-2  
          <img
            src="https://github-readme-streak-stats.herokuapp.com/?user=Ansh-Rathod"
            alt="GitHub Streak"
            className="w-full h-auto rounded-lg"
          />
        </div>

        <h2 className=" text-[20px] mt-10">time spent in the code editor:</h2>
        <p className=" mb-4"> (From 2 jan, 2024 to today)</p>

        <div className=" text-[17px] max-w-[600px]   py-2  
          <img
            src="https://img.shields.io/endpoint?style=social&url=https%3A%2F%2Fapi.codetime.dev%2Fshield%3Fid%3D23597%26project%3D%26in%3D0"
            alt="CodeTime Shield"
            className="w-[70%] h-auto rounded-lg"
          />
        </div>
      </div>
    </div>
  );
}

export default Skills;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/calender.tsx
import {
  addDays,
  addMonths,
  eachDayOfInterval,
  endOfMonth,
  format,
  getDay,
  parseISO,
  startOfMonth,
  subDays,
  subMonths,
} from "date-fns";
import { useEffect, useState } from "react";

const CustomActivityCalendar: React.FC = () => {
  const [currentMonth, setCurrentMonth] = useState(new Date());
  const [activities, setActivities] = useState<Record<string, any>[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Calculate fetch range
  const monthStart = startOfMonth(currentMonth);
  const monthEnd = endOfMonth(currentMonth);
  const firstDayOfMonth = (getDay(monthStart) + 6) % 7; // Mon=0, ..., Sun=6
  const daysInMonth = eachDayOfInterval({ start: monthStart, end: monthEnd });
  const prevMonthDaysCount = firstDayOfMonth;
  const prevMonthStart = prevMonthDaysCount
    ? subDays(monthStart, prevMonthDaysCount)
    : monthStart;
  const totalCells = 42; // 6 weeks × 7 days
  const currentAndPrevDays = prevMonthDaysCount + daysInMonth.length;
  const nextMonthDaysCount = totalCells - currentAndPrevDays;
  const nextMonthEnd = addDays(monthEnd, nextMonthDaysCount);

  // Fetch activities for the visible range
  useEffect(() => {
    const fetchActivities = async () => {
      try {
        setLoading(true);
        const start = format(prevMonthStart, "yyyy-MM-dd");
        const end = format(nextMonthEnd, "yyyy-MM-dd");
        const response = await fetch(`/api/strava?start=${start}&end=${end}`);
        if (!response.ok) {
          throw new Error("Failed to fetch activities");
        }
        const data = await response.json();
        setActivities(data);
        setLoading(false);
      } catch (err) {
        setError("Error fetching activities");
        setLoading(false);
      }
    };

    fetchActivities();
  }, [currentMonth]); // Refetch when currentMonth changes

  // Filter activities for the current month
  const monthActivities = activities.filter((activity) => {
    const activityDate = parseISO(activity["start_date_local"]);
    return activityDate >= monthStart && activityDate <= monthEnd;
  });

  // Group activities by date (YYYY-MM-DD)
  const activitiesByDate = activities.reduce((acc, activity) => {
    const date = format(parseISO(activity["start_date_local"]), "yyyy-MM-dd");
    if (!acc[date]) acc[date] = [];
    acc[date].push(activity);
    return acc;
  }, {} as Record<string, Record<string, any>[]>);

  // Calculate monthly stats
  const totalActivities = monthActivities.length;
  const totalDistance = monthActivities
    .filter((a) => a["type"] === "Ride")
    .reduce((sum, a) => sum + a["distance"] / 1000, 0);
  const totalTimeSeconds = monthActivities.reduce(
    (sum, a) => sum + a["moving_time"],
    0
  );
  const totalHours = Math.floor(totalTimeSeconds / 3600);
  const totalMinutes = Math.floor((totalTimeSeconds % 3600) / 60);
  const rideCount = monthActivities.filter(
    (a) => a["type"] === "Ride" || a["type"] === "Workout"
  ).length;
  const workoutCount = monthActivities.filter(
    (a) => a["type"] === "WeightTraining"
  ).length;

  // Format time as "Xh Ym"
  const formatTime = (hours: number, minutes: number) => {
    if (hours === 0 && minutes === 0) return "0m";
    return `${hours > 0 ? `${hours}h ` : ""}${minutes}m`;
  };

  // Generate calendar days
  const prevMonthDays = prevMonthDaysCount
    ? eachDayOfInterval({
        start: prevMonthStart,
        end: subDays(monthStart, 1),
      })
    : [];
  const nextMonthDays = nextMonthDaysCount
    ? eachDayOfInterval({
        start: addDays(monthEnd, 1),
        end: nextMonthEnd,
      })
    : [];
  const allDays = [...prevMonthDays, ...daysInMonth, ...nextMonthDays];

  // Navigation handlers
  const prevMonth = () => setCurrentMonth(subMonths(currentMonth, 1));
  const nextMonth = () => setCurrentMonth(addMonths(currentMonth, 1));

  return (
    <div className="px-4 max-w-[600px] mx-auto mt-10">
      <div className="mb-10">
        <h1 className="lowercase text-h1 mb-4">
          his Fitness Quests
        </h1>
        <p className="text-[18px] text-slate-500   
          he tracks his fitness quests using hevy/strava app, and here are the
          some stats that keeps him consistent and moving.
        </p>
      </div>
      <div className="p-6 
        <div className="flex justify-between items-center mb-4">
          <button
            onClick={prevMonth}
            className="p-2 text-gray-600 hover:text-gray-800"
            aria-label="Previous month"
          >
            ←
          </button>
          <h1 className="text-h3">
            {format(currentMonth, "MMMM yyyy")}
          </h1>
          <button
            onClick={nextMonth}
            className="p-2 text-gray-600 hover:text-gray-800"
            aria-label="Next month"
          >
            →
          </button>
        </div>
        {loading && <div className="text-center text-gray-500">Loading...</div>}
        {error && activities.length === 0 && (
          <div className="text-center text-red-500">{error}</div>
        )}
        {!loading && (
          <div className="grid grid-cols-7 gap-1 text-center">
            {/* Weekday headers */}
            {["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"].map((day) => (
              <div key={day} className="font-semibold text-gray-600 mt-6 mb-4">
                {day}
              </div>
            ))}
            {/* Calendar days */}
            {allDays.map((day) => {
              const dateStr = format(day, "yyyy-MM-dd");
              const dayActivities = activitiesByDate[dateStr] || [];
              const hasRide = dayActivities.some(
                (a: any) => a["type"] === "Ride" || a["type"] === "Workout"
              );
              const hasWorkout = dayActivities.some(
                (a: any) => a["type"] === "WeightTraining"
              );
              const isCurrentMonth = day >= monthStart && day <= monthEnd;

              return (
                <div
                  key={dateStr}
                  className={`relative h-18 border rounded-lg p-2 ${
                    isCurrentMonth ? "" : "opacity-40"
                  } ${
                    dayActivities.length > 0
                      ? "border-white bg-[#0B82FE] text-white font-bold"
                      : "border-red-400 border bg-red-100/50"
                  } hover:bg-[#0B82FE]/30 group`}
                >
                  <span className="text-sm">{format(day, "d")}</span>
                  {/* Icons */}
                  <div
                    className={`${
                      hasWorkout ? "bg-green-200" : "bg-orange-300"
                    } bg-white rounded-lg flex justify-center space-x-2 mt-1 text-[20px]`}
                  >
                    {hasRide && <span aria-label="Ride activity">🚴</span>}
                    {hasWorkout && (
                      <span aria-label="Workout activity">🏋️</span>
                    )}
                  </div>
                  {/* Tooltip */}
                  {dayActivities.length > 0 && (
                    <div className="absolute z-10 hidden text-start group-hover:block bg-white border border-gray-300 text-black rounded shadow-lg p-2 w-64 -left-20 top-20">
                      <h3 className="font-semibold text-sm mb-1">{dateStr}</h3>
                      <ul className="text-xs space-y-1">
                        {dayActivities.map((activity: any) => (
                          <li key={activity["id"]} className="pb-2 text-start">
                            <strong>{activity["name"]}</strong> (
                            {activity["type"]})
                            {activity["type"] === "Ride" && (
                              <span>
                                <br />
                                Distance:{" "}
                                {(activity["distance"] / 1000).toFixed(2)} km
                              </span>
                            )}
                            <br />
                            Time: {Math.floor(activity["moving_time"] / 60)} min
                          </li>
                        ))}
                      </ul>
                    </div>
                  )}
                </div>
              );
            })}
          </div>
        )}
        {!loading && (
          <div className="mt-6 p-4 bg-white rounded-lg shadow">
            <h2 className="text-lg font-semibold text-gray-800 mb-4">
              {format(currentMonth, "MMMM yyyy")} Stats
            </h2>
            <div className="grid grid-cols-2 gap-4 
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  Total Activities:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {totalActivities}
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  Total Distance (Rides):
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {totalDistance.toFixed(2)} km
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  Total Time:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {formatTime(totalHours, totalMinutes)}
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  went for Cycling/running:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {rideCount}
                </span>
              </div>
              <div className="flex items-center">
                <span className="text-sm font-medium text-gray-600">
                  days Went to Gym:
                </span>
                <span className="ml-2 text-sm font-bold text-[#0B82FE]">
                  {workoutCount}
                </span>
              </div>
            </div>
          </div>
        )}
        <div className="mt-4 text-description text-gray-600 flex items-center space-x-4">
          <div>
            <span className="mr-2">🚴</span>Cycling/running
          </div>
          <div>
            <span className="mr-2">🏋️</span>Gym Workout
          </div>
        </div>
      </div>
      <br />- powered by Hevy and Strava api.
    </div>
  );
};

export default CustomActivityCalendar;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/chess.tsx
"use client";
import axios from "axios";
import * as changeCase from "change-case";
import Link from "next/link";
import { useEffect, useState } from "react";
import RatingChart from "./rechart";
function ChessStats() {
  const [userData, setUserData] = useState({
    id: "anshrathod999",
    username: "Anshrathod999",
    perfs: {
      bullet: {
        games: 5744,
        rating: 1565,
      },
      blitz: {
        games: 1413,
        rating: 1247,
      },
    },
    createdAt: 1624618465996,
    seenAt: 1734094094168,
    playTime: {
      total: 1246367,
    },
    url: "https://lichess.org/@/Anshrathod999",
    count: {
      all: 7389,
      rated: 7291,
      draw: 241,
      loss: 3565,
      win: 3583,
    },
  });

  const [recentGames, setRecentGames] = useState([]);
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
    fetchUserData();
    fetchRecentGames();
  }, []);

  // Fetch data from Lichess API
  const fetchUserData = async () => {
    try {
      const response = await axios.get(
        `https://lichess.org/api/user/Anshrathod999`
      );
      setUserData(response.data);
    } catch (err) {}
  };
  // Fetch recent games from Lichess API
  const fetchRecentGames = async () => {
    try {
      const response = await axios.get(
        `https://lichess.org/api/games/user/Anshrathod999?max=20&perfType=bullet&moves=false&clocks=false&sort=dateDesc`,
        {
          headers: {
            Accept: "application/x-ndjson",
          },
          responseType: "text",
        }
      );
      // Split by newlines and parse each line
      const lines = response.data.trim().split("\n");
      const games = lines.map((line: any) => JSON.parse(line));

      // Example: extract usernames and ratings
      const allgames = games.map((game: any) => ({
        id: game.id,
        perf: game.perf,
        speed: game.speed,
        createdAt: game.createdAt,
        winner: game.winner,
        status: changeCase.noCase(game.status),

        white: {
          name: game.players.white.user?.name || "Anonymous",
          rating: game.players.white.rating,
          ratingDiff: game.players.white.ratingDiff,
        },
        black: {
          name: game.players.black.user?.name || "Anonymous",
          rating: game.players.black.rating,
          ratingDiff: game.players.black.ratingDiff,
        },
      }));
      setRecentGames(allgames);
    } catch (err) {
      console.log(err);
    }
  };

  return (
    <div className="mx-auto max-w-[600px] mt-20">
      <div className=" px-6 ">
        <h1 className="lowercase text-h1 mb-4">HIS Chess stats ♟️♔♕♖♘</h1>
        <p className=" text-slate-500 text-[18px]   
          he started playing chess same year he started writing code in 2020.
          doesnt plays daily maybe 3-4 matches onces a week. he suck at chess
          tbh. he has wining probability of 50% in chess against same ranked
          oponent but still plays.
        </p>
      </div>
      <div className="px-6 ">
        <div className="text-[18px] text-slate-500   
          <br />

          <p className="font-bold">
            mostly plays Bullet - very fast-paced 1-minute games that require
            intense focus and quick decision making.
          </p>
          <br />
          <p>
            <span className="text-black font-bold">bullet rating 📈 </span> :{" "}
            <span className="font-bold text-green-500">
              {userData.perfs.bullet.rating} (in {userData.perfs.bullet.games}{" "}
              games)
            </span>
          </p>
          {/*<p>
            <span className="text-black font-bold">Blitz rating 📈</span>:{" "}
            {userData.perfs.blitz.rating}
            (in {userData.perfs.blitz.games} games)
          </p>
          <br />
          
          */}

          <p>
            <span className="text-black font-bold">last game played on</span>:{" "}
            {isClient ? (
              <span suppressHydrationWarning>
                {formatTimestamp(userData.seenAt)} ({timeAgo(userData.seenAt)})
              </span>
            ) : (
              "Loading..."
            )}
          </p>
          <p className="mt-4">
            <span className="text-black font-bold">total play time</span>:{" "}
            {(userData.playTime.total / 3600).toFixed(2)} hours
          </p>
        </div>

        <RatingChart games={recentGames} username={userData.username} />
        <p className="mt-4">
          <span className="text-black font-bold">total games played</span>:{" "}
          {userData.count.all}
        </p>
        <p className="mt-4">
          <span className="text-black font-bold">wins</span>:{" "}
          {userData.count.win} (
          {((userData.count.win / userData.count.all) * 100).toFixed(2)}%)
        </p>
        <p>
          <span className="text-black font-bold">losses</span>:{" "}
          {userData.count.loss} (
          {((userData.count.loss / userData.count.all) * 100).toFixed(2)}
          %)
        </p>
        <p>
          <span className="text-black font-bold">draws</span>:{" "}
          {userData.count.draw} (
          {((userData.count.draw / userData.count.all) * 100).toFixed(2)}
          %)
        </p>

        <Link href={userData.url} target="_blank" rel="noreferrer">
          <p className="text-blue-500 my-4 cursor-pointer hover:underline">
            {userData.username} - on lichess
          </p>
        </Link>
      </div>
      <div className="mt-10 text-[17px] max-w-[600px]  px-6  py-2  
        <p>message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            I measure my focus by playing chess. The number of blunders I make
            shows exactly how focused I am that day.
          </p>
        </div>
      </div>
    </div>
  );
}

export default ChessStats;
export function timeAgo(timestamp: number): string {
  const now = new Date();
  const date = new Date(timestamp);
  const secondsAgo = Math.floor((now.getTime() - date.getTime()) / 1000);

  if (secondsAgo < 60) {
    return `${secondsAgo} second(s) ago`;
  } else if (secondsAgo < 3600) {
    const minutes = Math.floor(secondsAgo / 60);
    return `${minutes} minute(s) ago`;
  } else if (secondsAgo < 86400) {
    const hours = Math.floor(secondsAgo / 3600);
    return `${hours} hour(s) ago`;
  } else if (secondsAgo < 2592000) {
    const days = Math.floor(secondsAgo / 86400);
    return `${days} day(s) ago`;
  } else if (secondsAgo < 31536000) {
    const months = Math.floor(secondsAgo / 2592000);
    return `${months} month(s) ago`;
  } else {
    const years = Math.floor(secondsAgo / 31536000);
    return `${years} year(s) ago`;
  }
}

export function formatTimestamp(timestamp: number): string {
  const date = new Date(timestamp);

  // Format the date as "Sun Dec 15 6:59 PM"
  const options: Intl.DateTimeFormatOptions = {
    weekday: "short",
    month: "short",
    day: "numeric",
    hour: "numeric",
    minute: "numeric",
    hour12: true,
  };

  return new Intl.DateTimeFormat("en-US", options).format(date);
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/horizontal-scroll.tsx
// import { IconArrowNarrowLeft, IconArrowNarrowRight } from "@tabler/icons-react";
import React, { createContext, ReactNode, useEffect, useState } from "react";
import { cn } from "./utils";

export const CarouselContext = createContext<{
  onCardClose: (index: number) => void;
  currentIndex: number;
}>({
  onCardClose: () => {},
  currentIndex: 0,
});

const HorizontalScroll = ({
  children,
  initialScroll = 0,
}: {
  children: ReactNode;
  initialScroll?: number;
}) => {
  const carouselRef = React.useRef<HTMLDivElement>(null);
  const [canScrollLeft, setCanScrollLeft] = React.useState(false);
  const [canScrollRight, setCanScrollRight] = React.useState(true);
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    if (carouselRef.current) {
      carouselRef.current.scrollLeft = initialScroll;
      checkScrollability();
    }
  }, [initialScroll]);

  const checkScrollability = () => {
    if (carouselRef.current) {
      const { scrollLeft, scrollWidth, clientWidth } = carouselRef.current;
      setCanScrollLeft(scrollLeft > 0);
      setCanScrollRight(scrollLeft < scrollWidth - clientWidth);
    }
  };

  const scrollLeft = () => {
    if (carouselRef.current) {
      carouselRef.current.scrollBy({ left: -300, behavior: "smooth" });
    }
  };

  const scrollRight = () => {
    if (carouselRef.current) {
      carouselRef.current.scrollBy({ left: 300, behavior: "smooth" });
    }
  };

  const handleCardClose = (index: number) => {
    if (carouselRef.current) {
      const cardWidth = isMobile() ? 230 : 384; // (md:w-96)
      const gap = isMobile() ? 4 : 8;
      const scrollPosition = (cardWidth + gap) * (index + 1);
      carouselRef.current.scrollTo({
        left: scrollPosition,
        behavior: "smooth",
      });
      setCurrentIndex(index);
    }
  };

  const isMobile = () => {
    return window && window.innerWidth < 768;
  };

  return (
    <CarouselContext.Provider
      value={{ onCardClose: handleCardClose, currentIndex }}
    >
      <div className="relative w-full">
        {/* <div className="flex justify-end gap-2  max-w-5xl mx-auto my-10 px-4">
          <button
            className="relative z-40 h-10 w-10 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50"
            onClick={scrollLeft}
            disabled={!canScrollLeft}
          >
            <IconArrowNarrowLeft className="h-6 w-6 text-gray-500" />
          </button>
          <button
            className="relative z-40 h-10 w-10 rounded-full bg-gray-100 flex items-center justify-center disabled:opacity-50"
            onClick={scrollRight}
            disabled={!canScrollRight}
          >
            <IconArrowNarrowRight className="h-6 w-6 text-gray-500" />
          </button>
        </div> */}

        <div
          className="flex w-full overflow-x-scroll overscroll-x-auto   scroll-smooth [scrollbar-width:none]"
          ref={carouselRef}
          onScroll={checkScrollability}
        >
          {/* <div
            className={cn(
              "absolute right-0  z-[1000] h-auto  w-[5%] overflow-hidden bg-gradient-to-l"
            )}
          ></div> */}

          <div
            className={cn(
              "flex flex-row justify-start ",
              " mx-auto" // remove max-w-4xl if you want the carousel to span the full width of its container
            )}
          >
            <div
              className="w-[calc((100vw-64rem)/2)]"
              itemID="left-spacer"
              aria-hidden="true"
            ></div>
            {children}
            <div
              className="w-[calc((100vw-64rem)/2)]"
              itemID="right-spacer"
              aria-hidden="true"
            ></div>
          </div>
        </div>
      </div>
    </CarouselContext.Provider>
  );
};

export default HorizontalScroll;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/image-gallery.tsx
import { Masonry } from "react-plock";

const MyGallery = () => {
  let numbers: string[] = [
    "/pins/wall41.jpg",
    "/pins/wall21.jpg",
    "/pins/wall11.jpg",
    "/pins/wall40.jpg",
    "/pins/wall24.jpg",
    "/pins/wall2.jpg",
    "/pins/wall12.jpg",
    "/pins/wall52.jpg",
    "/pins/wall10.jpg",
    "/pins/wall9.jpg",
    "/pins/wall16.jpg",
    "/pins/wall25.jpg",
    "/pins/wall42.jpg",
    "/pins/wall57.jpg",
    "/pins/wall54.jpg",
    "/pins/wall6.jpg",
    "/pins/wall34.jpg",
    "/pins/wall43.jpg",
    "/pins/wall38.jpg",
    "/pins/wall45.jpg",
    "/pins/wall1.jpg",
    "/pins/wall32.jpg",
    "/pins/wall37.jpg",
    "/pins/wall56.jpg",
    "/pins/wall4.jpg",
    "/pins/wall33.jpg",
    "/pins/wall50.jpg",
    "/pins/wall49.jpg",
    "/pins/wall17.jpg",
    "/pins/wall20.jpg",
    "/pins/wall30.jpg",
    "/pins/wall23.jpg",
    "/pins/wall48.jpg",
    "/pins/wall14.jpg",
    "/pins/wall28.jpg",
    "/pins/wall44.jpg",
    "/pins/wall8.jpg",
    "/pins/wall29.jpg",
    "/pins/wall7.jpg",
    "/pins/wall35.jpg",
    "/pins/wall36.jpg",
    "/pins/wall46.jpg",
    "/pins/wall19.jpg",
    "/pins/wall53.jpg",
    "/pins/wall3.jpg",
    "/pins/wall13.jpg",
    "/pins/wall22.jpg",
    "/pins/wall31.jpg",
    "/pins/wall69.jpg",
    "/pins/wall15.jpg",
    "/pins/wall51.jpg",
    "/pins/wall5.jpg",
  ];

  return (
    <div>
      <div className=" flex flex-col justify-center max-w-[600px] mx-auto  
        <div className=" px-6 my-20">
          <h1 className="lowercase text-h1 ">
            Random Pins
          </h1>
          <p className="text-gray-500 mt-2">
            The random images he saved last year in boredom also some while
            building this website. Most images are from the movies, tvshows and
            sport. this nerd watches sport: MMA lol from begining of 2024.
          </p>
        </div>
      </div>
      <div className="mt-10"></div>
      <div className="px-2 max-w-[1000px] mx-auto">
        <Masonry
          items={numbers}
          config={{
            columns: [2, 3, 3],
            gap: [6, 6, 6],
            media: [640, 768, 1024],
          }}
          render={(item, idx) => (
            // eslint-disable-next-line @next/next/no-img-element
            <img
              key={idx}
              src={item}
              style={{ width: "100%", height: "auto" }}
              alt=""
              className="rounded-lg"
            />
          )}
        />
      </div>
    </div>
  );
};

export default MyGallery;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/intro.tsx
import { motion } from "framer-motion";
import Icon from "../components/Icon";
import NavbarItem from "../components/NavbarItem";

const textAnimate = {
  offscreen: { y: 50, opacity: 0 },
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring", bounce: 0.4, duration: 1 },
  },
};

const Intro = () => (
  <div>
    <div id="home" className="box-border  bg-no-repeat ">
      <div className=" mx-auto  flex">
        <div
          className=" flex flex-col 
            
          
          px-6 
        "
        >
          <div>
            <motion.div
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ staggerChildren: 0.5 }}
              className="  mt-32"
            >
              <motion.div
                // variants={textAnimate}
                className="text-[18px]  
              >
                <p className="mt-1">
                  Hello 👋, This page is about someone named
                </p>
              </motion.div>
              <h1 className="my-2 font-bold text-5xl leading-snug     
                ANSH RATHOD
              </h1>
              <p className="text-[18px] text-slate-500   
                Who is a full-stack developer, Builds apps for mobile, desktop
                and web platforms. He stays quite active on X/Twitter shares
                journey of building apps and other random things, plays chess ♟️
                somedays, does cycling 🚴, gym, watches movies, tvshows.
              </p>
            </motion.div>
            <motion.div
              initial={{ y: 10, opacity: 0 }}
              whileInView={{ y: 0, opacity: 1, transition: { delay: 0.4 } }}
              viewport={{ once: false, amount: 0.6 }}
              className="  py-12 flex flex-row  text-center "
            >
              <Icon
                i={1}
                url="https://github.in/Ansh-Rathod"
                name="Github"
                classes="fa-brands fa-github"
              />

              <Icon
                i={2}
                url="https://twitter.com/anshrathodfr"
                classes="fa-brands fa-twitter"
                name="Twitter"
              />

              <Icon
                i={5}
                url="https://discord.com/users/768376622243119114"
                name="discord"
                classes="fa-brands fa-discord"
              />
              <Icon
                i={6}
                url="mailto:anshrathod29@gmail.com"
                classes="fa-solid fa-envelope"
                name="Email"
              />
              <Icon
                i={7}
                url="https://www.instagram.com/anshrathodfr"
                name="Instagram"
                classes="fa-brands fa-instagram"
              />
            </motion.div>
          </div>
        </div>
      </div>
    </div>
  </div>
);

export default Intro;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes/LandingPage.tsx
import { motion } from "framer-motion";
import Image from "next/image";
import Link from "next/link";
import Icon from "../Icon";

const textAnimate = {
  offscreen: { y: 50, opacity: 0 },
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring" as const, bounce: 0.4, duration: 1 },
  },
};

const Intro = () => (
  <div>
    <div
      id="home"
      className="box-border  bg-no-repeat 
      bg-cover  bg-center border-b "
    >
      <div className=" backdrop-blur-3xl bg-white/70  ">
        <div className=" m-auto  flex">
          <div
            className="w-[55%] flex flex-col justify-between h-screen max-h-[808px]
            
          
        "
          >
            <div className="py-4 ">
              <ul className="flex flex-row items-end  px-14  ">
                <Link href={`/`} scroll={true}>
                  <li
                    className=" cursor-pointer 
       hover:text-blue-700 mx-3  my-1 font-bold text-xl  hover:border-b-blue-700 hover:border-b"
                  >
                    memeloper fr who?
                  </li>
                </Link>
              </ul>
            </div>
            <motion.div
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ staggerChildren: 0.5 }}
              className="px-16  
            >
              <motion.p
                variants={textAnimate}
                className="text-gray-500 text-xl leading-10 
              >
                Hold on,
              </motion.p>
              <h1 className=" font-bold text-5xl  leading-snug     
                MEMELOPER WhAT??
              </h1>

              <p className="text-[22px] max-w-[600px] text-slate-800   
                Don&rsquo;t know? You should find out. Check the Hilarious
                Journey of a Programmer through Memes.
              </p>
            </motion.div>
            <motion.div
              initial={{ y: 10, opacity: 0 }}
              whileInView={{ y: 0, opacity: 1, transition: { delay: 0.4 } }}
              viewport={{ once: false, amount: 0.6 }}
              className="px-14  py-12 flex flex-row 
            >
              <Icon
                i={1}
                url="https://github.in/Ansh-Rathod"
                name="Github"
                classes="fa-brands fa-github"
              />

              <Icon
                i={2}
                url="https://twitter.com/anshrathodfr"
                classes="fa-brands fa-twitter"
                name="Twitter"
              />
              <Icon
                i={3}
                url="https://www.linkedin.com/in/ansh-rathod-478a81210/"
                classes="fa-brands fa-linkedin"
                name="Linkedin"
              />
              <Icon
                i={4}
                url="https://discordapp.com/users/768376622243119114"
                classes="fa-brands fa-discord"
              />
              <Icon
                i={5}
                url="mailto:anshrathod29@gmail.com"
                classes="fa-solid fa-envelope"
                name="Email"
              />
              <Icon
                i={6}
                url="https://www.instagram.com/anshrathodfr"
                name="Instagram"
                classes="fa-brands fa-instagram"
              />
            </motion.div>
          </div>
          <div className="w-[60%] h-screen max-h-[808px]  
            <div className=" w-full h-full relative">
              <Image
                src="/memes-intro.png"
                fill
                className="object-contain object-left"
                alt="intro"
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
);

export default Intro;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes/meme.tsx
import { motion } from "framer-motion";
import Image from "next/image";
const textUpAnimate = {
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring", bounce: 0.4, duration: 0.6 },
  },
};
function Meme({ i, meme, onTag }: any) {
  return (
    <motion.div
      // variants={textUpAnimate}
      // initial={{ y: 50 * (i * 0.7), opacity: 0 }}
      // whileInView={{ y: 0, transition: { duration: 0.3, delay: i * 0.4 } }}
      // viewport={{ once: true, amount: 0.7 }}
      className={` items-center
       tracking-tighter lowercase rounded-2xl flex flex-col border-[1px] border-gray-200 shadow
       `}
    >
      <div className="bg-white w-full  rounded-tl-2xl rounded-tr-2xl py-6 items-center flex justify-center">
        <div className=" select-none  w-[400px] relative h-[400px] flex justify-end 
          {meme.type !== "image" ? (
            <video autoPlay muted controlsList="play" controls loop>
              <source src={meme.path} type="video/mp4" />
            </video>
          ) : (
            <Image
              src={meme.path}
              alt="image"
              fill
              className="object-contain unselectable"
            />
          )}
        </div>
      </div>

      <div className="bg-slate-50 bg-opacity-30   rounded-bl-2xl rounded-br-2xl w-full   px-4 pb-4 pt-2 flex flex-col items-start justify-start">
        <h1 className="tracking-tighter lowercase mt-2 text-body font-semibold">
          {meme.title}
        </h1>
        <div className="flex flex-wrap mt-3">
          {meme.tags.map((tag: string, i: number) => (
            <div
              key={tag}
              onClick={() => onTag(tag)}
              className="select-none cursor-pointer hover:shadow text-gray-500 mr-3 mb-2 px-2 py-1 text-sm bg-white border border-gray-300 rounded-md"
            >
              {tag}
            </div>
          ))}
        </div>
        <div className="flex  flex-row items-center justify-between w-full mt-3">
          <h1 className="text-gray-400 text-description text-[12px]">
            {meme.created_on}
          </h1>
          <a href={meme.link} target="_blank" rel="noreferrer">
            <div className="bg-blue-500 lowercase text-xs cursor-pointer first-line:hover:shadow-lg py-1.5  px-3 text-white rounded-xl">
              View on
              <i className="pl-2 fa-brands fa-twitter" />
            </div>
          </a>
        </div>
      </div>
    </motion.div>
  );
}

export default Meme;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes/memes.tsx
import { memes } from "data/memes";
import { motion } from "framer-motion";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Meme from "./meme";

const textUpAnimate = {
  offscreen: { y: 20, opacity: 0 },
  onscreen: {
    y: 0,
    opacity: 1,
    transition: { type: "spring" as const, bounce: 0.4, duration: 1 },
  },
};
function MemesComponent() {
  const [search, setSearch] = useState<string>("");
  const [selectedTag, setselectedTag] = useState<string>("popular");
  const [searchedTags, setSearchedTags] = useState<string[]>([]);
  const [selectedMemes, setSelectedMemes] = useState<any[]>(memes);

  const tags = ["popular", "latest", ...memes.map((meme) => meme.tags).flat()];

  // function search in array
  function searchInArray(keyword: any) {
    setSearch(keyword);
    let filtered = tags.filter((item: any) =>
      item.toLowerCase().includes(keyword)
    );
    filtered = filtered.filter((item: string, index: number) => {
      return filtered.indexOf(item) === index;
    }, []);

    setSearchedTags(filtered);
  }
  useEffect(() => {
    if (search == "") {
      setSearchedTags([]);
    }
  }, [search]);

  useEffect(() => {
    if (selectedTag == "latest") {
      const sel = memes.sort((a, b) => {
        return (
          new Date(b.created_on).getTime() - new Date(a.created_on).getTime()
        );
      });
      setSelectedMemes(sel);
    } else if (selectedTag == "popular") {
      const sel = memes.sort((a, b) => {
        return b.likes - a.likes;
      });
      setSelectedMemes(sel);
    } else {
      if (selectedTag == "latest") {
        setSelectedMemes(memes);
      } else {
        const sel = memes
          .filter((meme) => meme.tags.includes(selectedTag))
          .sort((a, b) => {
            return (
              new Date(b.created_on).getTime() -
              new Date(a.created_on).getTime()
            );
          });
        setSelectedMemes(sel);
      }
    }
  }, [selectedTag]);
  const router = useRouter();
  return (
    <div className="bg-no-repeat border-b bg-fill bg-[url('/bgs1s.png')] bg-cover bg-fixed bg-center">
      <div className="backdrop-blur-3xll bg-white/70 pb-24 ">
        <div className=" ">
          <div className="pt-20 px-4 pb-10">
            <motion.h1
              variants={textUpAnimate}
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ delay: 3 }}
              className="pb-1 text-3xl lowercase text-black text-center"
            >
              Memes i made
            </motion.h1>

            <motion.p
              variants={textUpAnimate}
              initial={"offscreen"}
              whileInView={"onscreen"}
              viewport={{ once: false, amount: 0.5 }}
              transition={{ delay: 3 }}
              className="text-slate-600 text-[18px] text-center"
            >
              Enjoy the {memes.length} memes I made over the last few months.
            </motion.p>
          </div>
          <div id="memes"></div>
          <div className="max-w-[1100px] m-auto p-2 bg-white   top-0 z-50  ">
            <div className=" bg-white w-full flex flex-col items-center  rounded-lg border border-gray-400 py-2 ">
              <div className="flex flex-row px-4 items-center w-full">
                <i className="fa-solid fa-magnifying-glass"></i>
                <input
                  value={search}
                  type="search"
                  onChange={(e) => searchInArray(e.target.value)}
                  className="border-none outline-none px-4 w-full"
                  placeholder="Search by tags.."
                />
              </div>
              <div className="w-full">
                {searchedTags.length > 0 ? (
                  <div className="flex  px-4 flex-wrap mt-3 border-t pt-3">
                    {searchedTags.map((tag: string, i: number) => (
                      <div
                        onClick={() => {
                          setSearch("");
                          setselectedTag(tag);
                        }}
                        key={tag + i}
                        className="cursor-pointer select-none text-gray-500 mr-3 mb-2 px-2 py-1 text-sm bg-white border border-gray-300 rounded-md"
                      >
                        {tag}
                      </div>
                    ))}
                  </div>
                ) : (
                  <div></div>
                )}
              </div>
            </div>
          </div>
          <div className="max-w-[1000px] m-auto p-2 pt-6  ">
            <div
              onClick={() => setselectedTag("latest")}
              className="flex flex-row items-center justify-center cursor-pointer lowercase text-sm select-none w-fit text-gray-500 mr-3 mb-6 px-2 py-1  bg-white border border-gray-300 rounded-md"
            >
              {search != "latest" && (
                <i className="fa-solid fa-xmark px-2 "></i>
              )}
              {selectedTag}
            </div>

            <p className="px-2 text-xs lowercase pb-10 text-slate-500">
              <strong>Note</strong>: here all memes are created by me and
              opinions are totally mine. If you find any meme offensive, please
              tap the <span className="underline">view on twitter</span> button
              and share your thoughts.
            </p>
            <div className="grid grid-cols-2 gap-4 
              {selectedMemes.map((meme: any, i: number) => (
                <Meme
                  key={meme.title}
                  meme={meme}
                  i={i}
                  onTag={(tag: string) => {
                    setSearch("");
                    router.push("#memes");
                    setselectedTag(tag);
                  }}
                />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default MemesComponent;
function getValuesWithDuplicates(arr: string[]) {
  const countMap = new Map();
  const duplicateValues: string[] = [];

  // Count occurrences of each element
  arr.forEach((element) => {
    countMap.set(element, (countMap.get(element) || 0) + 1);
  });

  // Check for duplicate values and add them to the result array
  countMap.forEach((count, element) => {
    if (count > 1) {
      duplicateValues.push(element);
    }
  });

  return duplicateValues;
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/memes.tsx
import { memes } from "data/memes";
import Image from "next/image";
import HorizontalScroll from "./horizontal-scroll";
function MemesIntro() {
  return (
    <div>
      <div className="py-20 px-6 max-w-[600px] mx-auto">
        <h1 className="pb-1 text-3xl lowercase text-black ">
          TECH RELATED MEMEs HE MADE
        </h1>

        <p className="text-slate-500 text-[18px] mt-4">
          He created {memes.length} memes back in 2023 and shared them on
          twitter, he thinks memes are the best way to explain things on
          internet about the situation.
        </p>
      </div>
      <HorizontalScroll>
        {memes
          .sort((a, b) => b.likes - a.likes)
          .map((meme: any) => (
            <div
              key={meme.id}
              className=" cursor-pointer select-none 
            >
              <div
                className={` items-center
       tracking-tighter lowercase rounded-2xl flex flex-col border-[1px] border-gray-200 shadow
       `}
              >
                <div className="bg-white w-full  rounded-tl-2xl rounded-tr-2xl px-2 items-center flex justify-center">
                  <div className=" select-none  w-[400px] relative h-[400px] flex justify-end 
                    {meme.type !== "image" ? (
                      <video autoPlay muted controlsList="play" controls loop>
                        <source src={meme.path} type="video/mp4" />
                      </video>
                    ) : (
                      <Image
                        src={meme.path}
                        alt="image"
                        fill
                        className="object-contain unselectable"
                      />
                    )}
                  </div>
                </div>

                <div className="bg-slate-50 bg-opacity-30   rounded-bl-2xl rounded-br-2xl w-full   px-4 pb-4 pt-2 flex flex-col items-start justify-start">
                  <h1 className="tracking-tighter lowercase mt-2 text-body font-semibold">
                    {meme.title}
                  </h1>

                  <div className="flex  flex-row items-center justify-between w-full mt-3">
                    <h1 className="text-gray-400 text-description text-[12px]">
                      {meme.created_on}
                    </h1>
                    <a href={meme.link} target="_blank" rel="noreferrer">
                      <div className="bg-blue-500 lowercase text-xs cursor-pointer first-line:hover:shadow-lg py-1.5  px-3 text-white rounded-xl">
                        View on
                        <i className="pl-2 fa-brands fa-twitter" />
                      </div>
                    </a>
                  </div>
                </div>
              </div>
            </div>
          ))}
      </HorizontalScroll>
      <div className="mb-10 mt-2 text-[17px] max-w-[600px]  px-6  py-2  
        <p>Message from him:</p>
        <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
          <p>
            back in 2023 when i had humour,[now these memes are outdated maybe]
            <br />
            <br />I believe Sometimes, a meme teaches more than a lecture. When
            it’s relatable, it hits differen. one meme can say what a
            thousand-word essay tries to
          </p>
        </div>
      </div>
      <div className="pb-20"></div>
    </div>
  );
}

export default MemesIntro;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/rechart.tsx
"use client";

import { ArrowBigDownDash, ArrowBigUp } from "lucide-react";
import {
  Line,
  LineChart,
  ResponsiveContainer,
  Tooltip,
  XAxis,
  YAxis,
} from "recharts";

interface Game {
  id: string;
  createdAt: number;
  perf: string;
  winner: string;
  status: string;
  white: {
    name: string;
    rating: number;
    ratingDiff: number;
  };
  black: {
    name: string;
    rating: number;
    ratingDiff: number;
  };
}

interface Props {
  games: Game[];
  username: string;
}

export default function RatingChart({ games, username }: Props) {
  const reversedGames = [...games].reverse();

  const data = reversedGames.map((game, index) => {
    const isWhite = game.white.name.toLowerCase() === username.toLowerCase();
    const yourRating = isWhite ? game.white.rating : game.black.rating;
    const opponentRating = isWhite ? game.black.rating : game.white.rating;

    const result =
      (game.winner === "white" && isWhite) ||
      (game.winner === "black" && !isWhite)
        ? "Win"
        : game.winner === null
        ? "Draw"
        : "Loss";

    const method = game.status ?? "unknown";
    return {
      game: `Game ${index + 1}`,
      yourRating: yourRating,
      opponentRating,
      method,
      result,
      yourRatingDiff: isWhite ? game.white.ratingDiff : game.black.ratingDiff,
      opponentRatingDiff: isWhite
        ? game.black.ratingDiff
        : game.white.ratingDiff,
    };
  });
  const CustomTooltip = ({ active, payload, label }: any) => {
    if (active && payload?.length) {
      const { yourRating, method, result, yourRatingDiff } = payload[0].payload;

      return (
        <div className="bg-white border p-2 rounded shadow text-sm">
          <p className="font-semibold">Game {label + 1}</p>
          <p>
            rating: {yourRating}
            <span
              className={
                yourRatingDiff >= 0 ? "text-green-600" : "text-red-500"
              }
            >
              {" "}
              ({yourRatingDiff >= 0 ? "+" : ""}
              {yourRatingDiff})
            </span>
            {yourRatingDiff >= 0 ? (
              <ArrowBigUp className="inline-block h-4 w-4 ml-1 text-green-600" />
            ) : (
              <ArrowBigDownDash className="inline-block h-4 w-4 ml-1 text-red-500" />
            )}
          </p>
          <p
            className={yourRatingDiff >= 0 ? "text-green-600" : "text-red-500"}
          >
            new rating: {yourRating + yourRatingDiff}
          </p>

          <p>method: {method}</p>

          <p
            className={`font-medium ${
              result === "Win"
                ? "text-green-600"
                : result === "Loss"
                ? "text-red-500"
                : "text-yellow-500"
            }`}
          >
            result: {result}
          </p>
        </div>
      );
    }
    return null;
  };

  return (
    <div className="w-full bg-gray-100 pr-8 pb-8 rounded-xl">
      <h2 className="text-lg font-semibold my-4 pt-4 pb-8 text-black mx-4">
        last 20 games rating chart:
      </h2>
      <ResponsiveContainer width="100%" height={300}>
        <LineChart
          data={data}
          margin={{ top: 10, right: 20, bottom: 10, left: 0 }}
        >
          {/* <CartesianGrid strokeDasharray="3 3" /> */}
          <XAxis dataKey="                " tick={{ fontSize: 10 }} />
          <YAxis
            domain={["auto", "auto"]}
            fontSize={10}
            tick={{ fontSize: 10 }}
          />
          <Tooltip content={<CustomTooltip />} />
          <Line
            type="monotone"
            dataKey="yourRating"
            name="Your Rating"
            stroke="#0B82FE"
            strokeWidth={3}
            dot={({ cx, cy, payload }: any) => {
              let fill = "#4f46e5";
              if (payload.result === "Win") fill = "#16a34a"; // green
              else if (payload.result === "Loss") fill = "#dc2626"; // red
              else if (payload.result === "Draw") fill = "#facc15"; // yellow

              return (
                <circle
                  cx={cx}
                  cy={cy}
                  r={4}
                  fill={fill}
                  stroke="#fff"
                  strokeWidth={2}
                />
              );
            }}
          />
          {/* <Line
            type="monotone"
            dataKey="opponentRating"
            name="Opponent Rating"
            stroke="#9ca3af"
            strokeDasharray="5 5"
          /> */}
        </LineChart>
      </ResponsiveContainer>
    </div>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/slider.tsx
import { useState } from "react";

import Image from "next/image";

interface SliderProps {
  images: Array<String>;
}

const Slider = (props: SliderProps) => {
  const [i, setIndex] = useState(0);
  const { images } = props;
  return (
    <div className=" flex flex-row items-center ">
      <div
        className={`p-3 cursor-pointer hover:bg-gray-100 rounded-full 
        ${i == 0 && `invisible`}`}
        onClick={() => setIndex(i - 1)}
      >
        <i className="fa-sharp fa-solid fa-chevron-left"></i>
      </div>
      <div className="h-[500px] w-[500px]  
        <Image
          src={`/imgs/` + images[i]}
          alt="image"
          className="object-contain"
          fill
          height={0}
          width={0}
          sizes="100vw"
          placeholder="blur"
          blurDataURL="/Cineast-1.PNG"
        />
      </div>

      <div
        className={`p-3 cursor-pointer hover:bg-gray-100 rounded-full 
        ${i + 1 == images.length && `invisible`}`}
        onClick={() => setIndex(i + 1)}
      >
        <i className="fa-sharp fa-solid fa-chevron-right"></i>
      </div>
    </div>
  );
};

export default Slider;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/useful-products.tsx
import { newProjects, usefulProjects } from "data/projects";

import Image from "next/image";
import Link from "next/link";
function UsefulProducts() {
  return (
    <div id="projects" className="bg-no-repeat  bg-cover">
      <div className="backdrop-blur-[100px] bg-white/60 pb-24 ">
        <div className=" ">
          <div className="max-w-[1000px] m-auto   px-6 ">
            <div className="py-20  max-w-[600px] mx-auto">
              <h1 className="pb-1 text-3xl lowercase text-black ">
                useful Products he built
              </h1>

              <p className=" mt-4 text-[18px] text-slate-500   
                The actual useful products he built, which{" "}
                <span className="bg-slate-100"> generates revenue</span> for him
                are listed below.
              </p>
              <br />
              <p className="text-[16px] text-slate-500">
                click on the card to view some images and information about the
                app.
              </p>
            </div>
            <div className="grid grid-cols-2 gap-4 
              {usefulProjects.map((project: any, i: number) => (
                <ProjectComponent key={project.name} project={project} i={i} />
              ))}
            </div>
            <div className="mt-10 text-[17px] max-w-[600px]   py-2  
              <p>Message from him:</p>
              <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
                <p>
                  I design all my apps with one rule: keep it super simple and
                  deliver the best possible user experience; something anyone
                  can use.
                </p>
                <br />
                <p>New product dropping soon.</p>
              </div>
            </div>
          </div>
          <div className="py-20 max-w-[600px] mx-auto px-6">
            <h1 className="pb-1 text-3xl lowercase text-black ">
              few Good ones after 2022
            </h1>

            <p className="mt-4 text-[18px] text-slate-500   
              After 2022 as he got more exprience, he started to get picky with
              what apps to build. he won 1st runner up prices in supabase launch
              week hackathon with Tweet schedular desktop app(schedurio) in may
              2023.
            </p>
            <p className="mt-4 text-[18px] text-slate-500   
              after in july 2023 he started building graphic design
              tool(craftor) and was spending months on building it then he
              burned out while building it.
            </p>
          </div>
          <div className="max-w-[1000px] mx-auto px-6">
            <div className="grid grid-cols-3 gap-4 
              {newProjects.map((project: any, i: number) => (
                <ProjectComponent2 key={project.name} project={project} i={i} />
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default UsefulProducts;

function ProjectComponent2(props: any) {
  const { project, i } = props;

  return (
    <Link
      scroll={false}
      href={`/?slug=${project.name.toLowerCase()}`}
      as={`/projects/${project.name.toLowerCase()}`}
    >
      <div
        className={`select-none cursor-pointer items-center 
       tracking-tighter lowercase  flex flex-col  hover:border-blue-600 bg-gray-100 
       p-2 rounded-lg `}
      >
        <div className="w-full h-[200px] 
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            fill
            className="object-contain unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div>
        {/* <div className="w-[100px] h-[100px]  relative rounded-lg mx-2">
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            className="object-contain"
            fill
            className="unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div> */}

        <div className="px-2 py-6 w-full">
          <div className="flex flex-row items-center justify-between pb-1">
            <h1 className="text-[18px] lowercase text-black">
              {project.name}
            </h1>
          </div>

          <p className=" text-gray-500 ">{project.description} </p>
          <div className="px-0.5 pt-2.5 flex flex-row items-center justify-between">
            <p
              className="lowercase text-[12px] 
           text-gray-500 border-b-[1px] border-gray-500 hover:text-black hover:border-black"
            >
              Read More
            </p>
            <p className="text-gray-500  lowercase text-[12px]">
              {project.date}
            </p>
          </div>
        </div>
      </div>
    </Link>
  );
}

function ProjectComponent(props: any) {
  const { project, i } = props;

  return (
    <Link
      scroll={false}
      href={`/?slug=${project.name.toLowerCase()}`}
      as={`/projects/${project.name.toLowerCase()}`}
    >
      <div
        className={`select-none cursor-pointer items-center 
       tracking-tighter lowercase  flex flex-row  hover:border-blue-600 bg-gray-100 
        rounded-lg px-2`}
      >
        {/* <div className="w-full h-[200px] 
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            className="object-contain"
            fill
            className="unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div> */}
        <div className="w-[100px] h-[100px]  relative rounded-lg mx-2">
          <Image
            src={`/imgs/` + project.image}
            alt="image"
            fill
            className="object-contain unselectable rounded-lg"
            width={0}
            sizes="100vw"
            height={0}
          />
        </div>

        <div className="px-2 py-6 w-full">
          <div className="flex flex-row items-center justify-between pb-1">
            <h1 className="text-[18px] lowercase text-black">
              {project.name}
            </h1>
          </div>

          <p className=" text-gray-500 ">{project.description} </p>
          <div className="px-0.5 pt-2.5 flex flex-row items-center justify-between">
            <p
              className="lowercase text-[12px] 
           text-gray-500 border-b-[1px] border-gray-500 hover:text-black hover:border-black"
            >
              Read More
            </p>
            <p className="text-gray-500  lowercase text-[12px]">
              {project.date}
            </p>
          </div>
        </div>
      </div>
    </Link>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/utils.ts
import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/views.tsx
function Views({ posts }: { posts: any }) {
  return (
    <div className="max-w-[1000px] m-auto grid grid-cols-2 gap-4">
      {posts
        .sort()
        .slice(1, 5)
        .map((post: any) => (
          <div
            key={post.frontmatter.title}
            className="p-6 border-[1px] border-gray-200 shadow rounded-lg"
          >
            <h1 className="font-normal text-[20px] ">
              {post.frontmatter.title}
            </h1>
            <p dangerouslySetInnerHTML={{ __html: post.content }}></p>
            <small className="text-gray-500 text-sm mt-2">
              {post.frontmatter.posted_at}
            </small>
          </div>
        ))}
    </div>
  );
}

export default Views;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/components/why-i built-this.tsx
function WhyIBuiltThisWebsite() {
  return (
    <div>
      <div className=" flex flex-col justify-center max-w-[600px] mx-auto  
        <div className=" px-6  ">
          <h1 className="lowercase text-h1 ">
            Why He built this webstie?
          </h1>
          <p className="text-gray-500 mt-2 mb-6">
            he states &quot;as a fan of elon musk&apos;s work&quot; the video
            below gives him bigger perspective of life.
          </p>
        </div>
        <div className="px-6  ">
          <video controlsList="play" controls loop className="rounded-lg mt-4">
            <source
              src={"videos/elon-musk-about-problem-solving.mp4"}
              type="video/mp4"
            />
          </video>
        </div>

        <div className="mt-10 text-[17px] max-w-[600px]  px-6  py-2  
          <p>
            &quot;We have to be excited about the future, We have to do things
            that make us want to live, Life can&apos;t just be about solving
            problems.&quot;
          </p>
          <br />
          <p>-Elon Musk</p>
          <br />
          <p>He wrote little message:</p>
          <div className="bg-[#0B82FE] text-white p-4 rounded-3xl mt-2">
            <p>
              I built this website for fun, some people said &quot;why work hard
              on building this kinda useless website?&quot; the elon musk video
              above answers this ig.
            </p>
            <br />
            <p>
              people build portfolio websites showcasing skills and projects to
              get a job or get client i dont care about that i have added more
              of personality in this site, for reminder to my future self about
              the things i love at this time and not to lost it.
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}

export default WhyIBuiltThisWebsite;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/data/memes.ts
export const memes = [
  {
    title: "I don't build websites. we are not the same.",
    id: "1637721196337700866",
    tags: ["gus", "website", "web", "breaking bad", "opinion"],
    likes: 250,
    link: "https://twitter.com/anshrathodfr/status/1637721196337700866",
    created_on: "Mar 20, 2023",
    path: "/memes/we-are-not-the-same.jpeg",
    type: "image",
  },
  {
    title: "I am sorry, but you have to understand I can't go any much lower.",
    id: "1628256585381302273",
    tags: ["pawn stars", "chumlee", "friend", "gold", "website"],
    likes: 11,
    link: "https://twitter.com/anshrathodfr/status/1628256585381302273",
    created_on: "Feb 22, 2023",
    path: "/memes/all-i-can-do-is-50-gold-coins.jpeg",
    type: "image",
  },
  {
    title: "Ig we all have that classmate.",
    id: "1628618171795099651",
    tags: [
      "classmate",
      "linkedin",
      "apps",
      "web3",
      "full stack",
      "todo list",
      "weather app",
    ],
    likes: 34,
    link: "https://twitter.com/anshrathodfr/status/1628618171795099651",
    created_on: "Feb 23, 2023",
    path: "/memes/full-stack-dev-after-building-whether-app.jpeg",
    type: "image",
  },
  {
    title: "Me as a flutter developer finding js frameworks to build web apps.",
    id: "1629008037582106624",
    tags: ["flutter", "web", "weed", "red", "reactjs", "angular", "vuejs"],
    likes: 22,
    link: "https://twitter.com/anshrathodfr/status/1629008037582106624",
    created_on: "Feb 24, 2023",
    path: "/memes/flutter-dev-on-drugs.jpeg",
    type: "image",
  },
  {
    title: "Some founders says @supabase has some superpowers for saving time.",
    id: "1629374189143740419",
    tags: ["supabase", "founders", "superpower"],
    likes: 29,
    link: "https://twitter.com/anshrathodfr/status/1629374189143740419",
    created_on: "Feb 25, 2023",
    path: "/memes/supabse-meme.jpeg",
    type: "image",
  },
  {
    title: "Yes, please developers how?",
    id: "1629727538967724033",
    tags: ["nextjs", "reactjs", "web"],
    likes: 50,
    link: "https://twitter.com/anshrathodfr/status/1629727538967724033",
    created_on: "Feb 26, 2023",
    path: "/memes/why-nextjs-is-framework.jpeg",
    type: "image",
  },
  {
    title: "is it only me or every one double checks if it's copied or not?",
    id: "1630091161628024832",
    tags: ["spounch", "shortcut"],
    likes: 15,
    link: "https://twitter.com/anshrathodfr/status/1630091161628024832",
    created_on: "Feb 27, 2023",
    path: "/memes/6-ctrl-c.jpeg",
    type: "image",
  },
  {
    title: "well, I started to watch some tutorials about ML some days ago.",
    id: "1630457593654042624",
    tags: ["chatGPT", "python", "google", "hello world", "ai/ml"],
    likes: 15,
    link: "https://twitter.com/anshrathodfr/status/1630457593654042624",
    created_on: "Feb 28, 2023",
    path: "/memes/hello-world-in-python-beating-chatgpt.jpeg",
    type: "image",
  },
  {
    title: "Sometimes, It's a roller coaster ride after you hit `flutter run`",
    id: "1630816958852546562",
    tags: ["flutter", "dart", "android"],
    likes: 13,
    link: "https://twitter.com/anshrathodfr/status/1630816958852546562",
    created_on: "Mar 1, 2023",
    path: "/memes/flutter-dev-compiling-app.jpeg",
    type: "image",
  },
  {
    title: "well, in real-world vscode ftw.",
    id: "1631179089875816448",
    tags: ["vscode", "college", "web", "tabnine", "exams", "github"],
    likes: 20,
    link: "https://twitter.com/anshrathodfr/status/1631179089875816448",
    created_on: " Mar 2, 2023",
    path: "/memes/me-writing-code-on-paper-in-exams.jpeg",
    type: "image",
  },
  {
    title:
      "It happens in my every project. and I end up refactoring them after some months.",
    id: "1631544766188908545",
    tags: ["code", "project", "refactor", "clean code", "drawing", "horse"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1631544766188908545",
    created_on: "Mar 3, 2023",
    path: "/memes/follow-best-proctices.jpeg",
    type: "image",
  },
  {
    title: "Do you argue over designs?",
    id: "1631904633391050752",
    tags: ["designers", "argue", "developers", "frontend"],
    likes: 27,
    link: "https://twitter.com/anshrathodfr/status/1631904633391050752",
    created_on: "Mar 4, 2023",
    path: "/memes/developers-arguing-with-designers.jpeg",
    type: "image",
  },
  {
    title: "This is how you can save 10 mins in your work hour while working.",
    id: "1632264256010764288",
    tags: ["twitter", "new tab"],
    likes: 12,
    link: "https://twitter.com/anshrathodfr/status/1632264256010764288",
    created_on: "Mar 5 2023",
    path: "/memes/you-will-not-open-twitter-after-opening-new-tab.jpeg",
    type: "image",
  },
  {
    title:
      "We, developers, are not dumb!  we are just expecting a different error message.",
    id: "1632627901643276292",
    tags: ["error", "developer", "dumb", "expecting"],
    likes: 9,
    link: "https://twitter.com/anshrathodfr/status/1632627901643276292",
    created_on: "Mar 6, 2023",
    path: "/memes/me-seeing-error-for-the-5th-time.jpeg",
    type: "image",
  },
  {
    title: "Personally, I think having a good Github as a dev is a superpower.",
    id: "1632994309363335174",
    tags: ["github", "developer", "superpower", "story"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1632994309363335174",
    created_on: "Mar 7, 2023",
    path: "/memes/one-hell-of-developer.jpeg",
    type: "image",
  },
  {
    title: "mature meme",
    id: "1633353683772604417",
    tags: ["mature", "app", "startup", "founders", "story"],
    likes: 19,
    link: "https://twitter.com/anshrathodfr/status/1633353683772604417",
    created_on: "Mar 8, 2023",
    path: "/memes/mature-meme.jpeg",
    type: "image",
  },
  {
    title: "14 years kids huh",
    id: "1633715821125017600",
    tags: ["14-year", "kids", "developer", "code", "twitter", "story"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1633715821125017600",
    created_on: "Mar 9, 2023",
    path: "/memes/14-year-old-kids-can-code-better-than-you.jpeg",
    type: "image",
  },
  {
    title: "people who review code won't forgive you.",
    id: "1634441340976091136",
    tags: ["code", "horse", "variables", "javascript"],
    likes: 8,
    link: "https://twitter.com/anshrathodfr/status/1634441340976091136",
    created_on: "Mar 11, 2023",
    path: "/memes/how-do-you-name-your-variables.jpeg",
    type: "image",
  },
  {
    title: "Yay! my code is running!",
    id: "1634800969929093120",
    tags: ["python", "code", "compiler"],
    likes: 3,
    link: "https://twitter.com/anshrathodfr/status/1634800969929093120",
    created_on: "Mar 12, 2023",
    path: "/memes/running-cpp-program-in-python-compiler.gif",
    type: "image",
  },
  {
    title: "Developers, this is called OCD - obsessive coding disorder",
    id: "1635184517093752833",
    tags: ["discorder", "code", "constistency", "animal", "app", "apps"],
    likes: 37,
    link: "https://twitter.com/anshrathodfr/status/1635184517093752833",
    created_on: "Mar 13, 2023",
    path: "/memes/it-is-disorder.jpeg",
    type: "image",
  },
  {
    title: "Frontend developers while working for someone else",
    id: "1635548880682078209",
    tags: ["frontend", "developers", "animal", "routine"],
    likes: 21,
    link: "https://twitter.com/anshrathodfr/status/1635548880682078209",
    created_on: "Mar 14, 2023",
    path: "/memes/i-wake-up-and-suffer.jpeg",
    type: "image",
  },
  {
    title: "Ever happened to you?",
    id: "1635909519157886977",
    tags: ["breaking bad", "backend", "pr", "github", "server"],
    likes: 3,
    link: "https://twitter.com/anshrathodfr/status/1635909519157886977",
    created_on: "Mar 15, 2023",
    path: "/memes/backend-server-crashed.gif",
    type: "image",
  },
  {
    title: "Flutter developers would love to hear more.",
    id: "1636271664844484610",
    tags: ["startup", "founders", "investers", "flutter", "getx"],
    likes: 96,
    link: "https://twitter.com/anshrathodfr/status/1636271664844484610",
    created_on: "Mar 16, 2023",
    path: "/memes/flutter-wont-scale-as-your-app-gets-complex.jpeg",
    type: "image",
  },
  {
    title: "The dog was a developer.",
    id: "1636634026852204545",
    tags: ["dog", "developer", "ai/ml", "chatGPT", "story"],
    likes: 21,
    link: "https://twitter.com/anshrathodfr/status/1636634026852204545",
    created_on: "Mar 17, 2023",
    path: "/memes/ai-can-build-website-from-sketch.jpeg",
    type: "image",
  },
  {
    title: "And still, the backend will be crashed in the 10th loop.",
    id: "1636996429519499268",
    tags: ["backend", "server", "spammer", "developer", "bateman", "sigma"],
    likes: 13,
    link: "https://twitter.com/anshrathodfr/status/1636996429519499268",
    created_on: "Mar 18, 2023",
    path: "/memes/spammer-tester.gif",
    type: "image",
  },
  {
    title: "well, that's impossible.",
    id: "1637360564253999106",
    tags: ["ui", "designers", "backend", "bug", "sigma", "homelander"],
    likes: 11,
    link: "https://twitter.com/anshrathodfr/status/1637360564253999106",
    created_on: "Mar 19, 2023",
    path: "/memes/ui-designer-solved-backend-bug.mp4",
    type: "video",
  },
  {
    title: "At least I can refer someone. who also might say no.",
    id: "1638085630398742528",
    tags: ["client", "breaking bad", "developer"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1638085630398742528",
    created_on: "Mar 21, 2023",
    path: "/memes/client-with-low-budget.mp4",
    type: "video",
  },
  {
    title: "I'll try not to tweet or create opinionated memes.",
    id: "1638446222246543360",
    tags: ["twitter", "controversial", "opinion"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1638446222246543360",
    created_on: "Mar 22, 2023",
    path: "/memes/controversial-tweet-geting-more-reach.jpeg",
    type: "image",
  },
  {
    title: "Aspiring* web dev willy wonka didn't like the fact.",
    id: "1638808347842596865",
    tags: ["aspiring", "web", "dev", "willy", "wonka", "developer"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1638808347842596865",
    created_on: "Mar 23, 2023",
    path: "/memes/aspiring-web-developer-willy-wonka.jpeg",
    type: "image",
  },
  {
    title:
      "Now it takes 5 sec to write code using chatGPT which I usually took 5 hours to write.",
    id: "1640257904866390017",
    tags: ["black guy", "really", "chatGPT", "ai/ml", "developer", "code"],
    likes: 13,
    link: "https://twitter.com/anshrathodfr/status/1640257904866390017",
    created_on: "Mar 27, 2023",
    path: "/memes/your-code-will-be-your-legacy.jpeg",
    type: "image",
  },
  {
    title: "Developers, chatGPT won't make you feel dumb at least.",
    id: "1640622315120599046",
    tags: ["developer", "chatGPT", "ai/ml", "code"],
    likes: 7,
    link: "https://twitter.com/anshrathodfr/status/1640622315120599046",
    created_on: "Mar 28, 2023",
    path: "/memes/ask-chatgpt.jpeg",
    type: "image",
  },
  {
    title:
      "with the help of GitHub copilot, chatGPT, and other AI tools we are gonna review/test/debug the AI-written code mostly than write the whole code on our own.",
    id: "1640982933874909186",
    tags: [
      "github",
      "chatGPT",
      "ai/ml",
      "developer",
      "code",
      "debug",
      "test",
      "review",
    ],
    likes: 4,
    link: "https://twitter.com/anshrathodfr/status/1640982933874909186",
    created_on: "Mar 29, 2023",
    path: "/memes/you-are-broke.jpeg",
    type: "image",
  },
  {
    title: "this one is from the latest experience.",
    id: "1647132705480404993",
    tags: ["chatGPT", "ai/ml", "developer", "code", "experience", "thor"],
    likes: 7,
    link: "https://twitter.com/anshrathodfr/status/1647132705480404993",
    created_on: "Apr 15, 2023",
    path: "/memes/chatgpts-response-after-regenrating-it-for-fifth-time.jpeg",
    type: "image",
  },
  {
    title: "once in a while a day in the life of Flutter dev.",
    id: "1648572874574245891",
    tags: ["flutter", "getx", "experience"],
    likes: 22,
    link: "https://twitter.com/anshrathodfr/status/1648572874574245891",
    created_on: "Apr 19, 2023",
    path: "/memes/why-not-getx.jpeg",
    type: "image",
  },
  {
    title:
      "Yesterday, in the LinkedIn group I show someone's post lol, I enjoyed the comment section.",
    id: "1648917561398943745",
    tags: ["linkedin", "breaking bad", "comment", "opinion"],
    likes: 6,
    link: "https://twitter.com/anshrathodfr/status/1648917561398943745",
    created_on: "Apr 20, 2023",
    path: "/memes/shared-opinion-on-linkedin.mp4",
    type: "video",
  },
  {
    title:
      "Sorry but then it throws runtime-type errors. we are not used to it until we use a cast.",
    id: "1649317606937985024",
    tags: ["flutter", "type", "error", "javascript", "cast"],
    likes: 12,
    link: "https://twitter.com/anshrathodfr/status/1649317606937985024",
    created_on: "Apr 21, 2023",
    path: "/memes/flutter-developers-trying-out-javascript-after-years.jpeg",
    type: "image",
  },
  {
    title:
      "Dart & typescript developers can understand what went wrong. try to see it carefully.",
    id: "1649732294607794176",
    tags: ["dart", "flutter", "typescript", "cast"],
    likes: 16,
    link: "https://twitter.com/anshrathodfr/status/1649732294607794176",
    created_on: "Apr 22, 2023",
    path: "/memes/when-you-start-using-cast.jpeg",
    type: "image",
  },
  {
    title: "I selected and commented the code. bug is solved.",
    id: "1650044144234971137",
    tags: ["bug", "comment", "code"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1650044144234971137",
    created_on: "Apr 23, 2023",
    path: "/memes/how-did-you-solve-the-bug.jpg",
    type: "image",
  },
  {
    title: "This will be me to my kids:",
    id: "1650413182081544194",
    tags: ["ai/ml", "chatGPT", "developer", "code", "stackoverflow"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1650413182081544194",
    created_on: "Apr 24, 2023",
    path: "/memes/back-in-the-day.jpeg",
    type: "image",
  },
  {
    title: "I'm serial killer.",
    id: "1650769169422471168",
    tags: ["sigma", "developer", "debug", "code"],
    likes: 23,
    link: "https://twitter.com/anshrathodfr/status/1650769169422471168",
    created_on: "Apr 25, 2023",
    path: "/memes/debuging-code-sigma-meme.jpeg",
    type: "image",
  },
  {
    title:
      "Gone but not forgotten, our heavenly god may not open heaven's door for your soul.",
    id: "1651138607145529344",
    tags: ["developer", "freelancer", "story", "experience"],
    likes: 14,
    link: "https://twitter.com/anshrathodfr/status/1651138607145529344",
    created_on: "Apr 26, 2023",
    path: "/memes/100-dollor-gig.jpeg",
    type: "image",
  },
  {
    title: "Who is confused here? can not find any javascript developer.",
    id: "1651565037889150976",
    tags: ["javascript", "developer", "code", "experience"],
    likes: 27,
    link: "https://twitter.com/anshrathodfr/status/1651565037889150976",
    created_on: "Apr 27, 2023",
    path: "/memes/weired-javascript.mp4",
    type: "video",
  },
  {
    title: "Sigma tech bro @TheJackForge once said.....",
    id: "1651854321015832577",
    tags: ["comment", "code", "sigma"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1651854321015832577",
    created_on: "Apr 28, 2023",
    path: "/memes/writing-comments-is-bad-practice.jpeg",
    type: "image",
  },
  {
    title: "you use GitHub copilot, right?",
    id: "1652206146701123585",
    tags: ["github", "copilot", "ai/ml", "code"],
    likes: 16,
    link: "https://twitter.com/anshrathodfr/status/1652206146701123585",
    created_on: "Apr 29, 2023",
    path: "/memes/github-copilot-meme.mp4",
    type: "video",
  },
  {
    title: "Developers have you ever felt this?",
    id: "1652941480997076992",
    tags: ["developer", "experience", "story", "hype", "tech"],
    likes: 5,
    link: "https://twitter.com/anshrathodfr/status/1652941480997076992",
    created_on: "May 1, 2023",
    path: "/memes/i-am-tired-boss.jpeg",
    type: "image",
  },
  {
    title: "Bro, not cool. at least call openAI API in the app.",
    id: "1653666508780761088",
    tags: ["openAi", "ai/ml", "producthunt", "launch", "tech"],
    likes: 15,
    link: "https://twitter.com/anshrathodfr/status/1653666508780761088?s=20",
    created_on: "May 3, 2023",
    path: "/memes/not-cool-bro-product-launch.jpeg",
    type: "image",
  },
  {
    title: "Believe it or not, we are tech geniuses. ask your cousins.",
    id: "1654034729769861122",
    tags: ["taylor", "inspect", "html", "hack", "genius"],
    likes: 10,
    link: "https://twitter.com/anshrathodfr/status/1654034729769861122?s=20",
    created_on: "May 4, 2023",
    path: "/memes/kanye-west-taylor-swift-meme.jpeg",
    type: "image",
  },
  {
    title: "Maybe he meant 'eating while debugging'.",
    id: "1654391038318981120",
    tags: ["fun fact", "fat guy", "error", "code", "hack"],
    likes: 6,
    link: "https://twitter.com/anshrathodfr/status/1654391038318981120?s=20",
    created_on: "May 5, 2023",
    path: "/memes/confident-fat-guy-advise.jpeg",
    type: "image",
  },
  {
    title: "Some nerd developers trying to be cool.",
    id: "1655487764048248832",
    tags: ["fun fact", "fat guy", "error", "code", "hack"],
    likes: 6,
    link: "https://twitter.com/anshrathodfr/status/1655487764048248832?s=20",
    created_on: "May 8, 2023",
    path: "/memes/me-trying-too-type-faster.mp4",
    type: "video",
  },
  {
    title: "Did my best to use this template .",
    id: "1658461994922418178",
    tags: ["ai/ml", "todo", "app", "dank"],
    likes: 35,
    link: "https://twitter.com/anshrathodfr/status/1658461994922418178?s=20",
    created_on: "May 16, 2023",
    path: "/memes/ai-in-todo-app.jpeg",
    type: "image",
  },
  {
    title: "Huh! content creators these days.",
    id: "1660940642975981568",
    tags: ["content creators", "story", "ai/ml"],
    likes: 80,
    link: "https://twitter.com/anshrathodfr/status/1660940642975981568?s=20",
    created_on: "May 23, 2023",
    path: "/memes/10-ai-tool-that-you-dont-know-about.jpg",
    type: "image",
  },
  {
    title: "Flutter developers sorry!🙂",
    id: "1665662788017049602",
    tags: ["flutter", "sarcasm", "native", "framework", "language"],
    likes: 270,
    link: "https://twitter.com/anshrathodfr/status/1665662788017049602?s=20",
    created_on: "Jun 5, 2023",
    path: "/memes/native-framwork-and-languages-flutter.jpeg",
    type: "image",
  },
];


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/data/pd.ts
import PocketBase from "pocketbase";

const pb = new PocketBase(process.env.POCKETBASE_API!);

export default pb;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/data/projects.ts
export const projects: any = [
  {
    name: "Cineast",
    madeWith: "Flutter, Node.js, PostgreSQL",
    date: "22 Feb 2022",

    type: "horizontal",

    long_description:
      "Social media platform for movie enthusiasts. Share thoughts, reviews, and ratings about movies/tv-shows with your social network. <br/><br/>Scroll through reviews and thoughts about movies from the people you follow on your personalized home feed. Explore top trending movies & tv shows and get details about them. Find them by a specific genre or from actor/actresses or crew members and filter by any desired language.<br/><br/>Browse popular, highly rated, and most anticipated films, including trailers, member ratings, artwork, cast + crew details, studios, genres, and popular reviews.<br/><br/>Follow Other people on the platform & get reviews about what they are watching.",
    description:
      "Social media platform for movie geeks. share thoughts of movie to your circle.",
    url: "https://play.google.com/store/apps/details?id=com.cineast.android",
    images: ["Cineast-1.PNG", "Cineast-2.PNG", "Cineast-3.PNG"],
    image: "Cineast-1.PNG",
  },
  {
    name: "Musive",
    madeWith: "Flutter, Node.js, PostgreSQL, and Heroku",
    type: "horizontal",
    date: "18 Jan 2022",
    long_description:
      "Full-stack music player app is written in flutter and dart using node.js music API. Fully Functional music player with UI like Spotify app. Added 1000+ royalty-free music and information about artists. Application users can make their own playlist or collect liked songs.",
    description: "Fully working music streaming app with spotify UI design.",
    url: "https://github.com/Ansh-Rathod/Flutter-musive-app",
    images: ["Musive-1.PNG", "Musive-2.PNG", "Musive-3.PNG"],
    image: "Musive-3.PNG",
  },
  {
    name: "Photoarc",
    madeWith: "Flutter, Node.js  PostgreSQL and Heroku",
    type: "horizontal",
    date: "24 nov 2021",
    long_description:
      "(Full-stack) Fully functional social media app (Instagram clone) written in flutter and dart with backend node.js and Postgres SQL.",
    description:
      "(Full-stack) Fully functional social media app (Instagram clone).",
    url: "https://github.com/Ansh-Rathod/Flutter-Photoarc-app",
    images: [
      "Photoarc-1.PNG",
      "Photoarc-2.PNG",
      "Photoarc-3.PNG",
      "Photoarc-4.PNG",
    ],
    image: "Photoarc-1.PNG",
  },

  // {
  // 	name: 'Tiktok video scroller',
  // 	madeWith: 'Flutter',
  // 	date: '5 september 2021',
  // 	description:
  // 		"Real short video app with firebase and pixels API. Where user can create a short video with pixels' stock videos.",
  // 	url: 'https://github.com/Ansh-Rathod/Flutter-Tiktok-Videos',
  // 	image: 'projects/Web capture_4-12-2021_213416_github.com.jpeg',
  // },

  {
    name: "MovieDb",
    madeWith: "Flutter",
    type: "horizontal",
    date: "13 July 2021",
    long_description:
      "Find The Latest, trending, upcoming movies/tv-shows with MovieDB app. The app contains all information about movies/tv-shows and find similar movies/shows of your intrest. Browse all genres, video trailers, backdrops, logos, and posters for any movie.\n App made using flutter as frontend and Nodejs as backend.",
    description:
      "Find The Latest trending and upcoming movies and tv shows with MovieDB app.",
    url: "https://github.com/Ansh-Rathod/Flutter-Bloc-MovieDB-App",
    images: ["Moviedb-1.PNG", "Moviedb-2.PNG", "Moviedb-3.PNG"],
    image: "Moviedb-2.PNG",
  },

  {
    name: "Quizer",
    madeWith: "Flutter",
    type: "horizontal",
    date: "24 june 2021",

    description:
      "Quiz application with open trivia API. Play quiz online and test your trivia knowledge.",
    long_description: "Quiz application with open trivia API.",
    url: "https://github.com/Ansh-Rathod/Flutter-bloc-Animalia",
    images: ["Quizer-1.PNG", "Quizer-2.PNG", "Quizer-3.PNG"],
    image: "Quizer-1.PNG",
  },
  {
    name: "Animalia",
    type: "horizontal",
    madeWith: "Flutter",
    date: "16 june 2021",
    description:
      "Discover cute, wild, and weird animals using the Animalia app.",
    long_description:
      "Discover cute, wild, and weird animals using the Animalia app.",
    url: "https://github.com/Ansh-Rathod/Flutter-bloc-Animalia",
    images: ["Animalia-1.PNG", "Animalia-2.PNG", "Animalia-3.PNG"],
    image: "Animalia-3.PNG",
  },

  {
    name: "Sponacular",
    madeWith: "Flutter",
    date: "25 May 2021",
    type: "horizontal",

    long_description:
      "A Recipe app with spoonacular API.App includes 5,0000+ recipes. cost breakdown per servings.",
    description:
      "A Recipe app with spoonacular API.App includes 5,0000+ recipes. cost breakdown per servings.",
    url: "https://github.com/Ansh-Rathod/Flutter-Bloc-Recipe-app",
    images: ["Spoonacular-1.PNG", "Spoonacular-2.PNG", "Spoonacular-3.PNG"],
    image: "Spoonacular-1.PNG",
  },
  {
    name: "Marvel",
    madeWith: "Flutter",
    type: "horizontal",
    date: "12 mar 2021",

    description:
      "Simple Superheros information app with animations and local database.",
    long_description:
      "Simple Superheros information app with animations and local database.",
    url: "https://github.com/Ansh-Rathod/Flutter-Bloc-Marvel-App",
    images: ["Marvel-1.PNG", "Marvel-2.PNG", "Marvel-3.PNG"],
    image: "Marvel-1.PNG",
  },
];

export const usefulProjects: any = [
  {
    name: "persisto",
    madeWith: "Flutter, sqlite, nextjs",
    date: "5 may 2025",
    type: "vertical",
    long_description:
      "<div>build a life you're proud of, one routine at a time. whether you're planning your day, staying consistent, or reflecting on what matters, persisto provides the tools you need to stay focused, mindful, and in control of your progress.</div>",
    description: "small wins, every day!",
    url: "https://persis.to",
    images: [
      "persisto-1.png",
      "persisto-2.png",
      "persisto-3.png",
      "persisto-4.png",
      "persisto-5.png",
      "persisto-6.png",
      "persisto-7.png",
      "persisto-8.png",
    ],
    image: "persisto.png",
  },
  {
    name: "Pimosa",
    madeWith: "Flutter, sqlite, nextjs, FFmpeg, ImageMagick",
    date: "27 July 2024",
    type: "vertical",
    long_description:
      "<div>Pimosa: Simple Video, Photo & Music Editing Tools in One App<br/>Convert, edit, and enhance video, photo, and music files easily. Batch processing for faster work. Simple tools for everyone.<br/><br/>Tools are organized into categories by file type:<br/><br/>Video Tools:<br/>• Compress<br/>• Merge & Combine<br/>• Resize & Rotate<br/>• Speed Control<br/>• Flip & Mirror<br/>• Convert Formats<br/>• Extract Audio<br/>• Trim & Cut<br/><br/>Image Tools:<br/>• Convert Formats<br/>• Compress<br/>• Resize<br/>• Crop<br/><br/>Audio Tools:<br/>• Extract from Video<br/>• Convert Formats<br/>• Edit Metadata<br/>• Create Waveform Videos<br/><br/>Video Playground:<br/>• Crop Videos<br/>• Combine Clips<br/><br/>All your essential media editing tools—in one place!</div>",
    description: "Simple Video, Photo & Music Editing Tools in one app. ",
    url: "https://pimosa.app",
    images: [
      "pimosa-1.png",
      "pimosa-2.png",
      "pimosa-3.png",
      "pimosa-4.png",
      "pimosa-5.png",
      "pimosa-6.png",
      "pimosa-7.png",
      "pimosa-8.png",
    ],
    image: "pimosa-logo.png",
  },
  {
    name: "Keystro",
    madeWith: "Flutter",
    date: "23 April 2024",
    type: "vertical",
    long_description:
      "Show which key you pressing to your audience, Highlight your cursor, and hear realistic keyboard sounds! Available for Windows and MacOS.<br/> <br/> Fully Customizable Floating Keystroke Widget.Personalize keycap colors, Explore diffrent styles and themes. Enjoy Flexible widget placement: Any pixel of your screen; Your choice! <br/> <br/> Highlight the cursor. Our cursor highlighter is highly customizable. Pick your shape, size, and colors. You'll effortlessly create a breathtaking design that will amaze your audience.<br/><br/>Hear realistic keyboard sounds! Don't have mechanical keyboards but miss those juicy sounds? Thock is the perfect feature we brought for you.",
    description: "Enhance Your Screen Recording Experience!",
    url: "https://keystro.app",
    images: ["keystro-1.png", "keystro-2.png", "keystro-3.png"],
    image: "keystro-logo.png",
  },
];

export const newProjects: any = [
  {
    name: "Craftor",
    madeWith: "Flutter",
    date: "8 July 2023 - April 2024",
    type: "vertical",
    description:
      "Attempt of building a graphic design tool better than canva from scratch as solo developer.",
    long_description:
      "This app was attempt of building a grapich design tool better than canva from scratch. I went very deep into the concepts of flutter and maths to build the features of this app. usually i build apps solo but this time i got friend who helped me with some parts of figuring out maths.<br/><br/> i nearly completed the app like 70% of the feautres but i spent 8 months on this project and tired as hell to finish it. I abandoned the porject in april 2024 because the project was quite ambitious also required so much work to be done to launch in the very competive market among big design tools, then i started building the small app 'keystro' with friend Damy. <br/> <br/> Craftor is first abandon project and it will allways be the best app i ever built, I built this app in public you can check out the journey of building & demo videos on this official twitter account i made for Craftor app [hit the visit button below].",
    url: "https://x.com/craftor_app",
    images: ["Craftor-1.jpeg", "Craftor-2.jpeg", "Craftor-3.jpeg"],
    image: "Craftor-1.jpeg",
  },
  {
    name: "Schedurio",
    madeWith: "Flutter, X/Twitter API,supabase/PostgreSQL",
    date: "8 April 2023",
    type: "vertical",
    description: "Open source Tweet schedular desktop app.",
    long_description:
      "Fully functional Tweet schedular desktop app with Supabase and PostgreSQL. Built while supabase launch week hackathon. and got 1st runner up prize.",
    url: "https://github.com/Ansh-Rathod/Flutter-Schedurio-app",
    images: [
      "Schedurio-1.png",
      "Schedurio-2.png",
      "Schedurio-3.png",
      "Schedurio-4.png",
    ],
    image: "Schedurio-1.png",
  },
  {
    name: "Musive Webapp",
    madeWith: "Nextjs, Node.js, PostgreSQL",
    date: "27 Oct 2022",
    type: "vertical",
    long_description:
      "Musive is a full-stack music player app. It is written in Nextjs and Node.js with PostgreSQL as database. The app has a beautiful UI and is fully functional. Users can create their own playlists and collect liked songs. The app is fully responsive and works on all devices.",
    description:
      "Full Spotify clone webapp with Nextjs and Node.js with PostgreSQL as database.",
    url: "https://github.com/Ansh-Rathod/Nextjs-musive-app",
    images: [
      "Musive-web-1.png",
      "Musive-web-2.png",
      "Musive-web-3.png",
      "Musive-web-4.png",
    ],
    image: "Musive-web-1.png",
  },
];

export const allHisProjects: any = [
  ...newProjects,
  ...projects,
  ...usefulProjects,
];


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/next-env.d.ts
/// <reference types="next" />
/// <reference types="next/image-types/global" />
/// <reference path="./.next/types/routes.d.ts" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/pages/api-reference/config/typescript for more information.


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/open-next.config.ts
import { defineCloudflareConfig } from "@opennextjs/cloudflare";


export default defineCloudflareConfig({

});


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/_app.tsx
import type { AppProps } from "next/app";
import Head from "next/head";
import Script from "next/script";
import localFont from 'next/font/local';
import "../styles/globals.css";

// Configure SpaceMono as the only font
const spaceMono = localFont({
  src: '../public/fonts/SpaceMono-Regular.ttf',
  variable: '--font-space-mono',
  display: 'swap',
});

function MyApp({ Component, pageProps }: AppProps) {
  return (
    <div className={`${spaceMono.variable}`}>
      <Head>
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
          integrity="sha512-KfkfwYDsLkIlwQp6LFnl8zNdLGxu9YAA1QvwINks4PhcElQSvqcyVLLD9aMhXd13uQjoXtEKNosOWaZqXgel0g=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />

      </Head>
      <Script
        defer
        src="https://cloud.umami.is/script.js"
        data-website-id="c0b35b73-97bb-431d-b0da-dcb3c4582bca"
      ></Script>

      <Component {...pageProps} />
    </div>
  );
}

export default MyApp;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/api/hello.ts
// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next'

type Data = {
  name: string
}

export default function handler(
  req: NextApiRequest,
  res: NextApiResponse<Data>
) {
  res.status(200).json({ name: 'John Doe' })
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/api/strava.ts
import pb from "data/pd";
import { NextApiRequest, NextApiResponse } from "next";

async function getFreshAccessToken(refresh_token: string) {
  const response = await fetch("https://www.strava.com/api/v3/oauth/token", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      client_id: process.env.STRAVA_CLIENT_ID,
      client_secret: process.env.STRAVA_CLIENT_SECRET,
      grant_type: "refresh_token",
      refresh_token,
    }),
  });

  if (!response.ok) {
    throw new Error(`Failed to refresh token: ${response.statusText}`);
  }

  return await response.json();
}

async function getTimeSlot() {
  const hour = new Date().getHours();
  if (hour >= 5 && hour < 12) return "morning";
  if (hour >= 12 && hour < 18) return "evening";
  return "night";
}

async function hasRequestedToday(time_slot: string) {
  const today = new Date().toISOString().split("T")[0]; // YYYY-MM-DD
  try {
    const record = await pb
      .collection("request_times")
      .getFirstListItem(`time_slot="${time_slot}" && request_date>="${today}"`);
    return !!record;
  } catch (e) {
    return false; // No request found for today
  }
}

async function saveRequestTime(time_slot: string) {
  await pb.collection("request_times").create({
    time_slot,
    request_date: new Date().toISOString(),
  });
}

async function saveActivities(activites: any[]) {
  for (const activity of activites) {
    try {
      // Check if activity already exists to avoid duplicates
      const exists = await pb
        .collection("activites")
        .getFirstListItem(`activity_id="${activity.id}"`, {
          requestKey: null,
        })
        .catch(() => null);

      if (!exists) {
        await pb.collection("activites").create({
          activity_id: activity.id,
          name: activity.name,
          distance: activity.distance,
          moving_time: activity.moving_time,
          elapsed_time: activity.elapsed_time,
          type: activity.type,
          start_date: activity.start_date,
          start_date_local: activity.start_date_local,
          timezone: activity.timezone,
          total_elevation_gain: activity.total_elevation_gain,
          average_speed: activity.average_speed,
          max_speed: activity.max_speed,
          elev_high: activity.elev_high,
          elev_low: activity.elev_low,
        });
      }
    } catch (error) {}
  }
}

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  try {
    await pb.admins.authWithPassword(
      process.env.DBUSERNAME!,
      process.env.DBPASSWORD!
    );

    const time_slot = await getTimeSlot();
    const { start, end } = req.query;
    // Check if we've already made a request for this time slot today
    if (await hasRequestedToday(time_slot)) {
      // Fetch activites from PocketBase
      const filter =
        start && end ? `start_date>="${start}" && start_date<="${end}"` : "";
      const activites = await pb.collection("activites").getList(1, 50, {
        filter,
        sort: "-start_date",
      });
      return res.status(200).json(activites.items);
    }

    // Get token from PocketBase
    const record = await pb.collection("tokens").getFirstListItem("");
    let access_token = record.access_token;

    // Check if token is expired
    if (Date.now() / 1000 > record.expires_at) {
      const newToken = await getFreshAccessToken(record.refresh_token);

      // Update token in PocketBase
      await pb.collection("tokens").update(record.id, {
        access_token: newToken.access_token,
        refresh_token: newToken.refresh_token,
        expires_at: newToken.expires_at,
      });

      access_token = newToken.access_token;
    }
    // Fetch activites from Strava
    const activitiesRes = await fetch(
      "https://www.strava.com/api/v3/athlete/activities",
      {
        headers: { Authorization: `Bearer ${access_token}` },
      }
    );

    if (!activitiesRes.ok) {
      throw new Error(`Strava API error: ${activitiesRes.statusText}`);
    }

    const activites = await activitiesRes.json();

    // Save activites to PocketBase
    await saveActivities(activites);

    // Record the request time
    await saveRequestTime(time_slot);

    // Fetch saved activites from PocketBase with date range filter
    const filter =
      start && end ? `start_date>="${start}" && start_date<="${end}"` : "";
    const savedActivities = await pb.collection("activites").getList(1, 50, {
      filter,
      sort: "-start_date",
    });

    res.status(200).json(savedActivities.items);
  } catch (error) {
    console.error("Error in handler:", error);
    res.status(500).json({ error: "Internal server error" });
  }
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/index.tsx
import type { NextPage } from "next";

import About from "@/components/About";
import AllProjects from "@/components/AllProjects";
import ActivityCalendar from "@/components/calender";
import ChessStats from "@/components/chess";
import Contact from "@/components/Contact";
import Intro from "@/components/intro";
import MemesIntro from "@/components/memes";
import Skills from "@/components/Skills";
import UsefulProducts from "@/components/useful-products";
import Head from "next/head";
import { useRouter } from "next/router";
import Model from "../components/Model";
import { allHisProjects } from "../data/projects";

const Home: NextPage = () => {
  const router = useRouter();

  return (
    <div className="font-apple tracking-tighter lowercase">
      <Head>
        <meta property="og:title" content="Ansh Rathod" />
        <meta property="og:site_name" content="Ansh Rathod" />
        <meta property="og:url" content="https://ansh.life" />

        <meta
          property="og:description"
          content="A full-stack developer, Building Seamless mobile & web applications."
        />

        <meta
          property="og:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />

        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@anshrathodfr" />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta name="twitter:title" content="Ansh Rathod" />
        <meta
          name="twitter:description"
          content="A full-stack developer, Building Seamless mobile & web applications."
        />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />
        <title>Ansh Rathod</title>
      </Head>

      <div className="tracking-tighter">
        <Intro />

        <About />
        {/* <div className=" border-t-[0.6px] border-t-slate-200"></div> */}
        {/* <div
          className=" pt-14 max-w-[1200px] mx-auto flex flex-col
         items-center px-2"
        >
          <GithubCard data={data} />
        </div> */}
        {/* <div className="border-t-[1px] border-t-slate-300 "></div> */}
        {/* <Views posts={posts} /> */}
        {/* <div
          className="py-14 max-w-[1200px] mx-auto flex flex-col
         items-center px-4"
        >
          <MusiveCard />
        </div> */}
        {/* <div className="border-t-[1px] border-t-slate-300 mt-14"></div> */}
        <UsefulProducts />
        <AllProjects />
        <Skills />
        <ActivityCalendar />

        <ChessStats />
        <MemesIntro />
        {/* <WhyIBuiltThisWebsite /> */}
        <Contact />

        {/* <MyGallery /> */}
        <Model
          isOpen={!!router.query.slug}
          project={allHisProjects.find(
            (project: any) => project.name.toLowerCase() == router.query.slug
          )}
        />
      </div>
    </div>
  );
};

export default Home;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/memes.tsx
import Contact from "@/components/Contact";
import NavBar from "@/components/NavBar";
import MemesComponent from "@/components/memes/memes";
import Head from "next/head";

function Memes() {
  return (
    <div>
      <Head>
        <meta property="og:title" content="memeloper fr who?" />
        <meta property="og:site_name" content="memeloper.fr" />
        <meta property="og:url" content="https://ansh.life" />

        <meta
          property="og:description"
          content="From Code to Comic: Check the Hilarious Journey of a Programmer through Memes."
        />

        <meta
          property="og:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />

        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@anshrathodfr" />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta name="twitter:title" content="memeloper fr who?" />
        <meta
          name="twitter:description"
          content="From Code to Comic: Check the Hilarious Journey of a Programmer through Memes."
        />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/memes_intro_image_meta.png"
        />
        <title>memeloper fr who?</title>
      </Head>
      <div>
        {/* <LandingPage /> */}
        <NavBar />

        <MemesComponent />
        <Contact />
      </div>
    </div>
  );
}

export default Memes;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/projects/[slug].tsx
import Icon from "@/components/Icon";
import Slider from "@/components/slider";
import { allHisProjects } from "data/projects";
import { GetServerSidePropsContext } from "next";

import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";

function Project({ project }: { project: any }) {
  const router = useRouter();

  return (
    <div>
      <Head>
        <title>{project.name + " built by Ansh Rathod"}</title>
        <meta
          property="og:title"
          content={project.name + " built by Ansh Rathod"}
        />
        <meta
          property="og:site_name"
          content={project.name + " built by Ansh Rathod"}
        />
        <meta property="og:description" content={project.description} />
        <meta
          property="og:url"
          content={`https://ansh.life/projects/${project.name.toLowerCase()}`}
        />
        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta
          name="twitter:site"
          content={`https://ansh.life/projects/${project.name.toLowerCase()}`}
        />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta
          name="twitter:title"
          content={project.name + " built by Ansh Rathod"}
        />
        <meta name="twitter:description" content={project.description} />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/intro_image_meta.png"
        />
      </Head>

      <div className="overflow-y-hidden h-screen">
        <div
          className="py-2.5 px-4 w-screen  border-b-[0.5px] border-gray-300 font-poppins
               font-bold text-xl  "
        >
          <div
            className=" w-[700px] max-w-[700px] mx-auto
                      
               justify-between items-center "
          >
            <div
              className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700"
              onClick={() => router.push("/", "/", { shallow: true })}
            >
              <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
            </div>
            <p>{project.name}</p>
            <div
              className="cursor-pointer hover:bg-blue-100 px-2 
                rounded-md text-gray-400 hover:text-gray-700 invisible"
            >
              <i className="fa-sharp fa-solid fa-xmark fa-sm"></i>
            </div>
          </div>
        </div>
        <div
          className={`items-center
                    font-proxima  flex flex-col bg-white 
                     w-[700px] max-w-[700px] mx-auto
                      
                     `}
        >
          <div
            className="h-screen max-h-full
               w-full overflow-y-scroll "
          >
            <div className="flex justify-center">
              <Slider images={project.images} />
            </div>

            <div
              className="mb-12 flex flex-row justify-center text-center items-end 
                w-full px-10  
            >
              <div>
                <b className="pl-1.5 font-poppins">Share on</b>
                <div className="pt-5 flex flex-row">
                  <Icon
                    classes="fa-brands fa-linkedin"
                    url={`https://www.linkedin.com/sharing/share-offsite/?url=${project.url}`}
                  />

                  <Icon
                    classes="fa-brands fa-twitter"
                    url={`http://twitter.com/share?text=Check out this amazing app built by @AnshhRathod on github. view all projects on https://ansh.life&url=${project.url}&hashtags=flutter,opensource,github`}
                  />
                  <Icon classes="fa-regular fa-copy" />
                </div>
              </div>
            </div>

            <div className="mt-6 flex flex-row justify-start w-full px-12  
              <div>
                <b className="font-poppins">Description</b>
                <div
                  className="mt-1.5"
                  dangerouslySetInnerHTML={{
                    __html: project.long_description,
                  }}
                />
              </div>
            </div>

            <div className="my-6 flex flex-row justify-start w-full px-12  
              <div>
                <b className="font-poppins">Tech stack</b>
                <p className="mt-1.5 ">{project.madeWith}</p>
              </div>
            </div>
            <div className="my-6 flex flex-row justify-start w-full px-12  
              <div>
                <b className="font-poppins">Created on</b>
                <p className="mt-1.5 ">{project.date}</p>
              </div>
              <div className="mx-6">
                <b className="font-poppins">
                  {project.name != "Cineast" ? "Earned Stars" : "Downloads"}
                </b>
                <p className="mt-1">
                  <Image
                    src={
                      project.name != "Cineast"
                        ? `https://img.shields.io/github/stars/${project.url.replace(
                            "https://github.com/",
                            ""
                          )}?style=social`
                        : "https://img.shields.io/static/v1?label=Downloads&message=1k&color=%3CCOLOR%3E"
                    }
                    alt="stars"
                    height={26}
                    width={100}
                    className="object-contain"
                    unoptimized
                  />
                </p>
              </div>
            </div>
            <div className="mt-2 flex flex-row justify-center">
              <a href={project.url} target="_blank" rel="noreferrer">
                <div
                  className="pr-4 pl-3 py-2 lowercase font-proxima rounded-lg 
                  flex flex-row justify-center items-center text-center cursor-pointer bg-blue-500 text-white 
                   transition-all ease-in-out shadow-md shadow-blue-400 "
                >
                  {project.name != "Cineast" ? (
                    <>
                      <i className="fa-brands fa-github px-2" />
                      <p className="text-[12px]">view source code</p>
                    </>
                  ) : (
                    <>
                      <i className="fa-brands fa-google-play px-2" />
                      <p className="text-[12px]">Download now</p>
                    </>
                  )}
                </div>
              </a>
            </div>
            <div className="mb-[200px]"></div>
          </div>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps(params: GetServerSidePropsContext) {
  try {
    const data = allHisProjects.find(
      (project: any) => project.name.toLowerCase() == params.query.slug
    );
    if (!data) {
      return {
        notFound: true,
      };
    }
    return {
      props: {
        project: data,
      },
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
}

export default Project;


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/pages/switching-to-react-native/index.tsx
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

export default function Component() {
  return (
    <div>
      <Head>
        <title>We&apos;re forking React native. This is why.</title>
        <meta property="og:type" content="article" />
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:site" content="@anshrathodfr" />
        <meta name="twitter:creator" content="@anshrathodfr" />
        <meta
          name="twitter:title"
          content="I'm switching to react native. This is why"
        />
        <meta
          property="og:title"
          content="I'm switching to react native. This is why"
        />
        <meta
          property="og:site_name"
          content="I'm switching to react native. This is why"
        />
        <meta
          name="twitter:image"
          itemProp="image"
          content="https://ansh.life/clickbait2.png"
        />
        <meta
          property="og:image"
          itemProp="image"
          content="https://ansh.life/clickbait2.png"
        />
      </Head>
      <div className="min-h-screen bg-zinc-900 text-zinc-100 p-4 md:p-8">
        <div className="h-60"></div>
        <article className="max-w-3xl mx-auto space-y-8">
          <h1 className="text-4xl md:text-5xl font-bold leading-tight tracking-tight">
            After 4 years of building in flutter I&apos;m switching to react
            native. This is why.
          </h1>

          <div className="flex items-center gap-3">
            <div className="rounded-full w-10 h-10">
              <Image
                src={"/z_QA0GlL_400x400.jpg"}
                width={100}
                className="rounded-full"
                height={100}
                alt="Ansh Rathod"
              />
            </div>
            <div className="flex items-center gap-2 text-lg text-zinc-300">
              <span>Ansh Rathod</span>
              <span>•</span>
              <time dateTime="2024-10-27">October 30, 2024</time>
            </div>
          </div>

          <div className="space-y-6 text-lg leading-relaxed text-zinc-200">
            <p>
              Over the years, There are many debates or Beginners questioning on
              whether React Native is best or flutter? I am here to answer none
              of your questions. it was clickbait to get you here, Go touch
              grass you computer nerd, cut down the internet for a day and eat
              ice creem it&apos;s better than posting memes on twitter thats
              what my mom said. and about the switching framework i just use
              flutter why would i spend more time learning new framework, jsx
              syntex are bad and has horrible dev exprience with typescript type
              errors eww, if google kills flutter one day i dont care! we all
              will laugh and will make more memes to share on twitter and we all
              can go back to writing html css. in the end, having fun is all
              that matters.
            </p>

            <h2 className="text-3xl font-bold mt-12 mb-6">
              React Native&apos;s is the best (maybe)
            </h2>

            <p>
              if you wanna build a app choose react native, if you wanna have
              fun cho0se flutter, if you wanna make money lets share memes on
              twitter, i chose twitter that why im writing and yeah i built
              desktop app using flutter(i dont care about tech stack you
              shouldnt too) called{" "}
              <Link href={"https://pimosa.app"} className="text-blue-500">
                <span className="text-blue-400 cursor-pointer">
                  Pimosa it&apos;s all in one media tool kit buy now it is
                  useful tool
                </span>
              </Link>{" "}
              if flutter dies i dont care I&apos;m learning game dev, building
              UI is boring now after doing it for the 4 years.
            </p>
            <p>
              My belief is that make money by giving value to users and have
              fun, generally i like building so i dont care about the tech
              stack, i just want to build something that will be useful to
              users. dont get attached to these frameworks its just zeros and
              onezies, 2030 nope i wont be using it, or will i? maybe not maybe
            </p>

            <p>
              Rick Astley - Never Gonna Give You Up (Video) by Rick Astley link
              input here.
            </p>
          </div>
        </article>
        <div className="h-60"></div>
      </div>
    </div>
  );
}


// File: /Users/anshrathod/Desktop/My-Portfolio-Next-Js/styles/globals.css
@import "tailwindcss";

/* SpaceMono font applied globally */
body {
  font-family: var(--font-space-mono), "Space Mono", monospace;
}

/* Consistent Typography System */
.text-h1 {
  @apply text-2xl font-bold leading-tight;
}

.text-h2 {
  @apply text-xl font-bold leading-tight;
}

.text-h3 {
  @apply text-lg font-bold leading-tight;
}

.text-body {
  @apply text-base leading-relaxed;
}

.text-description {
  @apply text-sm leading-relaxed;
}

.text-caption {
  @apply text-xs leading-relaxed;
}

/* Consistent Padding System */
.container-padding {
  @apply px-6 max-w-2xl mx-auto;
}

/* Standard small-width container (consistent horizontal padding) */
.small-container {
  @apply max-w-[600px] mx-auto px-6;
}

.section-spacing {
  @apply py-16;
}

.content-spacing {
  @apply space-y-4;
}

/* Remove old font class overrides */
.font-poppins,
.font-proxima,
.font-apple {
  font-family: var(--font-space-mono), "Space Mono", monospace;
}

*.unselectable {
  pointer-events: none;
}

.musive {
  @apply from-[#6ac88e] to-[#45b875] shadow-[#45b875e1];
}

.photoarc {
  @apply to-[#4b6cb7] from-[#5b86e5] shadow-[#5b87e5d2];
}
.moviedb {
  @apply from-[#4dabc3] to-[#358293] shadow-[#4dabc3df];
}
.quizer {
  @apply from-[#9d68a6] to-[#923a8b] shadow-[#923a8bde];
}
.animalia {
  @apply from-[#63c648] to-[#3aa148] shadow-[#63c648d7];
}
.sponacular {
  @apply to-[#4e549b] from-[#6f6f87] shadow-[#6f6f87db];
}
.marvel {
  @apply from-[#ec6f66] to-[#FC354C] shadow-[#ec6f66db];
}

.cineast {
  @apply to-[#da3a55] from-[#ed7658] shadow-[#da3a55e3];
}

@layer utilities {
  @variants responsive {
    /* Chrome, Safari and Opera */
    .no-scrollbar::-webkit-scrollbar {
      display: none;
    }

    .no-scrollbar {
      -ms-overflow-style: none; /* IE and Edge */
      scrollbar-width: none; /* Firefox */
    }
  }
}


